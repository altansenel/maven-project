/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.ChqbllPayrollSource;
import org.demo.bean.jpa.ChqbllPayrollSourceEntity;
import java.util.Date;
import java.util.List;
import org.demo.business.service.ChqbllPayrollSourceService;
import org.demo.business.service.mapping.ChqbllPayrollSourceServiceMapper;
import org.demo.data.repository.jpa.ChqbllPayrollSourceJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of ChqbllPayrollSourceService
 */
@Component
@Transactional
public class ChqbllPayrollSourceServiceImpl implements ChqbllPayrollSourceService {

	@Resource
	private ChqbllPayrollSourceJpaRepository chqbllPayrollSourceJpaRepository;

	@Resource
	private ChqbllPayrollSourceServiceMapper chqbllPayrollSourceServiceMapper;
	
	public ChqbllPayrollSource findById(Integer id) {
		ChqbllPayrollSourceEntity chqbllPayrollSourceEntity = chqbllPayrollSourceJpaRepository.findOne(id);
		return chqbllPayrollSourceServiceMapper.mapChqbllPayrollSourceEntityToChqbllPayrollSource(chqbllPayrollSourceEntity);
	}

	public List<ChqbllPayrollSource> findAll() {
		Iterable<ChqbllPayrollSourceEntity> entities = chqbllPayrollSourceJpaRepository.findAll();
		List<ChqbllPayrollSource> beans = new ArrayList<ChqbllPayrollSource>();
		for(ChqbllPayrollSourceEntity chqbllPayrollSourceEntity : entities) {
			beans.add(chqbllPayrollSourceServiceMapper.mapChqbllPayrollSourceEntityToChqbllPayrollSource(chqbllPayrollSourceEntity));
		}
		return beans;
	}

	public ChqbllPayrollSource save(ChqbllPayrollSource chqbllPayrollSource) {
		return update(chqbllPayrollSource) ;
	}

	public ChqbllPayrollSource create(ChqbllPayrollSource chqbllPayrollSource) {
		ChqbllPayrollSourceEntity chqbllPayrollSourceEntity = chqbllPayrollSourceJpaRepository.findOne(chqbllPayrollSource.getId());
		if( chqbllPayrollSourceEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		chqbllPayrollSourceEntity = new ChqbllPayrollSourceEntity();
		chqbllPayrollSourceServiceMapper.mapChqbllPayrollSourceToChqbllPayrollSourceEntity(chqbllPayrollSource, chqbllPayrollSourceEntity);
		ChqbllPayrollSourceEntity chqbllPayrollSourceEntitySaved = chqbllPayrollSourceJpaRepository.save(chqbllPayrollSourceEntity);
		return chqbllPayrollSourceServiceMapper.mapChqbllPayrollSourceEntityToChqbllPayrollSource(chqbllPayrollSourceEntitySaved);
	}

	public ChqbllPayrollSource update(ChqbllPayrollSource chqbllPayrollSource) {
		ChqbllPayrollSourceEntity chqbllPayrollSourceEntity = chqbllPayrollSourceJpaRepository.findOne(chqbllPayrollSource.getId());
		chqbllPayrollSourceServiceMapper.mapChqbllPayrollSourceToChqbllPayrollSourceEntity(chqbllPayrollSource, chqbllPayrollSourceEntity);
		ChqbllPayrollSourceEntity chqbllPayrollSourceEntitySaved = chqbllPayrollSourceJpaRepository.save(chqbllPayrollSourceEntity);
		return chqbllPayrollSourceServiceMapper.mapChqbllPayrollSourceEntityToChqbllPayrollSource(chqbllPayrollSourceEntitySaved);
	}

	public void delete(Integer id) {
		chqbllPayrollSourceJpaRepository.delete(id);
	}

	public ChqbllPayrollSourceJpaRepository getChqbllPayrollSourceJpaRepository() {
		return chqbllPayrollSourceJpaRepository;
	}

	public void setChqbllPayrollSourceJpaRepository(ChqbllPayrollSourceJpaRepository chqbllPayrollSourceJpaRepository) {
		this.chqbllPayrollSourceJpaRepository = chqbllPayrollSourceJpaRepository;
	}

	public ChqbllPayrollSourceServiceMapper getChqbllPayrollSourceServiceMapper() {
		return chqbllPayrollSourceServiceMapper;
	}

	public void setChqbllPayrollSourceServiceMapper(ChqbllPayrollSourceServiceMapper chqbllPayrollSourceServiceMapper) {
		this.chqbllPayrollSourceServiceMapper = chqbllPayrollSourceServiceMapper;
	}

}
