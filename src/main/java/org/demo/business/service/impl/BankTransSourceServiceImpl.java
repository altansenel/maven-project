/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.BankTransSource;
import org.demo.bean.jpa.BankTransSourceEntity;
import java.util.Date;
import java.util.List;
import org.demo.business.service.BankTransSourceService;
import org.demo.business.service.mapping.BankTransSourceServiceMapper;
import org.demo.data.repository.jpa.BankTransSourceJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of BankTransSourceService
 */
@Component
@Transactional
public class BankTransSourceServiceImpl implements BankTransSourceService {

	@Resource
	private BankTransSourceJpaRepository bankTransSourceJpaRepository;

	@Resource
	private BankTransSourceServiceMapper bankTransSourceServiceMapper;
	
	public BankTransSource findById(Integer id) {
		BankTransSourceEntity bankTransSourceEntity = bankTransSourceJpaRepository.findOne(id);
		return bankTransSourceServiceMapper.mapBankTransSourceEntityToBankTransSource(bankTransSourceEntity);
	}

	public List<BankTransSource> findAll() {
		Iterable<BankTransSourceEntity> entities = bankTransSourceJpaRepository.findAll();
		List<BankTransSource> beans = new ArrayList<BankTransSource>();
		for(BankTransSourceEntity bankTransSourceEntity : entities) {
			beans.add(bankTransSourceServiceMapper.mapBankTransSourceEntityToBankTransSource(bankTransSourceEntity));
		}
		return beans;
	}

	public BankTransSource save(BankTransSource bankTransSource) {
		return update(bankTransSource) ;
	}

	public BankTransSource create(BankTransSource bankTransSource) {
		BankTransSourceEntity bankTransSourceEntity = bankTransSourceJpaRepository.findOne(bankTransSource.getId());
		if( bankTransSourceEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		bankTransSourceEntity = new BankTransSourceEntity();
		bankTransSourceServiceMapper.mapBankTransSourceToBankTransSourceEntity(bankTransSource, bankTransSourceEntity);
		BankTransSourceEntity bankTransSourceEntitySaved = bankTransSourceJpaRepository.save(bankTransSourceEntity);
		return bankTransSourceServiceMapper.mapBankTransSourceEntityToBankTransSource(bankTransSourceEntitySaved);
	}

	public BankTransSource update(BankTransSource bankTransSource) {
		BankTransSourceEntity bankTransSourceEntity = bankTransSourceJpaRepository.findOne(bankTransSource.getId());
		bankTransSourceServiceMapper.mapBankTransSourceToBankTransSourceEntity(bankTransSource, bankTransSourceEntity);
		BankTransSourceEntity bankTransSourceEntitySaved = bankTransSourceJpaRepository.save(bankTransSourceEntity);
		return bankTransSourceServiceMapper.mapBankTransSourceEntityToBankTransSource(bankTransSourceEntitySaved);
	}

	public void delete(Integer id) {
		bankTransSourceJpaRepository.delete(id);
	}

	public BankTransSourceJpaRepository getBankTransSourceJpaRepository() {
		return bankTransSourceJpaRepository;
	}

	public void setBankTransSourceJpaRepository(BankTransSourceJpaRepository bankTransSourceJpaRepository) {
		this.bankTransSourceJpaRepository = bankTransSourceJpaRepository;
	}

	public BankTransSourceServiceMapper getBankTransSourceServiceMapper() {
		return bankTransSourceServiceMapper;
	}

	public void setBankTransSourceServiceMapper(BankTransSourceServiceMapper bankTransSourceServiceMapper) {
		this.bankTransSourceServiceMapper = bankTransSourceServiceMapper;
	}

}
