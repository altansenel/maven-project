/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.StockTrans;
import org.demo.bean.jpa.StockTransEntity;
import java.util.Date;
import java.util.List;
import org.demo.business.service.StockTransService;
import org.demo.business.service.mapping.StockTransServiceMapper;
import org.demo.data.repository.jpa.StockTransJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of StockTransService
 */
@Component
@Transactional
public class StockTransServiceImpl implements StockTransService {

	@Resource
	private StockTransJpaRepository stockTransJpaRepository;

	@Resource
	private StockTransServiceMapper stockTransServiceMapper;
	
	public StockTrans findById(Integer id) {
		StockTransEntity stockTransEntity = stockTransJpaRepository.findOne(id);
		return stockTransServiceMapper.mapStockTransEntityToStockTrans(stockTransEntity);
	}

	public List<StockTrans> findAll() {
		Iterable<StockTransEntity> entities = stockTransJpaRepository.findAll();
		List<StockTrans> beans = new ArrayList<StockTrans>();
		for(StockTransEntity stockTransEntity : entities) {
			beans.add(stockTransServiceMapper.mapStockTransEntityToStockTrans(stockTransEntity));
		}
		return beans;
	}

	public StockTrans save(StockTrans stockTrans) {
		return update(stockTrans) ;
	}

	public StockTrans create(StockTrans stockTrans) {
		StockTransEntity stockTransEntity = stockTransJpaRepository.findOne(stockTrans.getId());
		if( stockTransEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		stockTransEntity = new StockTransEntity();
		stockTransServiceMapper.mapStockTransToStockTransEntity(stockTrans, stockTransEntity);
		StockTransEntity stockTransEntitySaved = stockTransJpaRepository.save(stockTransEntity);
		return stockTransServiceMapper.mapStockTransEntityToStockTrans(stockTransEntitySaved);
	}

	public StockTrans update(StockTrans stockTrans) {
		StockTransEntity stockTransEntity = stockTransJpaRepository.findOne(stockTrans.getId());
		stockTransServiceMapper.mapStockTransToStockTransEntity(stockTrans, stockTransEntity);
		StockTransEntity stockTransEntitySaved = stockTransJpaRepository.save(stockTransEntity);
		return stockTransServiceMapper.mapStockTransEntityToStockTrans(stockTransEntitySaved);
	}

	public void delete(Integer id) {
		stockTransJpaRepository.delete(id);
	}

	public StockTransJpaRepository getStockTransJpaRepository() {
		return stockTransJpaRepository;
	}

	public void setStockTransJpaRepository(StockTransJpaRepository stockTransJpaRepository) {
		this.stockTransJpaRepository = stockTransJpaRepository;
	}

	public StockTransServiceMapper getStockTransServiceMapper() {
		return stockTransServiceMapper;
	}

	public void setStockTransServiceMapper(StockTransServiceMapper stockTransServiceMapper) {
		this.stockTransServiceMapper = stockTransServiceMapper;
	}

}
