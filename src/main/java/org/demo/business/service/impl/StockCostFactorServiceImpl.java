/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.StockCostFactor;
import org.demo.bean.jpa.StockCostFactorEntity;
import java.util.Date;
import java.util.List;
import org.demo.business.service.StockCostFactorService;
import org.demo.business.service.mapping.StockCostFactorServiceMapper;
import org.demo.data.repository.jpa.StockCostFactorJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of StockCostFactorService
 */
@Component
@Transactional
public class StockCostFactorServiceImpl implements StockCostFactorService {

	@Resource
	private StockCostFactorJpaRepository stockCostFactorJpaRepository;

	@Resource
	private StockCostFactorServiceMapper stockCostFactorServiceMapper;
	
	public StockCostFactor findById(Integer id) {
		StockCostFactorEntity stockCostFactorEntity = stockCostFactorJpaRepository.findOne(id);
		return stockCostFactorServiceMapper.mapStockCostFactorEntityToStockCostFactor(stockCostFactorEntity);
	}

	public List<StockCostFactor> findAll() {
		Iterable<StockCostFactorEntity> entities = stockCostFactorJpaRepository.findAll();
		List<StockCostFactor> beans = new ArrayList<StockCostFactor>();
		for(StockCostFactorEntity stockCostFactorEntity : entities) {
			beans.add(stockCostFactorServiceMapper.mapStockCostFactorEntityToStockCostFactor(stockCostFactorEntity));
		}
		return beans;
	}

	public StockCostFactor save(StockCostFactor stockCostFactor) {
		return update(stockCostFactor) ;
	}

	public StockCostFactor create(StockCostFactor stockCostFactor) {
		StockCostFactorEntity stockCostFactorEntity = stockCostFactorJpaRepository.findOne(stockCostFactor.getId());
		if( stockCostFactorEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		stockCostFactorEntity = new StockCostFactorEntity();
		stockCostFactorServiceMapper.mapStockCostFactorToStockCostFactorEntity(stockCostFactor, stockCostFactorEntity);
		StockCostFactorEntity stockCostFactorEntitySaved = stockCostFactorJpaRepository.save(stockCostFactorEntity);
		return stockCostFactorServiceMapper.mapStockCostFactorEntityToStockCostFactor(stockCostFactorEntitySaved);
	}

	public StockCostFactor update(StockCostFactor stockCostFactor) {
		StockCostFactorEntity stockCostFactorEntity = stockCostFactorJpaRepository.findOne(stockCostFactor.getId());
		stockCostFactorServiceMapper.mapStockCostFactorToStockCostFactorEntity(stockCostFactor, stockCostFactorEntity);
		StockCostFactorEntity stockCostFactorEntitySaved = stockCostFactorJpaRepository.save(stockCostFactorEntity);
		return stockCostFactorServiceMapper.mapStockCostFactorEntityToStockCostFactor(stockCostFactorEntitySaved);
	}

	public void delete(Integer id) {
		stockCostFactorJpaRepository.delete(id);
	}

	public StockCostFactorJpaRepository getStockCostFactorJpaRepository() {
		return stockCostFactorJpaRepository;
	}

	public void setStockCostFactorJpaRepository(StockCostFactorJpaRepository stockCostFactorJpaRepository) {
		this.stockCostFactorJpaRepository = stockCostFactorJpaRepository;
	}

	public StockCostFactorServiceMapper getStockCostFactorServiceMapper() {
		return stockCostFactorServiceMapper;
	}

	public void setStockCostFactorServiceMapper(StockCostFactorServiceMapper stockCostFactorServiceMapper) {
		this.stockCostFactorServiceMapper = stockCostFactorServiceMapper;
	}

}
