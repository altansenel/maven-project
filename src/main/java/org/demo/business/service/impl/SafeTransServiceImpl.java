/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.SafeTrans;
import org.demo.bean.jpa.SafeTransEntity;
import java.util.Date;
import java.util.List;
import org.demo.business.service.SafeTransService;
import org.demo.business.service.mapping.SafeTransServiceMapper;
import org.demo.data.repository.jpa.SafeTransJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of SafeTransService
 */
@Component
@Transactional
public class SafeTransServiceImpl implements SafeTransService {

	@Resource
	private SafeTransJpaRepository safeTransJpaRepository;

	@Resource
	private SafeTransServiceMapper safeTransServiceMapper;
	
	public SafeTrans findById(Integer id) {
		SafeTransEntity safeTransEntity = safeTransJpaRepository.findOne(id);
		return safeTransServiceMapper.mapSafeTransEntityToSafeTrans(safeTransEntity);
	}

	public List<SafeTrans> findAll() {
		Iterable<SafeTransEntity> entities = safeTransJpaRepository.findAll();
		List<SafeTrans> beans = new ArrayList<SafeTrans>();
		for(SafeTransEntity safeTransEntity : entities) {
			beans.add(safeTransServiceMapper.mapSafeTransEntityToSafeTrans(safeTransEntity));
		}
		return beans;
	}

	public SafeTrans save(SafeTrans safeTrans) {
		return update(safeTrans) ;
	}

	public SafeTrans create(SafeTrans safeTrans) {
		SafeTransEntity safeTransEntity = safeTransJpaRepository.findOne(safeTrans.getId());
		if( safeTransEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		safeTransEntity = new SafeTransEntity();
		safeTransServiceMapper.mapSafeTransToSafeTransEntity(safeTrans, safeTransEntity);
		SafeTransEntity safeTransEntitySaved = safeTransJpaRepository.save(safeTransEntity);
		return safeTransServiceMapper.mapSafeTransEntityToSafeTrans(safeTransEntitySaved);
	}

	public SafeTrans update(SafeTrans safeTrans) {
		SafeTransEntity safeTransEntity = safeTransJpaRepository.findOne(safeTrans.getId());
		safeTransServiceMapper.mapSafeTransToSafeTransEntity(safeTrans, safeTransEntity);
		SafeTransEntity safeTransEntitySaved = safeTransJpaRepository.save(safeTransEntity);
		return safeTransServiceMapper.mapSafeTransEntityToSafeTrans(safeTransEntitySaved);
	}

	public void delete(Integer id) {
		safeTransJpaRepository.delete(id);
	}

	public SafeTransJpaRepository getSafeTransJpaRepository() {
		return safeTransJpaRepository;
	}

	public void setSafeTransJpaRepository(SafeTransJpaRepository safeTransJpaRepository) {
		this.safeTransJpaRepository = safeTransJpaRepository;
	}

	public SafeTransServiceMapper getSafeTransServiceMapper() {
		return safeTransServiceMapper;
	}

	public void setSafeTransServiceMapper(SafeTransServiceMapper safeTransServiceMapper) {
		this.safeTransServiceMapper = safeTransServiceMapper;
	}

}
