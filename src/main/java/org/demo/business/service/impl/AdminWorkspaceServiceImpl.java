/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.AdminWorkspace;
import org.demo.bean.jpa.AdminWorkspaceEntity;
import java.util.Date;
import java.util.List;
import org.demo.business.service.AdminWorkspaceService;
import org.demo.business.service.mapping.AdminWorkspaceServiceMapper;
import org.demo.data.repository.jpa.AdminWorkspaceJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of AdminWorkspaceService
 */
@Component
@Transactional
public class AdminWorkspaceServiceImpl implements AdminWorkspaceService {

	@Resource
	private AdminWorkspaceJpaRepository adminWorkspaceJpaRepository;

	@Resource
	private AdminWorkspaceServiceMapper adminWorkspaceServiceMapper;
	
	public AdminWorkspace findById(Integer id) {
		AdminWorkspaceEntity adminWorkspaceEntity = adminWorkspaceJpaRepository.findOne(id);
		return adminWorkspaceServiceMapper.mapAdminWorkspaceEntityToAdminWorkspace(adminWorkspaceEntity);
	}

	public List<AdminWorkspace> findAll() {
		Iterable<AdminWorkspaceEntity> entities = adminWorkspaceJpaRepository.findAll();
		List<AdminWorkspace> beans = new ArrayList<AdminWorkspace>();
		for(AdminWorkspaceEntity adminWorkspaceEntity : entities) {
			beans.add(adminWorkspaceServiceMapper.mapAdminWorkspaceEntityToAdminWorkspace(adminWorkspaceEntity));
		}
		return beans;
	}

	public AdminWorkspace save(AdminWorkspace adminWorkspace) {
		return update(adminWorkspace) ;
	}

	public AdminWorkspace create(AdminWorkspace adminWorkspace) {
		AdminWorkspaceEntity adminWorkspaceEntity = adminWorkspaceJpaRepository.findOne(adminWorkspace.getId());
		if( adminWorkspaceEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		adminWorkspaceEntity = new AdminWorkspaceEntity();
		adminWorkspaceServiceMapper.mapAdminWorkspaceToAdminWorkspaceEntity(adminWorkspace, adminWorkspaceEntity);
		AdminWorkspaceEntity adminWorkspaceEntitySaved = adminWorkspaceJpaRepository.save(adminWorkspaceEntity);
		return adminWorkspaceServiceMapper.mapAdminWorkspaceEntityToAdminWorkspace(adminWorkspaceEntitySaved);
	}

	public AdminWorkspace update(AdminWorkspace adminWorkspace) {
		AdminWorkspaceEntity adminWorkspaceEntity = adminWorkspaceJpaRepository.findOne(adminWorkspace.getId());
		adminWorkspaceServiceMapper.mapAdminWorkspaceToAdminWorkspaceEntity(adminWorkspace, adminWorkspaceEntity);
		AdminWorkspaceEntity adminWorkspaceEntitySaved = adminWorkspaceJpaRepository.save(adminWorkspaceEntity);
		return adminWorkspaceServiceMapper.mapAdminWorkspaceEntityToAdminWorkspace(adminWorkspaceEntitySaved);
	}

	public void delete(Integer id) {
		adminWorkspaceJpaRepository.delete(id);
	}

	public AdminWorkspaceJpaRepository getAdminWorkspaceJpaRepository() {
		return adminWorkspaceJpaRepository;
	}

	public void setAdminWorkspaceJpaRepository(AdminWorkspaceJpaRepository adminWorkspaceJpaRepository) {
		this.adminWorkspaceJpaRepository = adminWorkspaceJpaRepository;
	}

	public AdminWorkspaceServiceMapper getAdminWorkspaceServiceMapper() {
		return adminWorkspaceServiceMapper;
	}

	public void setAdminWorkspaceServiceMapper(AdminWorkspaceServiceMapper adminWorkspaceServiceMapper) {
		this.adminWorkspaceServiceMapper = adminWorkspaceServiceMapper;
	}

}
