/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.AdminUserAudit;
import org.demo.bean.jpa.AdminUserAuditEntity;
import java.util.Date;
import org.demo.business.service.AdminUserAuditService;
import org.demo.business.service.mapping.AdminUserAuditServiceMapper;
import org.demo.data.repository.jpa.AdminUserAuditJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of AdminUserAuditService
 */
@Component
@Transactional
public class AdminUserAuditServiceImpl implements AdminUserAuditService {

	@Resource
	private AdminUserAuditJpaRepository adminUserAuditJpaRepository;

	@Resource
	private AdminUserAuditServiceMapper adminUserAuditServiceMapper;
	
	public AdminUserAudit findById(Integer id) {
		AdminUserAuditEntity adminUserAuditEntity = adminUserAuditJpaRepository.findOne(id);
		return adminUserAuditServiceMapper.mapAdminUserAuditEntityToAdminUserAudit(adminUserAuditEntity);
	}

	public List<AdminUserAudit> findAll() {
		Iterable<AdminUserAuditEntity> entities = adminUserAuditJpaRepository.findAll();
		List<AdminUserAudit> beans = new ArrayList<AdminUserAudit>();
		for(AdminUserAuditEntity adminUserAuditEntity : entities) {
			beans.add(adminUserAuditServiceMapper.mapAdminUserAuditEntityToAdminUserAudit(adminUserAuditEntity));
		}
		return beans;
	}

	public AdminUserAudit save(AdminUserAudit adminUserAudit) {
		return update(adminUserAudit) ;
	}

	public AdminUserAudit create(AdminUserAudit adminUserAudit) {
		AdminUserAuditEntity adminUserAuditEntity = adminUserAuditJpaRepository.findOne(adminUserAudit.getId());
		if( adminUserAuditEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		adminUserAuditEntity = new AdminUserAuditEntity();
		adminUserAuditServiceMapper.mapAdminUserAuditToAdminUserAuditEntity(adminUserAudit, adminUserAuditEntity);
		AdminUserAuditEntity adminUserAuditEntitySaved = adminUserAuditJpaRepository.save(adminUserAuditEntity);
		return adminUserAuditServiceMapper.mapAdminUserAuditEntityToAdminUserAudit(adminUserAuditEntitySaved);
	}

	public AdminUserAudit update(AdminUserAudit adminUserAudit) {
		AdminUserAuditEntity adminUserAuditEntity = adminUserAuditJpaRepository.findOne(adminUserAudit.getId());
		adminUserAuditServiceMapper.mapAdminUserAuditToAdminUserAuditEntity(adminUserAudit, adminUserAuditEntity);
		AdminUserAuditEntity adminUserAuditEntitySaved = adminUserAuditJpaRepository.save(adminUserAuditEntity);
		return adminUserAuditServiceMapper.mapAdminUserAuditEntityToAdminUserAudit(adminUserAuditEntitySaved);
	}

	public void delete(Integer id) {
		adminUserAuditJpaRepository.delete(id);
	}

	public AdminUserAuditJpaRepository getAdminUserAuditJpaRepository() {
		return adminUserAuditJpaRepository;
	}

	public void setAdminUserAuditJpaRepository(AdminUserAuditJpaRepository adminUserAuditJpaRepository) {
		this.adminUserAuditJpaRepository = adminUserAuditJpaRepository;
	}

	public AdminUserAuditServiceMapper getAdminUserAuditServiceMapper() {
		return adminUserAuditServiceMapper;
	}

	public void setAdminUserAuditServiceMapper(AdminUserAuditServiceMapper adminUserAuditServiceMapper) {
		this.adminUserAuditServiceMapper = adminUserAuditServiceMapper;
	}

}
