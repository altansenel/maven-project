/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.SaleSeller;
import org.demo.bean.jpa.SaleSellerEntity;
import java.util.Date;
import java.util.List;
import org.demo.business.service.SaleSellerService;
import org.demo.business.service.mapping.SaleSellerServiceMapper;
import org.demo.data.repository.jpa.SaleSellerJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of SaleSellerService
 */
@Component
@Transactional
public class SaleSellerServiceImpl implements SaleSellerService {

	@Resource
	private SaleSellerJpaRepository saleSellerJpaRepository;

	@Resource
	private SaleSellerServiceMapper saleSellerServiceMapper;
	
	public SaleSeller findById(Integer id) {
		SaleSellerEntity saleSellerEntity = saleSellerJpaRepository.findOne(id);
		return saleSellerServiceMapper.mapSaleSellerEntityToSaleSeller(saleSellerEntity);
	}

	public List<SaleSeller> findAll() {
		Iterable<SaleSellerEntity> entities = saleSellerJpaRepository.findAll();
		List<SaleSeller> beans = new ArrayList<SaleSeller>();
		for(SaleSellerEntity saleSellerEntity : entities) {
			beans.add(saleSellerServiceMapper.mapSaleSellerEntityToSaleSeller(saleSellerEntity));
		}
		return beans;
	}

	public SaleSeller save(SaleSeller saleSeller) {
		return update(saleSeller) ;
	}

	public SaleSeller create(SaleSeller saleSeller) {
		SaleSellerEntity saleSellerEntity = saleSellerJpaRepository.findOne(saleSeller.getId());
		if( saleSellerEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		saleSellerEntity = new SaleSellerEntity();
		saleSellerServiceMapper.mapSaleSellerToSaleSellerEntity(saleSeller, saleSellerEntity);
		SaleSellerEntity saleSellerEntitySaved = saleSellerJpaRepository.save(saleSellerEntity);
		return saleSellerServiceMapper.mapSaleSellerEntityToSaleSeller(saleSellerEntitySaved);
	}

	public SaleSeller update(SaleSeller saleSeller) {
		SaleSellerEntity saleSellerEntity = saleSellerJpaRepository.findOne(saleSeller.getId());
		saleSellerServiceMapper.mapSaleSellerToSaleSellerEntity(saleSeller, saleSellerEntity);
		SaleSellerEntity saleSellerEntitySaved = saleSellerJpaRepository.save(saleSellerEntity);
		return saleSellerServiceMapper.mapSaleSellerEntityToSaleSeller(saleSellerEntitySaved);
	}

	public void delete(Integer id) {
		saleSellerJpaRepository.delete(id);
	}

	public SaleSellerJpaRepository getSaleSellerJpaRepository() {
		return saleSellerJpaRepository;
	}

	public void setSaleSellerJpaRepository(SaleSellerJpaRepository saleSellerJpaRepository) {
		this.saleSellerJpaRepository = saleSellerJpaRepository;
	}

	public SaleSellerServiceMapper getSaleSellerServiceMapper() {
		return saleSellerServiceMapper;
	}

	public void setSaleSellerServiceMapper(SaleSellerServiceMapper saleSellerServiceMapper) {
		this.saleSellerServiceMapper = saleSellerServiceMapper;
	}

}
