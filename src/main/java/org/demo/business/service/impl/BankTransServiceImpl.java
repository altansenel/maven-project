/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.BankTrans;
import org.demo.bean.jpa.BankTransEntity;
import java.util.Date;
import org.demo.business.service.BankTransService;
import org.demo.business.service.mapping.BankTransServiceMapper;
import org.demo.data.repository.jpa.BankTransJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of BankTransService
 */
@Component
@Transactional
public class BankTransServiceImpl implements BankTransService {

	@Resource
	private BankTransJpaRepository bankTransJpaRepository;

	@Resource
	private BankTransServiceMapper bankTransServiceMapper;
	
	public BankTrans findById(Integer id) {
		BankTransEntity bankTransEntity = bankTransJpaRepository.findOne(id);
		return bankTransServiceMapper.mapBankTransEntityToBankTrans(bankTransEntity);
	}

	public List<BankTrans> findAll() {
		Iterable<BankTransEntity> entities = bankTransJpaRepository.findAll();
		List<BankTrans> beans = new ArrayList<BankTrans>();
		for(BankTransEntity bankTransEntity : entities) {
			beans.add(bankTransServiceMapper.mapBankTransEntityToBankTrans(bankTransEntity));
		}
		return beans;
	}

	public BankTrans save(BankTrans bankTrans) {
		return update(bankTrans) ;
	}

	public BankTrans create(BankTrans bankTrans) {
		BankTransEntity bankTransEntity = bankTransJpaRepository.findOne(bankTrans.getId());
		if( bankTransEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		bankTransEntity = new BankTransEntity();
		bankTransServiceMapper.mapBankTransToBankTransEntity(bankTrans, bankTransEntity);
		BankTransEntity bankTransEntitySaved = bankTransJpaRepository.save(bankTransEntity);
		return bankTransServiceMapper.mapBankTransEntityToBankTrans(bankTransEntitySaved);
	}

	public BankTrans update(BankTrans bankTrans) {
		BankTransEntity bankTransEntity = bankTransJpaRepository.findOne(bankTrans.getId());
		bankTransServiceMapper.mapBankTransToBankTransEntity(bankTrans, bankTransEntity);
		BankTransEntity bankTransEntitySaved = bankTransJpaRepository.save(bankTransEntity);
		return bankTransServiceMapper.mapBankTransEntityToBankTrans(bankTransEntitySaved);
	}

	public void delete(Integer id) {
		bankTransJpaRepository.delete(id);
	}

	public BankTransJpaRepository getBankTransJpaRepository() {
		return bankTransJpaRepository;
	}

	public void setBankTransJpaRepository(BankTransJpaRepository bankTransJpaRepository) {
		this.bankTransJpaRepository = bankTransJpaRepository;
	}

	public BankTransServiceMapper getBankTransServiceMapper() {
		return bankTransServiceMapper;
	}

	public void setBankTransServiceMapper(BankTransServiceMapper bankTransServiceMapper) {
		this.bankTransServiceMapper = bankTransServiceMapper;
	}

}
