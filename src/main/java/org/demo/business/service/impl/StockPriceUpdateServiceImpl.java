/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.StockPriceUpdate;
import org.demo.bean.jpa.StockPriceUpdateEntity;
import java.util.Date;
import java.util.List;
import org.demo.business.service.StockPriceUpdateService;
import org.demo.business.service.mapping.StockPriceUpdateServiceMapper;
import org.demo.data.repository.jpa.StockPriceUpdateJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of StockPriceUpdateService
 */
@Component
@Transactional
public class StockPriceUpdateServiceImpl implements StockPriceUpdateService {

	@Resource
	private StockPriceUpdateJpaRepository stockPriceUpdateJpaRepository;

	@Resource
	private StockPriceUpdateServiceMapper stockPriceUpdateServiceMapper;
	
	public StockPriceUpdate findById(Integer id) {
		StockPriceUpdateEntity stockPriceUpdateEntity = stockPriceUpdateJpaRepository.findOne(id);
		return stockPriceUpdateServiceMapper.mapStockPriceUpdateEntityToStockPriceUpdate(stockPriceUpdateEntity);
	}

	public List<StockPriceUpdate> findAll() {
		Iterable<StockPriceUpdateEntity> entities = stockPriceUpdateJpaRepository.findAll();
		List<StockPriceUpdate> beans = new ArrayList<StockPriceUpdate>();
		for(StockPriceUpdateEntity stockPriceUpdateEntity : entities) {
			beans.add(stockPriceUpdateServiceMapper.mapStockPriceUpdateEntityToStockPriceUpdate(stockPriceUpdateEntity));
		}
		return beans;
	}

	public StockPriceUpdate save(StockPriceUpdate stockPriceUpdate) {
		return update(stockPriceUpdate) ;
	}

	public StockPriceUpdate create(StockPriceUpdate stockPriceUpdate) {
		StockPriceUpdateEntity stockPriceUpdateEntity = stockPriceUpdateJpaRepository.findOne(stockPriceUpdate.getId());
		if( stockPriceUpdateEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		stockPriceUpdateEntity = new StockPriceUpdateEntity();
		stockPriceUpdateServiceMapper.mapStockPriceUpdateToStockPriceUpdateEntity(stockPriceUpdate, stockPriceUpdateEntity);
		StockPriceUpdateEntity stockPriceUpdateEntitySaved = stockPriceUpdateJpaRepository.save(stockPriceUpdateEntity);
		return stockPriceUpdateServiceMapper.mapStockPriceUpdateEntityToStockPriceUpdate(stockPriceUpdateEntitySaved);
	}

	public StockPriceUpdate update(StockPriceUpdate stockPriceUpdate) {
		StockPriceUpdateEntity stockPriceUpdateEntity = stockPriceUpdateJpaRepository.findOne(stockPriceUpdate.getId());
		stockPriceUpdateServiceMapper.mapStockPriceUpdateToStockPriceUpdateEntity(stockPriceUpdate, stockPriceUpdateEntity);
		StockPriceUpdateEntity stockPriceUpdateEntitySaved = stockPriceUpdateJpaRepository.save(stockPriceUpdateEntity);
		return stockPriceUpdateServiceMapper.mapStockPriceUpdateEntityToStockPriceUpdate(stockPriceUpdateEntitySaved);
	}

	public void delete(Integer id) {
		stockPriceUpdateJpaRepository.delete(id);
	}

	public StockPriceUpdateJpaRepository getStockPriceUpdateJpaRepository() {
		return stockPriceUpdateJpaRepository;
	}

	public void setStockPriceUpdateJpaRepository(StockPriceUpdateJpaRepository stockPriceUpdateJpaRepository) {
		this.stockPriceUpdateJpaRepository = stockPriceUpdateJpaRepository;
	}

	public StockPriceUpdateServiceMapper getStockPriceUpdateServiceMapper() {
		return stockPriceUpdateServiceMapper;
	}

	public void setStockPriceUpdateServiceMapper(StockPriceUpdateServiceMapper stockPriceUpdateServiceMapper) {
		this.stockPriceUpdateServiceMapper = stockPriceUpdateServiceMapper;
	}

}
