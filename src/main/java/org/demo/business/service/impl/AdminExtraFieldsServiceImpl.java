/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.AdminExtraFields;
import org.demo.bean.jpa.AdminExtraFieldsEntity;
import org.demo.business.service.AdminExtraFieldsService;
import org.demo.business.service.mapping.AdminExtraFieldsServiceMapper;
import org.demo.data.repository.jpa.AdminExtraFieldsJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of AdminExtraFieldsService
 */
@Component
@Transactional
public class AdminExtraFieldsServiceImpl implements AdminExtraFieldsService {

	@Resource
	private AdminExtraFieldsJpaRepository adminExtraFieldsJpaRepository;

	@Resource
	private AdminExtraFieldsServiceMapper adminExtraFieldsServiceMapper;
	
	public AdminExtraFields findById(Integer id) {
		AdminExtraFieldsEntity adminExtraFieldsEntity = adminExtraFieldsJpaRepository.findOne(id);
		return adminExtraFieldsServiceMapper.mapAdminExtraFieldsEntityToAdminExtraFields(adminExtraFieldsEntity);
	}

	public List<AdminExtraFields> findAll() {
		Iterable<AdminExtraFieldsEntity> entities = adminExtraFieldsJpaRepository.findAll();
		List<AdminExtraFields> beans = new ArrayList<AdminExtraFields>();
		for(AdminExtraFieldsEntity adminExtraFieldsEntity : entities) {
			beans.add(adminExtraFieldsServiceMapper.mapAdminExtraFieldsEntityToAdminExtraFields(adminExtraFieldsEntity));
		}
		return beans;
	}

	public AdminExtraFields save(AdminExtraFields adminExtraFields) {
		return update(adminExtraFields) ;
	}

	public AdminExtraFields create(AdminExtraFields adminExtraFields) {
		AdminExtraFieldsEntity adminExtraFieldsEntity = adminExtraFieldsJpaRepository.findOne(adminExtraFields.getId());
		if( adminExtraFieldsEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		adminExtraFieldsEntity = new AdminExtraFieldsEntity();
		adminExtraFieldsServiceMapper.mapAdminExtraFieldsToAdminExtraFieldsEntity(adminExtraFields, adminExtraFieldsEntity);
		AdminExtraFieldsEntity adminExtraFieldsEntitySaved = adminExtraFieldsJpaRepository.save(adminExtraFieldsEntity);
		return adminExtraFieldsServiceMapper.mapAdminExtraFieldsEntityToAdminExtraFields(adminExtraFieldsEntitySaved);
	}

	public AdminExtraFields update(AdminExtraFields adminExtraFields) {
		AdminExtraFieldsEntity adminExtraFieldsEntity = adminExtraFieldsJpaRepository.findOne(adminExtraFields.getId());
		adminExtraFieldsServiceMapper.mapAdminExtraFieldsToAdminExtraFieldsEntity(adminExtraFields, adminExtraFieldsEntity);
		AdminExtraFieldsEntity adminExtraFieldsEntitySaved = adminExtraFieldsJpaRepository.save(adminExtraFieldsEntity);
		return adminExtraFieldsServiceMapper.mapAdminExtraFieldsEntityToAdminExtraFields(adminExtraFieldsEntitySaved);
	}

	public void delete(Integer id) {
		adminExtraFieldsJpaRepository.delete(id);
	}

	public AdminExtraFieldsJpaRepository getAdminExtraFieldsJpaRepository() {
		return adminExtraFieldsJpaRepository;
	}

	public void setAdminExtraFieldsJpaRepository(AdminExtraFieldsJpaRepository adminExtraFieldsJpaRepository) {
		this.adminExtraFieldsJpaRepository = adminExtraFieldsJpaRepository;
	}

	public AdminExtraFieldsServiceMapper getAdminExtraFieldsServiceMapper() {
		return adminExtraFieldsServiceMapper;
	}

	public void setAdminExtraFieldsServiceMapper(AdminExtraFieldsServiceMapper adminExtraFieldsServiceMapper) {
		this.adminExtraFieldsServiceMapper = adminExtraFieldsServiceMapper;
	}

}
