/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.WaybillTransDetail;
import org.demo.bean.jpa.WaybillTransDetailEntity;
import java.util.Date;
import org.demo.business.service.WaybillTransDetailService;
import org.demo.business.service.mapping.WaybillTransDetailServiceMapper;
import org.demo.data.repository.jpa.WaybillTransDetailJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of WaybillTransDetailService
 */
@Component
@Transactional
public class WaybillTransDetailServiceImpl implements WaybillTransDetailService {

	@Resource
	private WaybillTransDetailJpaRepository waybillTransDetailJpaRepository;

	@Resource
	private WaybillTransDetailServiceMapper waybillTransDetailServiceMapper;
	
	public WaybillTransDetail findById(Integer id) {
		WaybillTransDetailEntity waybillTransDetailEntity = waybillTransDetailJpaRepository.findOne(id);
		return waybillTransDetailServiceMapper.mapWaybillTransDetailEntityToWaybillTransDetail(waybillTransDetailEntity);
	}

	public List<WaybillTransDetail> findAll() {
		Iterable<WaybillTransDetailEntity> entities = waybillTransDetailJpaRepository.findAll();
		List<WaybillTransDetail> beans = new ArrayList<WaybillTransDetail>();
		for(WaybillTransDetailEntity waybillTransDetailEntity : entities) {
			beans.add(waybillTransDetailServiceMapper.mapWaybillTransDetailEntityToWaybillTransDetail(waybillTransDetailEntity));
		}
		return beans;
	}

	public WaybillTransDetail save(WaybillTransDetail waybillTransDetail) {
		return update(waybillTransDetail) ;
	}

	public WaybillTransDetail create(WaybillTransDetail waybillTransDetail) {
		WaybillTransDetailEntity waybillTransDetailEntity = waybillTransDetailJpaRepository.findOne(waybillTransDetail.getId());
		if( waybillTransDetailEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		waybillTransDetailEntity = new WaybillTransDetailEntity();
		waybillTransDetailServiceMapper.mapWaybillTransDetailToWaybillTransDetailEntity(waybillTransDetail, waybillTransDetailEntity);
		WaybillTransDetailEntity waybillTransDetailEntitySaved = waybillTransDetailJpaRepository.save(waybillTransDetailEntity);
		return waybillTransDetailServiceMapper.mapWaybillTransDetailEntityToWaybillTransDetail(waybillTransDetailEntitySaved);
	}

	public WaybillTransDetail update(WaybillTransDetail waybillTransDetail) {
		WaybillTransDetailEntity waybillTransDetailEntity = waybillTransDetailJpaRepository.findOne(waybillTransDetail.getId());
		waybillTransDetailServiceMapper.mapWaybillTransDetailToWaybillTransDetailEntity(waybillTransDetail, waybillTransDetailEntity);
		WaybillTransDetailEntity waybillTransDetailEntitySaved = waybillTransDetailJpaRepository.save(waybillTransDetailEntity);
		return waybillTransDetailServiceMapper.mapWaybillTransDetailEntityToWaybillTransDetail(waybillTransDetailEntitySaved);
	}

	public void delete(Integer id) {
		waybillTransDetailJpaRepository.delete(id);
	}

	public WaybillTransDetailJpaRepository getWaybillTransDetailJpaRepository() {
		return waybillTransDetailJpaRepository;
	}

	public void setWaybillTransDetailJpaRepository(WaybillTransDetailJpaRepository waybillTransDetailJpaRepository) {
		this.waybillTransDetailJpaRepository = waybillTransDetailJpaRepository;
	}

	public WaybillTransDetailServiceMapper getWaybillTransDetailServiceMapper() {
		return waybillTransDetailServiceMapper;
	}

	public void setWaybillTransDetailServiceMapper(WaybillTransDetailServiceMapper waybillTransDetailServiceMapper) {
		this.waybillTransDetailServiceMapper = waybillTransDetailServiceMapper;
	}

}
