/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.StockTransCurrency;
import org.demo.bean.jpa.StockTransCurrencyEntity;
import org.demo.business.service.StockTransCurrencyService;
import org.demo.business.service.mapping.StockTransCurrencyServiceMapper;
import org.demo.data.repository.jpa.StockTransCurrencyJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of StockTransCurrencyService
 */
@Component
@Transactional
public class StockTransCurrencyServiceImpl implements StockTransCurrencyService {

	@Resource
	private StockTransCurrencyJpaRepository stockTransCurrencyJpaRepository;

	@Resource
	private StockTransCurrencyServiceMapper stockTransCurrencyServiceMapper;
	
	public StockTransCurrency findById(Integer id) {
		StockTransCurrencyEntity stockTransCurrencyEntity = stockTransCurrencyJpaRepository.findOne(id);
		return stockTransCurrencyServiceMapper.mapStockTransCurrencyEntityToStockTransCurrency(stockTransCurrencyEntity);
	}

	public List<StockTransCurrency> findAll() {
		Iterable<StockTransCurrencyEntity> entities = stockTransCurrencyJpaRepository.findAll();
		List<StockTransCurrency> beans = new ArrayList<StockTransCurrency>();
		for(StockTransCurrencyEntity stockTransCurrencyEntity : entities) {
			beans.add(stockTransCurrencyServiceMapper.mapStockTransCurrencyEntityToStockTransCurrency(stockTransCurrencyEntity));
		}
		return beans;
	}

	public StockTransCurrency save(StockTransCurrency stockTransCurrency) {
		return update(stockTransCurrency) ;
	}

	public StockTransCurrency create(StockTransCurrency stockTransCurrency) {
		StockTransCurrencyEntity stockTransCurrencyEntity = stockTransCurrencyJpaRepository.findOne(stockTransCurrency.getId());
		if( stockTransCurrencyEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		stockTransCurrencyEntity = new StockTransCurrencyEntity();
		stockTransCurrencyServiceMapper.mapStockTransCurrencyToStockTransCurrencyEntity(stockTransCurrency, stockTransCurrencyEntity);
		StockTransCurrencyEntity stockTransCurrencyEntitySaved = stockTransCurrencyJpaRepository.save(stockTransCurrencyEntity);
		return stockTransCurrencyServiceMapper.mapStockTransCurrencyEntityToStockTransCurrency(stockTransCurrencyEntitySaved);
	}

	public StockTransCurrency update(StockTransCurrency stockTransCurrency) {
		StockTransCurrencyEntity stockTransCurrencyEntity = stockTransCurrencyJpaRepository.findOne(stockTransCurrency.getId());
		stockTransCurrencyServiceMapper.mapStockTransCurrencyToStockTransCurrencyEntity(stockTransCurrency, stockTransCurrencyEntity);
		StockTransCurrencyEntity stockTransCurrencyEntitySaved = stockTransCurrencyJpaRepository.save(stockTransCurrencyEntity);
		return stockTransCurrencyServiceMapper.mapStockTransCurrencyEntityToStockTransCurrency(stockTransCurrencyEntitySaved);
	}

	public void delete(Integer id) {
		stockTransCurrencyJpaRepository.delete(id);
	}

	public StockTransCurrencyJpaRepository getStockTransCurrencyJpaRepository() {
		return stockTransCurrencyJpaRepository;
	}

	public void setStockTransCurrencyJpaRepository(StockTransCurrencyJpaRepository stockTransCurrencyJpaRepository) {
		this.stockTransCurrencyJpaRepository = stockTransCurrencyJpaRepository;
	}

	public StockTransCurrencyServiceMapper getStockTransCurrencyServiceMapper() {
		return stockTransCurrencyServiceMapper;
	}

	public void setStockTransCurrencyServiceMapper(StockTransCurrencyServiceMapper stockTransCurrencyServiceMapper) {
		this.stockTransCurrencyServiceMapper = stockTransCurrencyServiceMapper;
	}

}
