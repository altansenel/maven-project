/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.ChqbllTrans;
import org.demo.bean.jpa.ChqbllTransEntity;
import java.util.Date;
import java.util.List;
import org.demo.business.service.ChqbllTransService;
import org.demo.business.service.mapping.ChqbllTransServiceMapper;
import org.demo.data.repository.jpa.ChqbllTransJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of ChqbllTransService
 */
@Component
@Transactional
public class ChqbllTransServiceImpl implements ChqbllTransService {

	@Resource
	private ChqbllTransJpaRepository chqbllTransJpaRepository;

	@Resource
	private ChqbllTransServiceMapper chqbllTransServiceMapper;
	
	public ChqbllTrans findById(Integer id) {
		ChqbllTransEntity chqbllTransEntity = chqbllTransJpaRepository.findOne(id);
		return chqbllTransServiceMapper.mapChqbllTransEntityToChqbllTrans(chqbllTransEntity);
	}

	public List<ChqbllTrans> findAll() {
		Iterable<ChqbllTransEntity> entities = chqbllTransJpaRepository.findAll();
		List<ChqbllTrans> beans = new ArrayList<ChqbllTrans>();
		for(ChqbllTransEntity chqbllTransEntity : entities) {
			beans.add(chqbllTransServiceMapper.mapChqbllTransEntityToChqbllTrans(chqbllTransEntity));
		}
		return beans;
	}

	public ChqbllTrans save(ChqbllTrans chqbllTrans) {
		return update(chqbllTrans) ;
	}

	public ChqbllTrans create(ChqbllTrans chqbllTrans) {
		ChqbllTransEntity chqbllTransEntity = chqbllTransJpaRepository.findOne(chqbllTrans.getId());
		if( chqbllTransEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		chqbllTransEntity = new ChqbllTransEntity();
		chqbllTransServiceMapper.mapChqbllTransToChqbllTransEntity(chqbllTrans, chqbllTransEntity);
		ChqbllTransEntity chqbllTransEntitySaved = chqbllTransJpaRepository.save(chqbllTransEntity);
		return chqbllTransServiceMapper.mapChqbllTransEntityToChqbllTrans(chqbllTransEntitySaved);
	}

	public ChqbllTrans update(ChqbllTrans chqbllTrans) {
		ChqbllTransEntity chqbllTransEntity = chqbllTransJpaRepository.findOne(chqbllTrans.getId());
		chqbllTransServiceMapper.mapChqbllTransToChqbllTransEntity(chqbllTrans, chqbllTransEntity);
		ChqbllTransEntity chqbllTransEntitySaved = chqbllTransJpaRepository.save(chqbllTransEntity);
		return chqbllTransServiceMapper.mapChqbllTransEntityToChqbllTrans(chqbllTransEntitySaved);
	}

	public void delete(Integer id) {
		chqbllTransJpaRepository.delete(id);
	}

	public ChqbllTransJpaRepository getChqbllTransJpaRepository() {
		return chqbllTransJpaRepository;
	}

	public void setChqbllTransJpaRepository(ChqbllTransJpaRepository chqbllTransJpaRepository) {
		this.chqbllTransJpaRepository = chqbllTransJpaRepository;
	}

	public ChqbllTransServiceMapper getChqbllTransServiceMapper() {
		return chqbllTransServiceMapper;
	}

	public void setChqbllTransServiceMapper(ChqbllTransServiceMapper chqbllTransServiceMapper) {
		this.chqbllTransServiceMapper = chqbllTransServiceMapper;
	}

}
