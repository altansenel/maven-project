/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.SaleCampaign;
import org.demo.bean.jpa.SaleCampaignEntity;
import java.util.Date;
import org.demo.business.service.SaleCampaignService;
import org.demo.business.service.mapping.SaleCampaignServiceMapper;
import org.demo.data.repository.jpa.SaleCampaignJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of SaleCampaignService
 */
@Component
@Transactional
public class SaleCampaignServiceImpl implements SaleCampaignService {

	@Resource
	private SaleCampaignJpaRepository saleCampaignJpaRepository;

	@Resource
	private SaleCampaignServiceMapper saleCampaignServiceMapper;
	
	public SaleCampaign findById(Integer id) {
		SaleCampaignEntity saleCampaignEntity = saleCampaignJpaRepository.findOne(id);
		return saleCampaignServiceMapper.mapSaleCampaignEntityToSaleCampaign(saleCampaignEntity);
	}

	public List<SaleCampaign> findAll() {
		Iterable<SaleCampaignEntity> entities = saleCampaignJpaRepository.findAll();
		List<SaleCampaign> beans = new ArrayList<SaleCampaign>();
		for(SaleCampaignEntity saleCampaignEntity : entities) {
			beans.add(saleCampaignServiceMapper.mapSaleCampaignEntityToSaleCampaign(saleCampaignEntity));
		}
		return beans;
	}

	public SaleCampaign save(SaleCampaign saleCampaign) {
		return update(saleCampaign) ;
	}

	public SaleCampaign create(SaleCampaign saleCampaign) {
		SaleCampaignEntity saleCampaignEntity = saleCampaignJpaRepository.findOne(saleCampaign.getId());
		if( saleCampaignEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		saleCampaignEntity = new SaleCampaignEntity();
		saleCampaignServiceMapper.mapSaleCampaignToSaleCampaignEntity(saleCampaign, saleCampaignEntity);
		SaleCampaignEntity saleCampaignEntitySaved = saleCampaignJpaRepository.save(saleCampaignEntity);
		return saleCampaignServiceMapper.mapSaleCampaignEntityToSaleCampaign(saleCampaignEntitySaved);
	}

	public SaleCampaign update(SaleCampaign saleCampaign) {
		SaleCampaignEntity saleCampaignEntity = saleCampaignJpaRepository.findOne(saleCampaign.getId());
		saleCampaignServiceMapper.mapSaleCampaignToSaleCampaignEntity(saleCampaign, saleCampaignEntity);
		SaleCampaignEntity saleCampaignEntitySaved = saleCampaignJpaRepository.save(saleCampaignEntity);
		return saleCampaignServiceMapper.mapSaleCampaignEntityToSaleCampaign(saleCampaignEntitySaved);
	}

	public void delete(Integer id) {
		saleCampaignJpaRepository.delete(id);
	}

	public SaleCampaignJpaRepository getSaleCampaignJpaRepository() {
		return saleCampaignJpaRepository;
	}

	public void setSaleCampaignJpaRepository(SaleCampaignJpaRepository saleCampaignJpaRepository) {
		this.saleCampaignJpaRepository = saleCampaignJpaRepository;
	}

	public SaleCampaignServiceMapper getSaleCampaignServiceMapper() {
		return saleCampaignServiceMapper;
	}

	public void setSaleCampaignServiceMapper(SaleCampaignServiceMapper saleCampaignServiceMapper) {
		this.saleCampaignServiceMapper = saleCampaignServiceMapper;
	}

}
