/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.AdminUserGivenRole;
import org.demo.bean.jpa.AdminUserGivenRoleEntity;
import org.demo.business.service.AdminUserGivenRoleService;
import org.demo.business.service.mapping.AdminUserGivenRoleServiceMapper;
import org.demo.data.repository.jpa.AdminUserGivenRoleJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of AdminUserGivenRoleService
 */
@Component
@Transactional
public class AdminUserGivenRoleServiceImpl implements AdminUserGivenRoleService {

	@Resource
	private AdminUserGivenRoleJpaRepository adminUserGivenRoleJpaRepository;

	@Resource
	private AdminUserGivenRoleServiceMapper adminUserGivenRoleServiceMapper;
	
	public AdminUserGivenRole findById(Integer id) {
		AdminUserGivenRoleEntity adminUserGivenRoleEntity = adminUserGivenRoleJpaRepository.findOne(id);
		return adminUserGivenRoleServiceMapper.mapAdminUserGivenRoleEntityToAdminUserGivenRole(adminUserGivenRoleEntity);
	}

	public List<AdminUserGivenRole> findAll() {
		Iterable<AdminUserGivenRoleEntity> entities = adminUserGivenRoleJpaRepository.findAll();
		List<AdminUserGivenRole> beans = new ArrayList<AdminUserGivenRole>();
		for(AdminUserGivenRoleEntity adminUserGivenRoleEntity : entities) {
			beans.add(adminUserGivenRoleServiceMapper.mapAdminUserGivenRoleEntityToAdminUserGivenRole(adminUserGivenRoleEntity));
		}
		return beans;
	}

	public AdminUserGivenRole save(AdminUserGivenRole adminUserGivenRole) {
		return update(adminUserGivenRole) ;
	}

	public AdminUserGivenRole create(AdminUserGivenRole adminUserGivenRole) {
		AdminUserGivenRoleEntity adminUserGivenRoleEntity = adminUserGivenRoleJpaRepository.findOne(adminUserGivenRole.getId());
		if( adminUserGivenRoleEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		adminUserGivenRoleEntity = new AdminUserGivenRoleEntity();
		adminUserGivenRoleServiceMapper.mapAdminUserGivenRoleToAdminUserGivenRoleEntity(adminUserGivenRole, adminUserGivenRoleEntity);
		AdminUserGivenRoleEntity adminUserGivenRoleEntitySaved = adminUserGivenRoleJpaRepository.save(adminUserGivenRoleEntity);
		return adminUserGivenRoleServiceMapper.mapAdminUserGivenRoleEntityToAdminUserGivenRole(adminUserGivenRoleEntitySaved);
	}

	public AdminUserGivenRole update(AdminUserGivenRole adminUserGivenRole) {
		AdminUserGivenRoleEntity adminUserGivenRoleEntity = adminUserGivenRoleJpaRepository.findOne(adminUserGivenRole.getId());
		adminUserGivenRoleServiceMapper.mapAdminUserGivenRoleToAdminUserGivenRoleEntity(adminUserGivenRole, adminUserGivenRoleEntity);
		AdminUserGivenRoleEntity adminUserGivenRoleEntitySaved = adminUserGivenRoleJpaRepository.save(adminUserGivenRoleEntity);
		return adminUserGivenRoleServiceMapper.mapAdminUserGivenRoleEntityToAdminUserGivenRole(adminUserGivenRoleEntitySaved);
	}

	public void delete(Integer id) {
		adminUserGivenRoleJpaRepository.delete(id);
	}

	public AdminUserGivenRoleJpaRepository getAdminUserGivenRoleJpaRepository() {
		return adminUserGivenRoleJpaRepository;
	}

	public void setAdminUserGivenRoleJpaRepository(AdminUserGivenRoleJpaRepository adminUserGivenRoleJpaRepository) {
		this.adminUserGivenRoleJpaRepository = adminUserGivenRoleJpaRepository;
	}

	public AdminUserGivenRoleServiceMapper getAdminUserGivenRoleServiceMapper() {
		return adminUserGivenRoleServiceMapper;
	}

	public void setAdminUserGivenRoleServiceMapper(AdminUserGivenRoleServiceMapper adminUserGivenRoleServiceMapper) {
		this.adminUserGivenRoleServiceMapper = adminUserGivenRoleServiceMapper;
	}

}
