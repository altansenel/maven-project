/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.SafeExpense;
import org.demo.bean.jpa.SafeExpenseEntity;
import java.util.Date;
import java.util.List;
import org.demo.business.service.SafeExpenseService;
import org.demo.business.service.mapping.SafeExpenseServiceMapper;
import org.demo.data.repository.jpa.SafeExpenseJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of SafeExpenseService
 */
@Component
@Transactional
public class SafeExpenseServiceImpl implements SafeExpenseService {

	@Resource
	private SafeExpenseJpaRepository safeExpenseJpaRepository;

	@Resource
	private SafeExpenseServiceMapper safeExpenseServiceMapper;
	
	public SafeExpense findById(Integer id) {
		SafeExpenseEntity safeExpenseEntity = safeExpenseJpaRepository.findOne(id);
		return safeExpenseServiceMapper.mapSafeExpenseEntityToSafeExpense(safeExpenseEntity);
	}

	public List<SafeExpense> findAll() {
		Iterable<SafeExpenseEntity> entities = safeExpenseJpaRepository.findAll();
		List<SafeExpense> beans = new ArrayList<SafeExpense>();
		for(SafeExpenseEntity safeExpenseEntity : entities) {
			beans.add(safeExpenseServiceMapper.mapSafeExpenseEntityToSafeExpense(safeExpenseEntity));
		}
		return beans;
	}

	public SafeExpense save(SafeExpense safeExpense) {
		return update(safeExpense) ;
	}

	public SafeExpense create(SafeExpense safeExpense) {
		SafeExpenseEntity safeExpenseEntity = safeExpenseJpaRepository.findOne(safeExpense.getId());
		if( safeExpenseEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		safeExpenseEntity = new SafeExpenseEntity();
		safeExpenseServiceMapper.mapSafeExpenseToSafeExpenseEntity(safeExpense, safeExpenseEntity);
		SafeExpenseEntity safeExpenseEntitySaved = safeExpenseJpaRepository.save(safeExpenseEntity);
		return safeExpenseServiceMapper.mapSafeExpenseEntityToSafeExpense(safeExpenseEntitySaved);
	}

	public SafeExpense update(SafeExpense safeExpense) {
		SafeExpenseEntity safeExpenseEntity = safeExpenseJpaRepository.findOne(safeExpense.getId());
		safeExpenseServiceMapper.mapSafeExpenseToSafeExpenseEntity(safeExpense, safeExpenseEntity);
		SafeExpenseEntity safeExpenseEntitySaved = safeExpenseJpaRepository.save(safeExpenseEntity);
		return safeExpenseServiceMapper.mapSafeExpenseEntityToSafeExpense(safeExpenseEntitySaved);
	}

	public void delete(Integer id) {
		safeExpenseJpaRepository.delete(id);
	}

	public SafeExpenseJpaRepository getSafeExpenseJpaRepository() {
		return safeExpenseJpaRepository;
	}

	public void setSafeExpenseJpaRepository(SafeExpenseJpaRepository safeExpenseJpaRepository) {
		this.safeExpenseJpaRepository = safeExpenseJpaRepository;
	}

	public SafeExpenseServiceMapper getSafeExpenseServiceMapper() {
		return safeExpenseServiceMapper;
	}

	public void setSafeExpenseServiceMapper(SafeExpenseServiceMapper safeExpenseServiceMapper) {
		this.safeExpenseServiceMapper = safeExpenseServiceMapper;
	}

}
