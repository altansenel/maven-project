/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.StockTransSource;
import org.demo.bean.jpa.StockTransSourceEntity;
import java.util.Date;
import java.util.List;
import org.demo.business.service.StockTransSourceService;
import org.demo.business.service.mapping.StockTransSourceServiceMapper;
import org.demo.data.repository.jpa.StockTransSourceJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of StockTransSourceService
 */
@Component
@Transactional
public class StockTransSourceServiceImpl implements StockTransSourceService {

	@Resource
	private StockTransSourceJpaRepository stockTransSourceJpaRepository;

	@Resource
	private StockTransSourceServiceMapper stockTransSourceServiceMapper;
	
	public StockTransSource findById(Integer id) {
		StockTransSourceEntity stockTransSourceEntity = stockTransSourceJpaRepository.findOne(id);
		return stockTransSourceServiceMapper.mapStockTransSourceEntityToStockTransSource(stockTransSourceEntity);
	}

	public List<StockTransSource> findAll() {
		Iterable<StockTransSourceEntity> entities = stockTransSourceJpaRepository.findAll();
		List<StockTransSource> beans = new ArrayList<StockTransSource>();
		for(StockTransSourceEntity stockTransSourceEntity : entities) {
			beans.add(stockTransSourceServiceMapper.mapStockTransSourceEntityToStockTransSource(stockTransSourceEntity));
		}
		return beans;
	}

	public StockTransSource save(StockTransSource stockTransSource) {
		return update(stockTransSource) ;
	}

	public StockTransSource create(StockTransSource stockTransSource) {
		StockTransSourceEntity stockTransSourceEntity = stockTransSourceJpaRepository.findOne(stockTransSource.getId());
		if( stockTransSourceEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		stockTransSourceEntity = new StockTransSourceEntity();
		stockTransSourceServiceMapper.mapStockTransSourceToStockTransSourceEntity(stockTransSource, stockTransSourceEntity);
		StockTransSourceEntity stockTransSourceEntitySaved = stockTransSourceJpaRepository.save(stockTransSourceEntity);
		return stockTransSourceServiceMapper.mapStockTransSourceEntityToStockTransSource(stockTransSourceEntitySaved);
	}

	public StockTransSource update(StockTransSource stockTransSource) {
		StockTransSourceEntity stockTransSourceEntity = stockTransSourceJpaRepository.findOne(stockTransSource.getId());
		stockTransSourceServiceMapper.mapStockTransSourceToStockTransSourceEntity(stockTransSource, stockTransSourceEntity);
		StockTransSourceEntity stockTransSourceEntitySaved = stockTransSourceJpaRepository.save(stockTransSourceEntity);
		return stockTransSourceServiceMapper.mapStockTransSourceEntityToStockTransSource(stockTransSourceEntitySaved);
	}

	public void delete(Integer id) {
		stockTransSourceJpaRepository.delete(id);
	}

	public StockTransSourceJpaRepository getStockTransSourceJpaRepository() {
		return stockTransSourceJpaRepository;
	}

	public void setStockTransSourceJpaRepository(StockTransSourceJpaRepository stockTransSourceJpaRepository) {
		this.stockTransSourceJpaRepository = stockTransSourceJpaRepository;
	}

	public StockTransSourceServiceMapper getStockTransSourceServiceMapper() {
		return stockTransSourceServiceMapper;
	}

	public void setStockTransSourceServiceMapper(StockTransSourceServiceMapper stockTransSourceServiceMapper) {
		this.stockTransSourceServiceMapper = stockTransSourceServiceMapper;
	}

}
