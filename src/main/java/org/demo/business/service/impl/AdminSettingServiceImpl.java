/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.AdminSetting;
import org.demo.bean.jpa.AdminSettingEntity;
import java.util.Date;
import org.demo.business.service.AdminSettingService;
import org.demo.business.service.mapping.AdminSettingServiceMapper;
import org.demo.data.repository.jpa.AdminSettingJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of AdminSettingService
 */
@Component
@Transactional
public class AdminSettingServiceImpl implements AdminSettingService {

	@Resource
	private AdminSettingJpaRepository adminSettingJpaRepository;

	@Resource
	private AdminSettingServiceMapper adminSettingServiceMapper;
	
	public AdminSetting findById(Integer id) {
		AdminSettingEntity adminSettingEntity = adminSettingJpaRepository.findOne(id);
		return adminSettingServiceMapper.mapAdminSettingEntityToAdminSetting(adminSettingEntity);
	}

	public List<AdminSetting> findAll() {
		Iterable<AdminSettingEntity> entities = adminSettingJpaRepository.findAll();
		List<AdminSetting> beans = new ArrayList<AdminSetting>();
		for(AdminSettingEntity adminSettingEntity : entities) {
			beans.add(adminSettingServiceMapper.mapAdminSettingEntityToAdminSetting(adminSettingEntity));
		}
		return beans;
	}

	public AdminSetting save(AdminSetting adminSetting) {
		return update(adminSetting) ;
	}

	public AdminSetting create(AdminSetting adminSetting) {
		AdminSettingEntity adminSettingEntity = adminSettingJpaRepository.findOne(adminSetting.getId());
		if( adminSettingEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		adminSettingEntity = new AdminSettingEntity();
		adminSettingServiceMapper.mapAdminSettingToAdminSettingEntity(adminSetting, adminSettingEntity);
		AdminSettingEntity adminSettingEntitySaved = adminSettingJpaRepository.save(adminSettingEntity);
		return adminSettingServiceMapper.mapAdminSettingEntityToAdminSetting(adminSettingEntitySaved);
	}

	public AdminSetting update(AdminSetting adminSetting) {
		AdminSettingEntity adminSettingEntity = adminSettingJpaRepository.findOne(adminSetting.getId());
		adminSettingServiceMapper.mapAdminSettingToAdminSettingEntity(adminSetting, adminSettingEntity);
		AdminSettingEntity adminSettingEntitySaved = adminSettingJpaRepository.save(adminSettingEntity);
		return adminSettingServiceMapper.mapAdminSettingEntityToAdminSetting(adminSettingEntitySaved);
	}

	public void delete(Integer id) {
		adminSettingJpaRepository.delete(id);
	}

	public AdminSettingJpaRepository getAdminSettingJpaRepository() {
		return adminSettingJpaRepository;
	}

	public void setAdminSettingJpaRepository(AdminSettingJpaRepository adminSettingJpaRepository) {
		this.adminSettingJpaRepository = adminSettingJpaRepository;
	}

	public AdminSettingServiceMapper getAdminSettingServiceMapper() {
		return adminSettingServiceMapper;
	}

	public void setAdminSettingServiceMapper(AdminSettingServiceMapper adminSettingServiceMapper) {
		this.adminSettingServiceMapper = adminSettingServiceMapper;
	}

}
