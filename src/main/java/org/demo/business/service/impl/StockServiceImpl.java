/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.Stock;
import org.demo.bean.jpa.StockEntity;
import java.util.Date;
import java.util.List;
import org.demo.business.service.StockService;
import org.demo.business.service.mapping.StockServiceMapper;
import org.demo.data.repository.jpa.StockJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of StockService
 */
@Component
@Transactional
public class StockServiceImpl implements StockService {

	@Resource
	private StockJpaRepository stockJpaRepository;

	@Resource
	private StockServiceMapper stockServiceMapper;
	
	public Stock findById(Integer id) {
		StockEntity stockEntity = stockJpaRepository.findOne(id);
		return stockServiceMapper.mapStockEntityToStock(stockEntity);
	}

	public List<Stock> findAll() {
		Iterable<StockEntity> entities = stockJpaRepository.findAll();
		List<Stock> beans = new ArrayList<Stock>();
		for(StockEntity stockEntity : entities) {
			beans.add(stockServiceMapper.mapStockEntityToStock(stockEntity));
		}
		return beans;
	}

	public Stock save(Stock stock) {
		return update(stock) ;
	}

	public Stock create(Stock stock) {
		StockEntity stockEntity = stockJpaRepository.findOne(stock.getId());
		if( stockEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		stockEntity = new StockEntity();
		stockServiceMapper.mapStockToStockEntity(stock, stockEntity);
		StockEntity stockEntitySaved = stockJpaRepository.save(stockEntity);
		return stockServiceMapper.mapStockEntityToStock(stockEntitySaved);
	}

	public Stock update(Stock stock) {
		StockEntity stockEntity = stockJpaRepository.findOne(stock.getId());
		stockServiceMapper.mapStockToStockEntity(stock, stockEntity);
		StockEntity stockEntitySaved = stockJpaRepository.save(stockEntity);
		return stockServiceMapper.mapStockEntityToStock(stockEntitySaved);
	}

	public void delete(Integer id) {
		stockJpaRepository.delete(id);
	}

	public StockJpaRepository getStockJpaRepository() {
		return stockJpaRepository;
	}

	public void setStockJpaRepository(StockJpaRepository stockJpaRepository) {
		this.stockJpaRepository = stockJpaRepository;
	}

	public StockServiceMapper getStockServiceMapper() {
		return stockServiceMapper;
	}

	public void setStockServiceMapper(StockServiceMapper stockServiceMapper) {
		this.stockServiceMapper = stockServiceMapper;
	}

}
