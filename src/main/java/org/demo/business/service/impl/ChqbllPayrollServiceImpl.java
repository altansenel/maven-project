/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.ChqbllPayroll;
import org.demo.bean.jpa.ChqbllPayrollEntity;
import java.util.Date;
import java.util.List;
import org.demo.business.service.ChqbllPayrollService;
import org.demo.business.service.mapping.ChqbllPayrollServiceMapper;
import org.demo.data.repository.jpa.ChqbllPayrollJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of ChqbllPayrollService
 */
@Component
@Transactional
public class ChqbllPayrollServiceImpl implements ChqbllPayrollService {

	@Resource
	private ChqbllPayrollJpaRepository chqbllPayrollJpaRepository;

	@Resource
	private ChqbllPayrollServiceMapper chqbllPayrollServiceMapper;
	
	public ChqbllPayroll findById(Integer id) {
		ChqbllPayrollEntity chqbllPayrollEntity = chqbllPayrollJpaRepository.findOne(id);
		return chqbllPayrollServiceMapper.mapChqbllPayrollEntityToChqbllPayroll(chqbllPayrollEntity);
	}

	public List<ChqbllPayroll> findAll() {
		Iterable<ChqbllPayrollEntity> entities = chqbllPayrollJpaRepository.findAll();
		List<ChqbllPayroll> beans = new ArrayList<ChqbllPayroll>();
		for(ChqbllPayrollEntity chqbllPayrollEntity : entities) {
			beans.add(chqbllPayrollServiceMapper.mapChqbllPayrollEntityToChqbllPayroll(chqbllPayrollEntity));
		}
		return beans;
	}

	public ChqbllPayroll save(ChqbllPayroll chqbllPayroll) {
		return update(chqbllPayroll) ;
	}

	public ChqbllPayroll create(ChqbllPayroll chqbllPayroll) {
		ChqbllPayrollEntity chqbllPayrollEntity = chqbllPayrollJpaRepository.findOne(chqbllPayroll.getId());
		if( chqbllPayrollEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		chqbllPayrollEntity = new ChqbllPayrollEntity();
		chqbllPayrollServiceMapper.mapChqbllPayrollToChqbllPayrollEntity(chqbllPayroll, chqbllPayrollEntity);
		ChqbllPayrollEntity chqbllPayrollEntitySaved = chqbllPayrollJpaRepository.save(chqbllPayrollEntity);
		return chqbllPayrollServiceMapper.mapChqbllPayrollEntityToChqbllPayroll(chqbllPayrollEntitySaved);
	}

	public ChqbllPayroll update(ChqbllPayroll chqbllPayroll) {
		ChqbllPayrollEntity chqbllPayrollEntity = chqbllPayrollJpaRepository.findOne(chqbllPayroll.getId());
		chqbllPayrollServiceMapper.mapChqbllPayrollToChqbllPayrollEntity(chqbllPayroll, chqbllPayrollEntity);
		ChqbllPayrollEntity chqbllPayrollEntitySaved = chqbllPayrollJpaRepository.save(chqbllPayrollEntity);
		return chqbllPayrollServiceMapper.mapChqbllPayrollEntityToChqbllPayroll(chqbllPayrollEntitySaved);
	}

	public void delete(Integer id) {
		chqbllPayrollJpaRepository.delete(id);
	}

	public ChqbllPayrollJpaRepository getChqbllPayrollJpaRepository() {
		return chqbllPayrollJpaRepository;
	}

	public void setChqbllPayrollJpaRepository(ChqbllPayrollJpaRepository chqbllPayrollJpaRepository) {
		this.chqbllPayrollJpaRepository = chqbllPayrollJpaRepository;
	}

	public ChqbllPayrollServiceMapper getChqbllPayrollServiceMapper() {
		return chqbllPayrollServiceMapper;
	}

	public void setChqbllPayrollServiceMapper(ChqbllPayrollServiceMapper chqbllPayrollServiceMapper) {
		this.chqbllPayrollServiceMapper = chqbllPayrollServiceMapper;
	}

}
