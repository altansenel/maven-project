/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.AdminUser;
import org.demo.bean.jpa.AdminUserEntity;
import org.demo.business.service.AdminUserService;
import org.demo.business.service.mapping.AdminUserServiceMapper;
import org.demo.data.repository.jpa.AdminUserJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of AdminUserService
 */
@Component
@Transactional
public class AdminUserServiceImpl implements AdminUserService {

	@Resource
	private AdminUserJpaRepository adminUserJpaRepository;

	@Resource
	private AdminUserServiceMapper adminUserServiceMapper;
	
	public AdminUser findById(Integer id) {
		AdminUserEntity adminUserEntity = adminUserJpaRepository.findOne(id);
		return adminUserServiceMapper.mapAdminUserEntityToAdminUser(adminUserEntity);
	}

	public List<AdminUser> findAll() {
		Iterable<AdminUserEntity> entities = adminUserJpaRepository.findAll();
		List<AdminUser> beans = new ArrayList<AdminUser>();
		for(AdminUserEntity adminUserEntity : entities) {
			beans.add(adminUserServiceMapper.mapAdminUserEntityToAdminUser(adminUserEntity));
		}
		return beans;
	}

	public AdminUser save(AdminUser adminUser) {
		return update(adminUser) ;
	}

	public AdminUser create(AdminUser adminUser) {
		AdminUserEntity adminUserEntity = adminUserJpaRepository.findOne(adminUser.getId());
		if( adminUserEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		adminUserEntity = new AdminUserEntity();
		adminUserServiceMapper.mapAdminUserToAdminUserEntity(adminUser, adminUserEntity);
		AdminUserEntity adminUserEntitySaved = adminUserJpaRepository.save(adminUserEntity);
		return adminUserServiceMapper.mapAdminUserEntityToAdminUser(adminUserEntitySaved);
	}

	public AdminUser update(AdminUser adminUser) {
		AdminUserEntity adminUserEntity = adminUserJpaRepository.findOne(adminUser.getId());
		adminUserServiceMapper.mapAdminUserToAdminUserEntity(adminUser, adminUserEntity);
		AdminUserEntity adminUserEntitySaved = adminUserJpaRepository.save(adminUserEntity);
		return adminUserServiceMapper.mapAdminUserEntityToAdminUser(adminUserEntitySaved);
	}

	public void delete(Integer id) {
		adminUserJpaRepository.delete(id);
	}

	public AdminUserJpaRepository getAdminUserJpaRepository() {
		return adminUserJpaRepository;
	}

	public void setAdminUserJpaRepository(AdminUserJpaRepository adminUserJpaRepository) {
		this.adminUserJpaRepository = adminUserJpaRepository;
	}

	public AdminUserServiceMapper getAdminUserServiceMapper() {
		return adminUserServiceMapper;
	}

	public void setAdminUserServiceMapper(AdminUserServiceMapper adminUserServiceMapper) {
		this.adminUserServiceMapper = adminUserServiceMapper;
	}

}
