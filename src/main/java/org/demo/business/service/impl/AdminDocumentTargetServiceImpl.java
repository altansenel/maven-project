/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.AdminDocumentTarget;
import org.demo.bean.jpa.AdminDocumentTargetEntity;
import org.demo.business.service.AdminDocumentTargetService;
import org.demo.business.service.mapping.AdminDocumentTargetServiceMapper;
import org.demo.data.repository.jpa.AdminDocumentTargetJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of AdminDocumentTargetService
 */
@Component
@Transactional
public class AdminDocumentTargetServiceImpl implements AdminDocumentTargetService {

	@Resource
	private AdminDocumentTargetJpaRepository adminDocumentTargetJpaRepository;

	@Resource
	private AdminDocumentTargetServiceMapper adminDocumentTargetServiceMapper;
	
	public AdminDocumentTarget findById(Integer id) {
		AdminDocumentTargetEntity adminDocumentTargetEntity = adminDocumentTargetJpaRepository.findOne(id);
		return adminDocumentTargetServiceMapper.mapAdminDocumentTargetEntityToAdminDocumentTarget(adminDocumentTargetEntity);
	}

	public List<AdminDocumentTarget> findAll() {
		Iterable<AdminDocumentTargetEntity> entities = adminDocumentTargetJpaRepository.findAll();
		List<AdminDocumentTarget> beans = new ArrayList<AdminDocumentTarget>();
		for(AdminDocumentTargetEntity adminDocumentTargetEntity : entities) {
			beans.add(adminDocumentTargetServiceMapper.mapAdminDocumentTargetEntityToAdminDocumentTarget(adminDocumentTargetEntity));
		}
		return beans;
	}

	public AdminDocumentTarget save(AdminDocumentTarget adminDocumentTarget) {
		return update(adminDocumentTarget) ;
	}

	public AdminDocumentTarget create(AdminDocumentTarget adminDocumentTarget) {
		AdminDocumentTargetEntity adminDocumentTargetEntity = adminDocumentTargetJpaRepository.findOne(adminDocumentTarget.getId());
		if( adminDocumentTargetEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		adminDocumentTargetEntity = new AdminDocumentTargetEntity();
		adminDocumentTargetServiceMapper.mapAdminDocumentTargetToAdminDocumentTargetEntity(adminDocumentTarget, adminDocumentTargetEntity);
		AdminDocumentTargetEntity adminDocumentTargetEntitySaved = adminDocumentTargetJpaRepository.save(adminDocumentTargetEntity);
		return adminDocumentTargetServiceMapper.mapAdminDocumentTargetEntityToAdminDocumentTarget(adminDocumentTargetEntitySaved);
	}

	public AdminDocumentTarget update(AdminDocumentTarget adminDocumentTarget) {
		AdminDocumentTargetEntity adminDocumentTargetEntity = adminDocumentTargetJpaRepository.findOne(adminDocumentTarget.getId());
		adminDocumentTargetServiceMapper.mapAdminDocumentTargetToAdminDocumentTargetEntity(adminDocumentTarget, adminDocumentTargetEntity);
		AdminDocumentTargetEntity adminDocumentTargetEntitySaved = adminDocumentTargetJpaRepository.save(adminDocumentTargetEntity);
		return adminDocumentTargetServiceMapper.mapAdminDocumentTargetEntityToAdminDocumentTarget(adminDocumentTargetEntitySaved);
	}

	public void delete(Integer id) {
		adminDocumentTargetJpaRepository.delete(id);
	}

	public AdminDocumentTargetJpaRepository getAdminDocumentTargetJpaRepository() {
		return adminDocumentTargetJpaRepository;
	}

	public void setAdminDocumentTargetJpaRepository(AdminDocumentTargetJpaRepository adminDocumentTargetJpaRepository) {
		this.adminDocumentTargetJpaRepository = adminDocumentTargetJpaRepository;
	}

	public AdminDocumentTargetServiceMapper getAdminDocumentTargetServiceMapper() {
		return adminDocumentTargetServiceMapper;
	}

	public void setAdminDocumentTargetServiceMapper(AdminDocumentTargetServiceMapper adminDocumentTargetServiceMapper) {
		this.adminDocumentTargetServiceMapper = adminDocumentTargetServiceMapper;
	}

}
