/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.WaybillTrans;
import org.demo.bean.jpa.WaybillTransEntity;
import java.util.Date;
import java.util.List;
import org.demo.business.service.WaybillTransService;
import org.demo.business.service.mapping.WaybillTransServiceMapper;
import org.demo.data.repository.jpa.WaybillTransJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of WaybillTransService
 */
@Component
@Transactional
public class WaybillTransServiceImpl implements WaybillTransService {

	@Resource
	private WaybillTransJpaRepository waybillTransJpaRepository;

	@Resource
	private WaybillTransServiceMapper waybillTransServiceMapper;
	
	public WaybillTrans findById(Integer id) {
		WaybillTransEntity waybillTransEntity = waybillTransJpaRepository.findOne(id);
		return waybillTransServiceMapper.mapWaybillTransEntityToWaybillTrans(waybillTransEntity);
	}

	public List<WaybillTrans> findAll() {
		Iterable<WaybillTransEntity> entities = waybillTransJpaRepository.findAll();
		List<WaybillTrans> beans = new ArrayList<WaybillTrans>();
		for(WaybillTransEntity waybillTransEntity : entities) {
			beans.add(waybillTransServiceMapper.mapWaybillTransEntityToWaybillTrans(waybillTransEntity));
		}
		return beans;
	}

	public WaybillTrans save(WaybillTrans waybillTrans) {
		return update(waybillTrans) ;
	}

	public WaybillTrans create(WaybillTrans waybillTrans) {
		WaybillTransEntity waybillTransEntity = waybillTransJpaRepository.findOne(waybillTrans.getId());
		if( waybillTransEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		waybillTransEntity = new WaybillTransEntity();
		waybillTransServiceMapper.mapWaybillTransToWaybillTransEntity(waybillTrans, waybillTransEntity);
		WaybillTransEntity waybillTransEntitySaved = waybillTransJpaRepository.save(waybillTransEntity);
		return waybillTransServiceMapper.mapWaybillTransEntityToWaybillTrans(waybillTransEntitySaved);
	}

	public WaybillTrans update(WaybillTrans waybillTrans) {
		WaybillTransEntity waybillTransEntity = waybillTransJpaRepository.findOne(waybillTrans.getId());
		waybillTransServiceMapper.mapWaybillTransToWaybillTransEntity(waybillTrans, waybillTransEntity);
		WaybillTransEntity waybillTransEntitySaved = waybillTransJpaRepository.save(waybillTransEntity);
		return waybillTransServiceMapper.mapWaybillTransEntityToWaybillTrans(waybillTransEntitySaved);
	}

	public void delete(Integer id) {
		waybillTransJpaRepository.delete(id);
	}

	public WaybillTransJpaRepository getWaybillTransJpaRepository() {
		return waybillTransJpaRepository;
	}

	public void setWaybillTransJpaRepository(WaybillTransJpaRepository waybillTransJpaRepository) {
		this.waybillTransJpaRepository = waybillTransJpaRepository;
	}

	public WaybillTransServiceMapper getWaybillTransServiceMapper() {
		return waybillTransServiceMapper;
	}

	public void setWaybillTransServiceMapper(WaybillTransServiceMapper waybillTransServiceMapper) {
		this.waybillTransServiceMapper = waybillTransServiceMapper;
	}

}
