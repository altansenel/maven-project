/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.StockCategory;
import org.demo.bean.jpa.StockCategoryEntity;
import java.util.Date;
import java.util.List;
import org.demo.business.service.StockCategoryService;
import org.demo.business.service.mapping.StockCategoryServiceMapper;
import org.demo.data.repository.jpa.StockCategoryJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of StockCategoryService
 */
@Component
@Transactional
public class StockCategoryServiceImpl implements StockCategoryService {

	@Resource
	private StockCategoryJpaRepository stockCategoryJpaRepository;

	@Resource
	private StockCategoryServiceMapper stockCategoryServiceMapper;
	
	public StockCategory findById(Integer id) {
		StockCategoryEntity stockCategoryEntity = stockCategoryJpaRepository.findOne(id);
		return stockCategoryServiceMapper.mapStockCategoryEntityToStockCategory(stockCategoryEntity);
	}

	public List<StockCategory> findAll() {
		Iterable<StockCategoryEntity> entities = stockCategoryJpaRepository.findAll();
		List<StockCategory> beans = new ArrayList<StockCategory>();
		for(StockCategoryEntity stockCategoryEntity : entities) {
			beans.add(stockCategoryServiceMapper.mapStockCategoryEntityToStockCategory(stockCategoryEntity));
		}
		return beans;
	}

	public StockCategory save(StockCategory stockCategory) {
		return update(stockCategory) ;
	}

	public StockCategory create(StockCategory stockCategory) {
		StockCategoryEntity stockCategoryEntity = stockCategoryJpaRepository.findOne(stockCategory.getId());
		if( stockCategoryEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		stockCategoryEntity = new StockCategoryEntity();
		stockCategoryServiceMapper.mapStockCategoryToStockCategoryEntity(stockCategory, stockCategoryEntity);
		StockCategoryEntity stockCategoryEntitySaved = stockCategoryJpaRepository.save(stockCategoryEntity);
		return stockCategoryServiceMapper.mapStockCategoryEntityToStockCategory(stockCategoryEntitySaved);
	}

	public StockCategory update(StockCategory stockCategory) {
		StockCategoryEntity stockCategoryEntity = stockCategoryJpaRepository.findOne(stockCategory.getId());
		stockCategoryServiceMapper.mapStockCategoryToStockCategoryEntity(stockCategory, stockCategoryEntity);
		StockCategoryEntity stockCategoryEntitySaved = stockCategoryJpaRepository.save(stockCategoryEntity);
		return stockCategoryServiceMapper.mapStockCategoryEntityToStockCategory(stockCategoryEntitySaved);
	}

	public void delete(Integer id) {
		stockCategoryJpaRepository.delete(id);
	}

	public StockCategoryJpaRepository getStockCategoryJpaRepository() {
		return stockCategoryJpaRepository;
	}

	public void setStockCategoryJpaRepository(StockCategoryJpaRepository stockCategoryJpaRepository) {
		this.stockCategoryJpaRepository = stockCategoryJpaRepository;
	}

	public StockCategoryServiceMapper getStockCategoryServiceMapper() {
		return stockCategoryServiceMapper;
	}

	public void setStockCategoryServiceMapper(StockCategoryServiceMapper stockCategoryServiceMapper) {
		this.stockCategoryServiceMapper = stockCategoryServiceMapper;
	}

}
