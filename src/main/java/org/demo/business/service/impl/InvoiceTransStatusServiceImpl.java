/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.InvoiceTransStatus;
import org.demo.bean.jpa.InvoiceTransStatusEntity;
import java.util.Date;
import java.util.List;
import org.demo.business.service.InvoiceTransStatusService;
import org.demo.business.service.mapping.InvoiceTransStatusServiceMapper;
import org.demo.data.repository.jpa.InvoiceTransStatusJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of InvoiceTransStatusService
 */
@Component
@Transactional
public class InvoiceTransStatusServiceImpl implements InvoiceTransStatusService {

	@Resource
	private InvoiceTransStatusJpaRepository invoiceTransStatusJpaRepository;

	@Resource
	private InvoiceTransStatusServiceMapper invoiceTransStatusServiceMapper;
	
	public InvoiceTransStatus findById(Integer id) {
		InvoiceTransStatusEntity invoiceTransStatusEntity = invoiceTransStatusJpaRepository.findOne(id);
		return invoiceTransStatusServiceMapper.mapInvoiceTransStatusEntityToInvoiceTransStatus(invoiceTransStatusEntity);
	}

	public List<InvoiceTransStatus> findAll() {
		Iterable<InvoiceTransStatusEntity> entities = invoiceTransStatusJpaRepository.findAll();
		List<InvoiceTransStatus> beans = new ArrayList<InvoiceTransStatus>();
		for(InvoiceTransStatusEntity invoiceTransStatusEntity : entities) {
			beans.add(invoiceTransStatusServiceMapper.mapInvoiceTransStatusEntityToInvoiceTransStatus(invoiceTransStatusEntity));
		}
		return beans;
	}

	public InvoiceTransStatus save(InvoiceTransStatus invoiceTransStatus) {
		return update(invoiceTransStatus) ;
	}

	public InvoiceTransStatus create(InvoiceTransStatus invoiceTransStatus) {
		InvoiceTransStatusEntity invoiceTransStatusEntity = invoiceTransStatusJpaRepository.findOne(invoiceTransStatus.getId());
		if( invoiceTransStatusEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		invoiceTransStatusEntity = new InvoiceTransStatusEntity();
		invoiceTransStatusServiceMapper.mapInvoiceTransStatusToInvoiceTransStatusEntity(invoiceTransStatus, invoiceTransStatusEntity);
		InvoiceTransStatusEntity invoiceTransStatusEntitySaved = invoiceTransStatusJpaRepository.save(invoiceTransStatusEntity);
		return invoiceTransStatusServiceMapper.mapInvoiceTransStatusEntityToInvoiceTransStatus(invoiceTransStatusEntitySaved);
	}

	public InvoiceTransStatus update(InvoiceTransStatus invoiceTransStatus) {
		InvoiceTransStatusEntity invoiceTransStatusEntity = invoiceTransStatusJpaRepository.findOne(invoiceTransStatus.getId());
		invoiceTransStatusServiceMapper.mapInvoiceTransStatusToInvoiceTransStatusEntity(invoiceTransStatus, invoiceTransStatusEntity);
		InvoiceTransStatusEntity invoiceTransStatusEntitySaved = invoiceTransStatusJpaRepository.save(invoiceTransStatusEntity);
		return invoiceTransStatusServiceMapper.mapInvoiceTransStatusEntityToInvoiceTransStatus(invoiceTransStatusEntitySaved);
	}

	public void delete(Integer id) {
		invoiceTransStatusJpaRepository.delete(id);
	}

	public InvoiceTransStatusJpaRepository getInvoiceTransStatusJpaRepository() {
		return invoiceTransStatusJpaRepository;
	}

	public void setInvoiceTransStatusJpaRepository(InvoiceTransStatusJpaRepository invoiceTransStatusJpaRepository) {
		this.invoiceTransStatusJpaRepository = invoiceTransStatusJpaRepository;
	}

	public InvoiceTransStatusServiceMapper getInvoiceTransStatusServiceMapper() {
		return invoiceTransStatusServiceMapper;
	}

	public void setInvoiceTransStatusServiceMapper(InvoiceTransStatusServiceMapper invoiceTransStatusServiceMapper) {
		this.invoiceTransStatusServiceMapper = invoiceTransStatusServiceMapper;
	}

}
