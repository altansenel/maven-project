/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.TempContactAging;
import org.demo.bean.jpa.TempContactAgingEntity;
import java.util.Date;
import org.demo.business.service.TempContactAgingService;
import org.demo.business.service.mapping.TempContactAgingServiceMapper;
import org.demo.data.repository.jpa.TempContactAgingJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of TempContactAgingService
 */
@Component
@Transactional
public class TempContactAgingServiceImpl implements TempContactAgingService {

	@Resource
	private TempContactAgingJpaRepository tempContactAgingJpaRepository;

	@Resource
	private TempContactAgingServiceMapper tempContactAgingServiceMapper;
	
	public TempContactAging findById(Integer id) {
		TempContactAgingEntity tempContactAgingEntity = tempContactAgingJpaRepository.findOne(id);
		return tempContactAgingServiceMapper.mapTempContactAgingEntityToTempContactAging(tempContactAgingEntity);
	}

	public List<TempContactAging> findAll() {
		Iterable<TempContactAgingEntity> entities = tempContactAgingJpaRepository.findAll();
		List<TempContactAging> beans = new ArrayList<TempContactAging>();
		for(TempContactAgingEntity tempContactAgingEntity : entities) {
			beans.add(tempContactAgingServiceMapper.mapTempContactAgingEntityToTempContactAging(tempContactAgingEntity));
		}
		return beans;
	}

	public TempContactAging save(TempContactAging tempContactAging) {
		return update(tempContactAging) ;
	}

	public TempContactAging create(TempContactAging tempContactAging) {
		TempContactAgingEntity tempContactAgingEntity = tempContactAgingJpaRepository.findOne(tempContactAging.getId());
		if( tempContactAgingEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		tempContactAgingEntity = new TempContactAgingEntity();
		tempContactAgingServiceMapper.mapTempContactAgingToTempContactAgingEntity(tempContactAging, tempContactAgingEntity);
		TempContactAgingEntity tempContactAgingEntitySaved = tempContactAgingJpaRepository.save(tempContactAgingEntity);
		return tempContactAgingServiceMapper.mapTempContactAgingEntityToTempContactAging(tempContactAgingEntitySaved);
	}

	public TempContactAging update(TempContactAging tempContactAging) {
		TempContactAgingEntity tempContactAgingEntity = tempContactAgingJpaRepository.findOne(tempContactAging.getId());
		tempContactAgingServiceMapper.mapTempContactAgingToTempContactAgingEntity(tempContactAging, tempContactAgingEntity);
		TempContactAgingEntity tempContactAgingEntitySaved = tempContactAgingJpaRepository.save(tempContactAgingEntity);
		return tempContactAgingServiceMapper.mapTempContactAgingEntityToTempContactAging(tempContactAgingEntitySaved);
	}

	public void delete(Integer id) {
		tempContactAgingJpaRepository.delete(id);
	}

	public TempContactAgingJpaRepository getTempContactAgingJpaRepository() {
		return tempContactAgingJpaRepository;
	}

	public void setTempContactAgingJpaRepository(TempContactAgingJpaRepository tempContactAgingJpaRepository) {
		this.tempContactAgingJpaRepository = tempContactAgingJpaRepository;
	}

	public TempContactAgingServiceMapper getTempContactAgingServiceMapper() {
		return tempContactAgingServiceMapper;
	}

	public void setTempContactAgingServiceMapper(TempContactAgingServiceMapper tempContactAgingServiceMapper) {
		this.tempContactAgingServiceMapper = tempContactAgingServiceMapper;
	}

}
