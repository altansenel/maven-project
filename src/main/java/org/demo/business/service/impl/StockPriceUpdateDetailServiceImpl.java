/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.StockPriceUpdateDetail;
import org.demo.bean.jpa.StockPriceUpdateDetailEntity;
import org.demo.business.service.StockPriceUpdateDetailService;
import org.demo.business.service.mapping.StockPriceUpdateDetailServiceMapper;
import org.demo.data.repository.jpa.StockPriceUpdateDetailJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of StockPriceUpdateDetailService
 */
@Component
@Transactional
public class StockPriceUpdateDetailServiceImpl implements StockPriceUpdateDetailService {

	@Resource
	private StockPriceUpdateDetailJpaRepository stockPriceUpdateDetailJpaRepository;

	@Resource
	private StockPriceUpdateDetailServiceMapper stockPriceUpdateDetailServiceMapper;
	
	public StockPriceUpdateDetail findById(Integer id) {
		StockPriceUpdateDetailEntity stockPriceUpdateDetailEntity = stockPriceUpdateDetailJpaRepository.findOne(id);
		return stockPriceUpdateDetailServiceMapper.mapStockPriceUpdateDetailEntityToStockPriceUpdateDetail(stockPriceUpdateDetailEntity);
	}

	public List<StockPriceUpdateDetail> findAll() {
		Iterable<StockPriceUpdateDetailEntity> entities = stockPriceUpdateDetailJpaRepository.findAll();
		List<StockPriceUpdateDetail> beans = new ArrayList<StockPriceUpdateDetail>();
		for(StockPriceUpdateDetailEntity stockPriceUpdateDetailEntity : entities) {
			beans.add(stockPriceUpdateDetailServiceMapper.mapStockPriceUpdateDetailEntityToStockPriceUpdateDetail(stockPriceUpdateDetailEntity));
		}
		return beans;
	}

	public StockPriceUpdateDetail save(StockPriceUpdateDetail stockPriceUpdateDetail) {
		return update(stockPriceUpdateDetail) ;
	}

	public StockPriceUpdateDetail create(StockPriceUpdateDetail stockPriceUpdateDetail) {
		StockPriceUpdateDetailEntity stockPriceUpdateDetailEntity = stockPriceUpdateDetailJpaRepository.findOne(stockPriceUpdateDetail.getId());
		if( stockPriceUpdateDetailEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		stockPriceUpdateDetailEntity = new StockPriceUpdateDetailEntity();
		stockPriceUpdateDetailServiceMapper.mapStockPriceUpdateDetailToStockPriceUpdateDetailEntity(stockPriceUpdateDetail, stockPriceUpdateDetailEntity);
		StockPriceUpdateDetailEntity stockPriceUpdateDetailEntitySaved = stockPriceUpdateDetailJpaRepository.save(stockPriceUpdateDetailEntity);
		return stockPriceUpdateDetailServiceMapper.mapStockPriceUpdateDetailEntityToStockPriceUpdateDetail(stockPriceUpdateDetailEntitySaved);
	}

	public StockPriceUpdateDetail update(StockPriceUpdateDetail stockPriceUpdateDetail) {
		StockPriceUpdateDetailEntity stockPriceUpdateDetailEntity = stockPriceUpdateDetailJpaRepository.findOne(stockPriceUpdateDetail.getId());
		stockPriceUpdateDetailServiceMapper.mapStockPriceUpdateDetailToStockPriceUpdateDetailEntity(stockPriceUpdateDetail, stockPriceUpdateDetailEntity);
		StockPriceUpdateDetailEntity stockPriceUpdateDetailEntitySaved = stockPriceUpdateDetailJpaRepository.save(stockPriceUpdateDetailEntity);
		return stockPriceUpdateDetailServiceMapper.mapStockPriceUpdateDetailEntityToStockPriceUpdateDetail(stockPriceUpdateDetailEntitySaved);
	}

	public void delete(Integer id) {
		stockPriceUpdateDetailJpaRepository.delete(id);
	}

	public StockPriceUpdateDetailJpaRepository getStockPriceUpdateDetailJpaRepository() {
		return stockPriceUpdateDetailJpaRepository;
	}

	public void setStockPriceUpdateDetailJpaRepository(StockPriceUpdateDetailJpaRepository stockPriceUpdateDetailJpaRepository) {
		this.stockPriceUpdateDetailJpaRepository = stockPriceUpdateDetailJpaRepository;
	}

	public StockPriceUpdateDetailServiceMapper getStockPriceUpdateDetailServiceMapper() {
		return stockPriceUpdateDetailServiceMapper;
	}

	public void setStockPriceUpdateDetailServiceMapper(StockPriceUpdateDetailServiceMapper stockPriceUpdateDetailServiceMapper) {
		this.stockPriceUpdateDetailServiceMapper = stockPriceUpdateDetailServiceMapper;
	}

}
