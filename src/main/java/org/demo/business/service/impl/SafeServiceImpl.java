/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.Safe;
import org.demo.bean.jpa.SafeEntity;
import java.util.Date;
import java.util.List;
import org.demo.business.service.SafeService;
import org.demo.business.service.mapping.SafeServiceMapper;
import org.demo.data.repository.jpa.SafeJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of SafeService
 */
@Component
@Transactional
public class SafeServiceImpl implements SafeService {

	@Resource
	private SafeJpaRepository safeJpaRepository;

	@Resource
	private SafeServiceMapper safeServiceMapper;
	
	public Safe findById(Integer id) {
		SafeEntity safeEntity = safeJpaRepository.findOne(id);
		return safeServiceMapper.mapSafeEntityToSafe(safeEntity);
	}

	public List<Safe> findAll() {
		Iterable<SafeEntity> entities = safeJpaRepository.findAll();
		List<Safe> beans = new ArrayList<Safe>();
		for(SafeEntity safeEntity : entities) {
			beans.add(safeServiceMapper.mapSafeEntityToSafe(safeEntity));
		}
		return beans;
	}

	public Safe save(Safe safe) {
		return update(safe) ;
	}

	public Safe create(Safe safe) {
		SafeEntity safeEntity = safeJpaRepository.findOne(safe.getId());
		if( safeEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		safeEntity = new SafeEntity();
		safeServiceMapper.mapSafeToSafeEntity(safe, safeEntity);
		SafeEntity safeEntitySaved = safeJpaRepository.save(safeEntity);
		return safeServiceMapper.mapSafeEntityToSafe(safeEntitySaved);
	}

	public Safe update(Safe safe) {
		SafeEntity safeEntity = safeJpaRepository.findOne(safe.getId());
		safeServiceMapper.mapSafeToSafeEntity(safe, safeEntity);
		SafeEntity safeEntitySaved = safeJpaRepository.save(safeEntity);
		return safeServiceMapper.mapSafeEntityToSafe(safeEntitySaved);
	}

	public void delete(Integer id) {
		safeJpaRepository.delete(id);
	}

	public SafeJpaRepository getSafeJpaRepository() {
		return safeJpaRepository;
	}

	public void setSafeJpaRepository(SafeJpaRepository safeJpaRepository) {
		this.safeJpaRepository = safeJpaRepository;
	}

	public SafeServiceMapper getSafeServiceMapper() {
		return safeServiceMapper;
	}

	public void setSafeServiceMapper(SafeServiceMapper safeServiceMapper) {
		this.safeServiceMapper = safeServiceMapper;
	}

}
