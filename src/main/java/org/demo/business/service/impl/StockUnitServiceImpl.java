/*
 * Created on 24 Þub 2016 ( Time 16:36:11 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.demo.bean.StockUnit;
import org.demo.bean.jpa.StockUnitEntity;
import java.util.Date;
import org.demo.business.service.StockUnitService;
import org.demo.business.service.mapping.StockUnitServiceMapper;
import org.demo.data.repository.jpa.StockUnitJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of StockUnitService
 */
@Component
@Transactional
public class StockUnitServiceImpl implements StockUnitService {

	@Resource
	private StockUnitJpaRepository stockUnitJpaRepository;

	@Resource
	private StockUnitServiceMapper stockUnitServiceMapper;
	
	public StockUnit findById(Integer id) {
		StockUnitEntity stockUnitEntity = stockUnitJpaRepository.findOne(id);
		return stockUnitServiceMapper.mapStockUnitEntityToStockUnit(stockUnitEntity);
	}

	public List<StockUnit> findAll() {
		Iterable<StockUnitEntity> entities = stockUnitJpaRepository.findAll();
		List<StockUnit> beans = new ArrayList<StockUnit>();
		for(StockUnitEntity stockUnitEntity : entities) {
			beans.add(stockUnitServiceMapper.mapStockUnitEntityToStockUnit(stockUnitEntity));
		}
		return beans;
	}

	public StockUnit save(StockUnit stockUnit) {
		return update(stockUnit) ;
	}

	public StockUnit create(StockUnit stockUnit) {
		StockUnitEntity stockUnitEntity = stockUnitJpaRepository.findOne(stockUnit.getId());
		if( stockUnitEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		stockUnitEntity = new StockUnitEntity();
		stockUnitServiceMapper.mapStockUnitToStockUnitEntity(stockUnit, stockUnitEntity);
		StockUnitEntity stockUnitEntitySaved = stockUnitJpaRepository.save(stockUnitEntity);
		return stockUnitServiceMapper.mapStockUnitEntityToStockUnit(stockUnitEntitySaved);
	}

	public StockUnit update(StockUnit stockUnit) {
		StockUnitEntity stockUnitEntity = stockUnitJpaRepository.findOne(stockUnit.getId());
		stockUnitServiceMapper.mapStockUnitToStockUnitEntity(stockUnit, stockUnitEntity);
		StockUnitEntity stockUnitEntitySaved = stockUnitJpaRepository.save(stockUnitEntity);
		return stockUnitServiceMapper.mapStockUnitEntityToStockUnit(stockUnitEntitySaved);
	}

	public void delete(Integer id) {
		stockUnitJpaRepository.delete(id);
	}

	public StockUnitJpaRepository getStockUnitJpaRepository() {
		return stockUnitJpaRepository;
	}

	public void setStockUnitJpaRepository(StockUnitJpaRepository stockUnitJpaRepository) {
		this.stockUnitJpaRepository = stockUnitJpaRepository;
	}

	public StockUnitServiceMapper getStockUnitServiceMapper() {
		return stockUnitServiceMapper;
	}

	public void setStockUnitServiceMapper(StockUnitServiceMapper stockUnitServiceMapper) {
		this.stockUnitServiceMapper = stockUnitServiceMapper;
	}

}
