/*
 * Created on 24 Þub 2016 ( Time 16:27:49 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.demo.bean.AdminUser;
import org.demo.bean.jpa.AdminUserEntity;
import org.demo.bean.jpa.AdminUserGroupEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class AdminUserServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public AdminUserServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'AdminUserEntity' to 'AdminUser'
	 * @param adminUserEntity
	 */
	public AdminUser mapAdminUserEntityToAdminUser(AdminUserEntity adminUserEntity) {
		if(adminUserEntity == null) {
			return null;
		}

		//--- Generic mapping 
		AdminUser adminUser = map(adminUserEntity, AdminUser.class);

		//--- Link mapping ( link to AdminUserGroup )
		if(adminUserEntity.getAdminUserGroup() != null) {
			adminUser.setUserGroupId(adminUserEntity.getAdminUserGroup().getId());
		}
		return adminUser;
	}
	
	/**
	 * Mapping from 'AdminUser' to 'AdminUserEntity'
	 * @param adminUser
	 * @param adminUserEntity
	 */
	public void mapAdminUserToAdminUserEntity(AdminUser adminUser, AdminUserEntity adminUserEntity) {
		if(adminUser == null) {
			return;
		}

		//--- Generic mapping 
		map(adminUser, adminUserEntity);

		//--- Link mapping ( link : adminUser )
		if( hasLinkToAdminUserGroup(adminUser) ) {
			AdminUserGroupEntity adminUserGroup1 = new AdminUserGroupEntity();
			adminUserGroup1.setId( adminUser.getUserGroupId() );
			adminUserEntity.setAdminUserGroup( adminUserGroup1 );
		} else {
			adminUserEntity.setAdminUserGroup( null );
		}

	}
	
	/**
	 * Verify that AdminUserGroup id is valid.
	 * @param AdminUserGroup AdminUserGroup
	 * @return boolean
	 */
	private boolean hasLinkToAdminUserGroup(AdminUser adminUser) {
		if(adminUser.getUserGroupId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}