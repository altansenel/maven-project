/*
 * Created on 24 Þub 2016 ( Time 16:27:50 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.demo.bean.GlobalCurrencyRateDetail;
import org.demo.bean.jpa.GlobalCurrencyRateDetailEntity;
import org.demo.bean.jpa.GlobalCurrencyRateEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class GlobalCurrencyRateDetailServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public GlobalCurrencyRateDetailServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'GlobalCurrencyRateDetailEntity' to 'GlobalCurrencyRateDetail'
	 * @param globalCurrencyRateDetailEntity
	 */
	public GlobalCurrencyRateDetail mapGlobalCurrencyRateDetailEntityToGlobalCurrencyRateDetail(GlobalCurrencyRateDetailEntity globalCurrencyRateDetailEntity) {
		if(globalCurrencyRateDetailEntity == null) {
			return null;
		}

		//--- Generic mapping 
		GlobalCurrencyRateDetail globalCurrencyRateDetail = map(globalCurrencyRateDetailEntity, GlobalCurrencyRateDetail.class);

		//--- Link mapping ( link to GlobalCurrencyRate )
		if(globalCurrencyRateDetailEntity.getGlobalCurrencyRate() != null) {
			globalCurrencyRateDetail.setCurrencyRateId(globalCurrencyRateDetailEntity.getGlobalCurrencyRate().getId());
		}
		return globalCurrencyRateDetail;
	}
	
	/**
	 * Mapping from 'GlobalCurrencyRateDetail' to 'GlobalCurrencyRateDetailEntity'
	 * @param globalCurrencyRateDetail
	 * @param globalCurrencyRateDetailEntity
	 */
	public void mapGlobalCurrencyRateDetailToGlobalCurrencyRateDetailEntity(GlobalCurrencyRateDetail globalCurrencyRateDetail, GlobalCurrencyRateDetailEntity globalCurrencyRateDetailEntity) {
		if(globalCurrencyRateDetail == null) {
			return;
		}

		//--- Generic mapping 
		map(globalCurrencyRateDetail, globalCurrencyRateDetailEntity);

		//--- Link mapping ( link : globalCurrencyRateDetail )
		if( hasLinkToGlobalCurrencyRate(globalCurrencyRateDetail) ) {
			GlobalCurrencyRateEntity globalCurrencyRate1 = new GlobalCurrencyRateEntity();
			globalCurrencyRate1.setId( globalCurrencyRateDetail.getCurrencyRateId() );
			globalCurrencyRateDetailEntity.setGlobalCurrencyRate( globalCurrencyRate1 );
		} else {
			globalCurrencyRateDetailEntity.setGlobalCurrencyRate( null );
		}

	}
	
	/**
	 * Verify that GlobalCurrencyRate id is valid.
	 * @param GlobalCurrencyRate GlobalCurrencyRate
	 * @return boolean
	 */
	private boolean hasLinkToGlobalCurrencyRate(GlobalCurrencyRateDetail globalCurrencyRateDetail) {
		if(globalCurrencyRateDetail.getCurrencyRateId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}