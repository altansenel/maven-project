/*
 * Created on 24 Þub 2016 ( Time 16:27:52 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.demo.bean.StockTransDetail;
import org.demo.bean.jpa.StockTransDetailEntity;
import org.demo.bean.jpa.StockTransEntity;
import org.demo.bean.jpa.StockTransSourceEntity;
import org.demo.bean.jpa.StockDepotEntity;
import org.demo.bean.jpa.GlobalPrivateCodeEntity;
import org.demo.bean.jpa.SaleSellerEntity;
import org.demo.bean.jpa.StockEntity;
import org.demo.bean.jpa.GlobalTransPointEntity;
import org.demo.bean.jpa.ContactEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class StockTransDetailServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public StockTransDetailServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'StockTransDetailEntity' to 'StockTransDetail'
	 * @param stockTransDetailEntity
	 */
	public StockTransDetail mapStockTransDetailEntityToStockTransDetail(StockTransDetailEntity stockTransDetailEntity) {
		if(stockTransDetailEntity == null) {
			return null;
		}

		//--- Generic mapping 
		StockTransDetail stockTransDetail = map(stockTransDetailEntity, StockTransDetail.class);

		//--- Link mapping ( link to StockTrans )
		if(stockTransDetailEntity.getStockTrans() != null) {
			stockTransDetail.setTransId(stockTransDetailEntity.getStockTrans().getId());
		}
		//--- Link mapping ( link to StockTransSource )
		if(stockTransDetailEntity.getStockTransSource() != null) {
			stockTransDetail.setTransSourceId(stockTransDetailEntity.getStockTransSource().getId());
		}
		//--- Link mapping ( link to StockDepot )
		if(stockTransDetailEntity.getStockDepot() != null) {
			stockTransDetail.setDepotId(stockTransDetailEntity.getStockDepot().getId());
		}
		//--- Link mapping ( link to GlobalPrivateCode )
		if(stockTransDetailEntity.getGlobalPrivateCode() != null) {
			stockTransDetail.setPrivateCodeId(stockTransDetailEntity.getGlobalPrivateCode().getId());
		}
		//--- Link mapping ( link to SaleSeller )
		if(stockTransDetailEntity.getSaleSeller() != null) {
			stockTransDetail.setSellerId(stockTransDetailEntity.getSaleSeller().getId());
		}
		//--- Link mapping ( link to Stock )
		if(stockTransDetailEntity.getStock() != null) {
			stockTransDetail.setStockId(stockTransDetailEntity.getStock().getId());
		}
		//--- Link mapping ( link to GlobalTransPoint )
		if(stockTransDetailEntity.getGlobalTransPoint() != null) {
			stockTransDetail.setTransPointId(stockTransDetailEntity.getGlobalTransPoint().getId());
		}
		//--- Link mapping ( link to Contact )
		if(stockTransDetailEntity.getContact() != null) {
			stockTransDetail.setContactId(stockTransDetailEntity.getContact().getId());
		}
		return stockTransDetail;
	}
	
	/**
	 * Mapping from 'StockTransDetail' to 'StockTransDetailEntity'
	 * @param stockTransDetail
	 * @param stockTransDetailEntity
	 */
	public void mapStockTransDetailToStockTransDetailEntity(StockTransDetail stockTransDetail, StockTransDetailEntity stockTransDetailEntity) {
		if(stockTransDetail == null) {
			return;
		}

		//--- Generic mapping 
		map(stockTransDetail, stockTransDetailEntity);

		//--- Link mapping ( link : stockTransDetail )
		if( hasLinkToStockTrans(stockTransDetail) ) {
			StockTransEntity stockTrans1 = new StockTransEntity();
			stockTrans1.setId( stockTransDetail.getTransId() );
			stockTransDetailEntity.setStockTrans( stockTrans1 );
		} else {
			stockTransDetailEntity.setStockTrans( null );
		}

		//--- Link mapping ( link : stockTransDetail )
		if( hasLinkToStockTransSource(stockTransDetail) ) {
			StockTransSourceEntity stockTransSource2 = new StockTransSourceEntity();
			stockTransSource2.setId( stockTransDetail.getTransSourceId() );
			stockTransDetailEntity.setStockTransSource( stockTransSource2 );
		} else {
			stockTransDetailEntity.setStockTransSource( null );
		}

		//--- Link mapping ( link : stockTransDetail )
		if( hasLinkToStockDepot(stockTransDetail) ) {
			StockDepotEntity stockDepot3 = new StockDepotEntity();
			stockDepot3.setId( stockTransDetail.getDepotId() );
			stockTransDetailEntity.setStockDepot( stockDepot3 );
		} else {
			stockTransDetailEntity.setStockDepot( null );
		}

		//--- Link mapping ( link : stockTransDetail )
		if( hasLinkToGlobalPrivateCode(stockTransDetail) ) {
			GlobalPrivateCodeEntity globalPrivateCode4 = new GlobalPrivateCodeEntity();
			globalPrivateCode4.setId( stockTransDetail.getPrivateCodeId() );
			stockTransDetailEntity.setGlobalPrivateCode( globalPrivateCode4 );
		} else {
			stockTransDetailEntity.setGlobalPrivateCode( null );
		}

		//--- Link mapping ( link : stockTransDetail )
		if( hasLinkToSaleSeller(stockTransDetail) ) {
			SaleSellerEntity saleSeller5 = new SaleSellerEntity();
			saleSeller5.setId( stockTransDetail.getSellerId() );
			stockTransDetailEntity.setSaleSeller( saleSeller5 );
		} else {
			stockTransDetailEntity.setSaleSeller( null );
		}

		//--- Link mapping ( link : stockTransDetail )
		if( hasLinkToStock(stockTransDetail) ) {
			StockEntity stock6 = new StockEntity();
			stock6.setId( stockTransDetail.getStockId() );
			stockTransDetailEntity.setStock( stock6 );
		} else {
			stockTransDetailEntity.setStock( null );
		}

		//--- Link mapping ( link : stockTransDetail )
		if( hasLinkToGlobalTransPoint(stockTransDetail) ) {
			GlobalTransPointEntity globalTransPoint7 = new GlobalTransPointEntity();
			globalTransPoint7.setId( stockTransDetail.getTransPointId() );
			stockTransDetailEntity.setGlobalTransPoint( globalTransPoint7 );
		} else {
			stockTransDetailEntity.setGlobalTransPoint( null );
		}

		//--- Link mapping ( link : stockTransDetail )
		if( hasLinkToContact(stockTransDetail) ) {
			ContactEntity contact8 = new ContactEntity();
			contact8.setId( stockTransDetail.getContactId() );
			stockTransDetailEntity.setContact( contact8 );
		} else {
			stockTransDetailEntity.setContact( null );
		}

	}
	
	/**
	 * Verify that StockTrans id is valid.
	 * @param StockTrans StockTrans
	 * @return boolean
	 */
	private boolean hasLinkToStockTrans(StockTransDetail stockTransDetail) {
		if(stockTransDetail.getTransId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that StockTransSource id is valid.
	 * @param StockTransSource StockTransSource
	 * @return boolean
	 */
	private boolean hasLinkToStockTransSource(StockTransDetail stockTransDetail) {
		if(stockTransDetail.getTransSourceId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that StockDepot id is valid.
	 * @param StockDepot StockDepot
	 * @return boolean
	 */
	private boolean hasLinkToStockDepot(StockTransDetail stockTransDetail) {
		if(stockTransDetail.getDepotId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that GlobalPrivateCode id is valid.
	 * @param GlobalPrivateCode GlobalPrivateCode
	 * @return boolean
	 */
	private boolean hasLinkToGlobalPrivateCode(StockTransDetail stockTransDetail) {
		if(stockTransDetail.getPrivateCodeId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that SaleSeller id is valid.
	 * @param SaleSeller SaleSeller
	 * @return boolean
	 */
	private boolean hasLinkToSaleSeller(StockTransDetail stockTransDetail) {
		if(stockTransDetail.getSellerId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that Stock id is valid.
	 * @param Stock Stock
	 * @return boolean
	 */
	private boolean hasLinkToStock(StockTransDetail stockTransDetail) {
		if(stockTransDetail.getStockId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that GlobalTransPoint id is valid.
	 * @param GlobalTransPoint GlobalTransPoint
	 * @return boolean
	 */
	private boolean hasLinkToGlobalTransPoint(StockTransDetail stockTransDetail) {
		if(stockTransDetail.getTransPointId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that Contact id is valid.
	 * @param Contact Contact
	 * @return boolean
	 */
	private boolean hasLinkToContact(StockTransDetail stockTransDetail) {
		if(stockTransDetail.getContactId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}