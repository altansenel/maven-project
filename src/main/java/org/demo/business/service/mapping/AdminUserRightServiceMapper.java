/*
 * Created on 24 Þub 2016 ( Time 16:27:49 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.demo.bean.AdminUserRight;
import org.demo.bean.jpa.AdminUserRightEntity;
import org.demo.bean.jpa.AdminUserRoleEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class AdminUserRightServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public AdminUserRightServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'AdminUserRightEntity' to 'AdminUserRight'
	 * @param adminUserRightEntity
	 */
	public AdminUserRight mapAdminUserRightEntityToAdminUserRight(AdminUserRightEntity adminUserRightEntity) {
		if(adminUserRightEntity == null) {
			return null;
		}

		//--- Generic mapping 
		AdminUserRight adminUserRight = map(adminUserRightEntity, AdminUserRight.class);

		//--- Link mapping ( link to AdminUserRole )
		if(adminUserRightEntity.getAdminUserRole() != null) {
			adminUserRight.setUserRoleId(adminUserRightEntity.getAdminUserRole().getId());
		}
		return adminUserRight;
	}
	
	/**
	 * Mapping from 'AdminUserRight' to 'AdminUserRightEntity'
	 * @param adminUserRight
	 * @param adminUserRightEntity
	 */
	public void mapAdminUserRightToAdminUserRightEntity(AdminUserRight adminUserRight, AdminUserRightEntity adminUserRightEntity) {
		if(adminUserRight == null) {
			return;
		}

		//--- Generic mapping 
		map(adminUserRight, adminUserRightEntity);

		//--- Link mapping ( link : adminUserRight )
		if( hasLinkToAdminUserRole(adminUserRight) ) {
			AdminUserRoleEntity adminUserRole1 = new AdminUserRoleEntity();
			adminUserRole1.setId( adminUserRight.getUserRoleId() );
			adminUserRightEntity.setAdminUserRole( adminUserRole1 );
		} else {
			adminUserRightEntity.setAdminUserRole( null );
		}

	}
	
	/**
	 * Verify that AdminUserRole id is valid.
	 * @param AdminUserRole AdminUserRole
	 * @return boolean
	 */
	private boolean hasLinkToAdminUserRole(AdminUserRight adminUserRight) {
		if(adminUserRight.getUserRoleId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}