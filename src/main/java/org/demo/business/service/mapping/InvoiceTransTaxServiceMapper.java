/*
 * Created on 24 Þub 2016 ( Time 16:27:51 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.demo.bean.InvoiceTransTax;
import org.demo.bean.jpa.InvoiceTransTaxEntity;
import org.demo.bean.jpa.InvoiceTransEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class InvoiceTransTaxServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public InvoiceTransTaxServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'InvoiceTransTaxEntity' to 'InvoiceTransTax'
	 * @param invoiceTransTaxEntity
	 */
	public InvoiceTransTax mapInvoiceTransTaxEntityToInvoiceTransTax(InvoiceTransTaxEntity invoiceTransTaxEntity) {
		if(invoiceTransTaxEntity == null) {
			return null;
		}

		//--- Generic mapping 
		InvoiceTransTax invoiceTransTax = map(invoiceTransTaxEntity, InvoiceTransTax.class);

		//--- Link mapping ( link to InvoiceTrans )
		if(invoiceTransTaxEntity.getInvoiceTrans() != null) {
			invoiceTransTax.setTransId(invoiceTransTaxEntity.getInvoiceTrans().getId());
		}
		return invoiceTransTax;
	}
	
	/**
	 * Mapping from 'InvoiceTransTax' to 'InvoiceTransTaxEntity'
	 * @param invoiceTransTax
	 * @param invoiceTransTaxEntity
	 */
	public void mapInvoiceTransTaxToInvoiceTransTaxEntity(InvoiceTransTax invoiceTransTax, InvoiceTransTaxEntity invoiceTransTaxEntity) {
		if(invoiceTransTax == null) {
			return;
		}

		//--- Generic mapping 
		map(invoiceTransTax, invoiceTransTaxEntity);

		//--- Link mapping ( link : invoiceTransTax )
		if( hasLinkToInvoiceTrans(invoiceTransTax) ) {
			InvoiceTransEntity invoiceTrans1 = new InvoiceTransEntity();
			invoiceTrans1.setId( invoiceTransTax.getTransId() );
			invoiceTransTaxEntity.setInvoiceTrans( invoiceTrans1 );
		} else {
			invoiceTransTaxEntity.setInvoiceTrans( null );
		}

	}
	
	/**
	 * Verify that InvoiceTrans id is valid.
	 * @param InvoiceTrans InvoiceTrans
	 * @return boolean
	 */
	private boolean hasLinkToInvoiceTrans(InvoiceTransTax invoiceTransTax) {
		if(invoiceTransTax.getTransId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}