/*
 * Created on 24 ï¿½ub 2016 ( Time 16:27:52 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.mapping;

import org.demo.bean.StockTrans;
import org.demo.bean.jpa.ContactEntity;
import org.demo.bean.jpa.GlobalPrivateCodeEntity;
import org.demo.bean.jpa.GlobalTransPointEntity;
import org.demo.bean.jpa.SaleSellerEntity;
import org.demo.bean.jpa.StockDepotEntity;
import org.demo.bean.jpa.StockTransEntity;
import org.demo.bean.jpa.StockTransSourceEntity;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class StockTransServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public StockTransServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'StockTransEntity' to 'StockTrans'
	 * @param stockTransEntity
	 */
	public StockTrans mapStockTransEntityToStockTrans(StockTransEntity stockTransEntity) {
		if(stockTransEntity == null) {
			return null;
		}

		//--- Generic mapping 
		StockTrans stockTrans = map(stockTransEntity, StockTrans.class);

		//--- Link mapping ( link to GlobalPrivateCode )
		if(stockTransEntity.getGlobalPrivateCode() != null) {
			stockTrans.setPrivateCodeId(stockTransEntity.getGlobalPrivateCode().getId());
		}
		//--- Link mapping ( link to StockDepot )
		if(stockTransEntity.getStockDepot2() != null) {
			stockTrans.setRefDepotId(stockTransEntity.getStockDepot2().getId());
		}
		//--- Link mapping ( link to StockTransSource )
		if(stockTransEntity.getStockTransSource() != null) {
			stockTrans.setTransSourceId(stockTransEntity.getStockTransSource().getId());
		}
		//--- Link mapping ( link to GlobalTransPoint )
		if(stockTransEntity.getGlobalTransPoint() != null) {
			stockTrans.setTransPointId(stockTransEntity.getGlobalTransPoint().getId());
		}
		//--- Link mapping ( link to Contact )
		if(stockTransEntity.getContact() != null) {
			stockTrans.setContactId(stockTransEntity.getContact().getId());
		}
		//--- Link mapping ( link to SaleSeller )
		if(stockTransEntity.getSaleSeller() != null) {
			stockTrans.setSellerId(stockTransEntity.getSaleSeller().getId());
		}
		//--- Link mapping ( link to StockDepot )
		if(stockTransEntity.getStockDepot() != null) {
			stockTrans.setDepotId(stockTransEntity.getStockDepot().getId());
		}
		return stockTrans;
	}
	
	/**
	 * Mapping from 'StockTrans' to 'StockTransEntity'
	 * @param stockTrans
	 * @param stockTransEntity
	 */
	public void mapStockTransToStockTransEntity(StockTrans stockTrans, StockTransEntity stockTransEntity) {
		if(stockTrans == null) {
			return;
		}

		//--- Generic mapping 
		map(stockTrans, stockTransEntity);

		//--- Link mapping ( link : stockTrans )
		if( hasLinkToGlobalPrivateCode(stockTrans) ) {
			GlobalPrivateCodeEntity globalPrivateCode1 = new GlobalPrivateCodeEntity();
			globalPrivateCode1.setId( stockTrans.getPrivateCodeId() );
			stockTransEntity.setGlobalPrivateCode( globalPrivateCode1 );
		} else {
			stockTransEntity.setGlobalPrivateCode( null );
		}

		//--- Link mapping ( link : stockTrans )
		if( hasLinkToStockDepot(stockTrans) ) {
			StockDepotEntity stockDepot2 = new StockDepotEntity();
			stockDepot2.setId( stockTrans.getRefDepotId() );
			stockTransEntity.setStockDepot2( stockDepot2 );
		} else {
			stockTransEntity.setStockDepot2( null );
		}

		//--- Link mapping ( link : stockTrans )
		if( hasLinkToStockTransSource(stockTrans) ) {
			StockTransSourceEntity stockTransSource3 = new StockTransSourceEntity();
			stockTransSource3.setId( stockTrans.getTransSourceId() );
			stockTransEntity.setStockTransSource( stockTransSource3 );
		} else {
			stockTransEntity.setStockTransSource( null );
		}

		//--- Link mapping ( link : stockTrans )
		if( hasLinkToGlobalTransPoint(stockTrans) ) {
			GlobalTransPointEntity globalTransPoint4 = new GlobalTransPointEntity();
			globalTransPoint4.setId( stockTrans.getTransPointId() );
			stockTransEntity.setGlobalTransPoint( globalTransPoint4 );
		} else {
			stockTransEntity.setGlobalTransPoint( null );
		}

		//--- Link mapping ( link : stockTrans )
		if( hasLinkToContact(stockTrans) ) {
			ContactEntity contact5 = new ContactEntity();
			contact5.setId( stockTrans.getContactId() );
			stockTransEntity.setContact( contact5 );
		} else {
			stockTransEntity.setContact( null );
		}

		//--- Link mapping ( link : stockTrans )
		if( hasLinkToSaleSeller(stockTrans) ) {
			SaleSellerEntity saleSeller6 = new SaleSellerEntity();
			saleSeller6.setId( stockTrans.getSellerId() );
			stockTransEntity.setSaleSeller( saleSeller6 );
		} else {
			stockTransEntity.setSaleSeller( null );
		}

		//--- Link mapping ( link : stockTrans )
		if( hasLinkToStockDepot(stockTrans) ) {
			StockDepotEntity stockDepot7 = new StockDepotEntity();
			stockDepot7.setId( stockTrans.getDepotId() );
			stockTransEntity.setStockDepot( stockDepot7 );
		} else {
			stockTransEntity.setStockDepot( null );
		}

	}
	
	/**
	 * Verify that GlobalPrivateCode id is valid.
	 * @param GlobalPrivateCode GlobalPrivateCode
	 * @return boolean
	 */
	private boolean hasLinkToGlobalPrivateCode(StockTrans stockTrans) {
		if(stockTrans.getPrivateCodeId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that StockTransSource id is valid.
	 * @param StockTransSource StockTransSource
	 * @return boolean
	 */
	private boolean hasLinkToStockTransSource(StockTrans stockTrans) {
		if(stockTrans.getTransSourceId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that GlobalTransPoint id is valid.
	 * @param GlobalTransPoint GlobalTransPoint
	 * @return boolean
	 */
	private boolean hasLinkToGlobalTransPoint(StockTrans stockTrans) {
		if(stockTrans.getTransPointId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that Contact id is valid.
	 * @param Contact Contact
	 * @return boolean
	 */
	private boolean hasLinkToContact(StockTrans stockTrans) {
		if(stockTrans.getContactId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that SaleSeller id is valid.
	 * @param SaleSeller SaleSeller
	 * @return boolean
	 */
	private boolean hasLinkToSaleSeller(StockTrans stockTrans) {
		if(stockTrans.getSellerId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that StockDepot id is valid.
	 * @param StockDepot StockDepot
	 * @return boolean
	 */
	private boolean hasLinkToStockDepot(StockTrans stockTrans) {
		if(stockTrans.getDepotId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}