/*
 * Created on 24 Þub 2016 ( Time 16:27:52 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import org.demo.bean.StockCostingInventory;
import org.demo.bean.jpa.StockCostingInventoryEntity;
import org.demo.bean.jpa.StockEntity;
import org.demo.bean.jpa.StockCostingEntity;
import org.demo.bean.jpa.StockDepotEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class StockCostingInventoryServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public StockCostingInventoryServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'StockCostingInventoryEntity' to 'StockCostingInventory'
	 * @param stockCostingInventoryEntity
	 */
	public StockCostingInventory mapStockCostingInventoryEntityToStockCostingInventory(StockCostingInventoryEntity stockCostingInventoryEntity) {
		if(stockCostingInventoryEntity == null) {
			return null;
		}

		//--- Generic mapping 
		StockCostingInventory stockCostingInventory = map(stockCostingInventoryEntity, StockCostingInventory.class);

		//--- Link mapping ( link to Stock )
		if(stockCostingInventoryEntity.getStock() != null) {
			stockCostingInventory.setStockId(stockCostingInventoryEntity.getStock().getId());
		}
		//--- Link mapping ( link to StockCosting )
		if(stockCostingInventoryEntity.getStockCosting() != null) {
			stockCostingInventory.setCostingId(stockCostingInventoryEntity.getStockCosting().getId());
		}
		//--- Link mapping ( link to StockDepot )
		if(stockCostingInventoryEntity.getStockDepot() != null) {
			stockCostingInventory.setDepotId(stockCostingInventoryEntity.getStockDepot().getId());
		}
		return stockCostingInventory;
	}
	
	/**
	 * Mapping from 'StockCostingInventory' to 'StockCostingInventoryEntity'
	 * @param stockCostingInventory
	 * @param stockCostingInventoryEntity
	 */
	public void mapStockCostingInventoryToStockCostingInventoryEntity(StockCostingInventory stockCostingInventory, StockCostingInventoryEntity stockCostingInventoryEntity) {
		if(stockCostingInventory == null) {
			return;
		}

		//--- Generic mapping 
		map(stockCostingInventory, stockCostingInventoryEntity);

		//--- Link mapping ( link : stockCostingInventory )
		if( hasLinkToStock(stockCostingInventory) ) {
			StockEntity stock1 = new StockEntity();
			stock1.setId( stockCostingInventory.getStockId() );
			stockCostingInventoryEntity.setStock( stock1 );
		} else {
			stockCostingInventoryEntity.setStock( null );
		}

		//--- Link mapping ( link : stockCostingInventory )
		if( hasLinkToStockCosting(stockCostingInventory) ) {
			StockCostingEntity stockCosting2 = new StockCostingEntity();
			stockCosting2.setId( stockCostingInventory.getCostingId() );
			stockCostingInventoryEntity.setStockCosting( stockCosting2 );
		} else {
			stockCostingInventoryEntity.setStockCosting( null );
		}

		//--- Link mapping ( link : stockCostingInventory )
		if( hasLinkToStockDepot(stockCostingInventory) ) {
			StockDepotEntity stockDepot3 = new StockDepotEntity();
			stockDepot3.setId( stockCostingInventory.getDepotId() );
			stockCostingInventoryEntity.setStockDepot( stockDepot3 );
		} else {
			stockCostingInventoryEntity.setStockDepot( null );
		}

	}
	
	/**
	 * Verify that Stock id is valid.
	 * @param Stock Stock
	 * @return boolean
	 */
	private boolean hasLinkToStock(StockCostingInventory stockCostingInventory) {
		if(stockCostingInventory.getStockId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that StockCosting id is valid.
	 * @param StockCosting StockCosting
	 * @return boolean
	 */
	private boolean hasLinkToStockCosting(StockCostingInventory stockCostingInventory) {
		if(stockCostingInventory.getCostingId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * Verify that StockDepot id is valid.
	 * @param StockDepot StockDepot
	 * @return boolean
	 */
	private boolean hasLinkToStockDepot(StockCostingInventory stockCostingInventory) {
		if(stockCostingInventory.getDepotId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}