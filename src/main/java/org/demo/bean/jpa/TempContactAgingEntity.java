/*
 * Created on 24 Þub 2016 ( Time 16:18:05 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.demo.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "temp_contact_aging"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="temp_contact_aging", catalog="seyhan" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="TempContactAgingEntity.countAll", query="SELECT COUNT(x) FROM TempContactAgingEntity x" )
} )
public class TempContactAgingEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="username", nullable=false, length=20)
    private String     username     ;

    @Column(name="contact_name", length=100)
    private String     contactName  ;

    @Column(name="receipt_no")
    private Integer    receiptNo    ;

    @Column(name="_right", nullable=false, length=50)
    private String     right        ;

    @Temporal(TemporalType.DATE)
    @Column(name="trans_date", nullable=false)
    private Date       transDate    ;

    @Column(name="trans_no", length=20)
    private String     transNo      ;

    @Column(name="amount")
    private Double     amount       ;

    @Column(name="paid")
    private Double     paid         ;

    @Column(name="remain")
    private Double     remain       ;

    @Column(name="exc_code", length=3)
    private String     excCode      ;

    @Column(name="description", length=100)
    private String     description  ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public TempContactAgingEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : username ( VARCHAR ) 
    public void setUsername( String username ) {
        this.username = username;
    }
    public String getUsername() {
        return this.username;
    }

    //--- DATABASE MAPPING : contact_name ( VARCHAR ) 
    public void setContactName( String contactName ) {
        this.contactName = contactName;
    }
    public String getContactName() {
        return this.contactName;
    }

    //--- DATABASE MAPPING : receipt_no ( INT ) 
    public void setReceiptNo( Integer receiptNo ) {
        this.receiptNo = receiptNo;
    }
    public Integer getReceiptNo() {
        return this.receiptNo;
    }

    //--- DATABASE MAPPING : _right ( VARCHAR ) 
    public void setRight( String right ) {
        this.right = right;
    }
    public String getRight() {
        return this.right;
    }

    //--- DATABASE MAPPING : trans_date ( DATE ) 
    public void setTransDate( Date transDate ) {
        this.transDate = transDate;
    }
    public Date getTransDate() {
        return this.transDate;
    }

    //--- DATABASE MAPPING : trans_no ( VARCHAR ) 
    public void setTransNo( String transNo ) {
        this.transNo = transNo;
    }
    public String getTransNo() {
        return this.transNo;
    }

    //--- DATABASE MAPPING : amount ( DOUBLE ) 
    public void setAmount( Double amount ) {
        this.amount = amount;
    }
    public Double getAmount() {
        return this.amount;
    }

    //--- DATABASE MAPPING : paid ( DOUBLE ) 
    public void setPaid( Double paid ) {
        this.paid = paid;
    }
    public Double getPaid() {
        return this.paid;
    }

    //--- DATABASE MAPPING : remain ( DOUBLE ) 
    public void setRemain( Double remain ) {
        this.remain = remain;
    }
    public Double getRemain() {
        return this.remain;
    }

    //--- DATABASE MAPPING : exc_code ( VARCHAR ) 
    public void setExcCode( String excCode ) {
        this.excCode = excCode;
    }
    public String getExcCode() {
        return this.excCode;
    }

    //--- DATABASE MAPPING : description ( VARCHAR ) 
    public void setDescription( String description ) {
        this.description = description;
    }
    public String getDescription() {
        return this.description;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(username);
        sb.append("|");
        sb.append(contactName);
        sb.append("|");
        sb.append(receiptNo);
        sb.append("|");
        sb.append(right);
        sb.append("|");
        sb.append(transDate);
        sb.append("|");
        sb.append(transNo);
        sb.append("|");
        sb.append(amount);
        sb.append("|");
        sb.append(paid);
        sb.append("|");
        sb.append(remain);
        sb.append("|");
        sb.append(excCode);
        sb.append("|");
        sb.append(description);
        return sb.toString(); 
    } 

}
