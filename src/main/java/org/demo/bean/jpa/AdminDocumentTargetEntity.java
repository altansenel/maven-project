/*
 * Created on 24 Þub 2016 ( Time 16:18:04 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.demo.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;


import javax.persistence.*;

/**
 * Persistent class for entity stored in table "admin_document_target"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="admin_document_target", catalog="seyhan" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="AdminDocumentTargetEntity.countAll", query="SELECT COUNT(x) FROM AdminDocumentTargetEntity x" )
} )
public class AdminDocumentTargetEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="name", nullable=false, length=30)
    private String     name         ;

    @Column(name="is_local")
    private Boolean    isLocal      ;

    @Column(name="target_type", length=10)
    private String     targetType   ;

    @Column(name="view_type", length=9)
    private String     viewType     ;

    @Column(name="path", length=150)
    private String     path         ;

    @Column(name="is_compressed")
    private Boolean    isCompressed ;

    @Column(name="description", length=30)
    private String     description  ;

    @Column(name="is_active")
    private Boolean    isActive     ;

    @Column(name="version")
    private Integer    version      ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public AdminDocumentTargetEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : name ( VARCHAR ) 
    public void setName( String name ) {
        this.name = name;
    }
    public String getName() {
        return this.name;
    }

    //--- DATABASE MAPPING : is_local ( BIT ) 
    public void setIsLocal( Boolean isLocal ) {
        this.isLocal = isLocal;
    }
    public Boolean getIsLocal() {
        return this.isLocal;
    }

    //--- DATABASE MAPPING : target_type ( VARCHAR ) 
    public void setTargetType( String targetType ) {
        this.targetType = targetType;
    }
    public String getTargetType() {
        return this.targetType;
    }

    //--- DATABASE MAPPING : view_type ( VARCHAR ) 
    public void setViewType( String viewType ) {
        this.viewType = viewType;
    }
    public String getViewType() {
        return this.viewType;
    }

    //--- DATABASE MAPPING : path ( VARCHAR ) 
    public void setPath( String path ) {
        this.path = path;
    }
    public String getPath() {
        return this.path;
    }

    //--- DATABASE MAPPING : is_compressed ( BIT ) 
    public void setIsCompressed( Boolean isCompressed ) {
        this.isCompressed = isCompressed;
    }
    public Boolean getIsCompressed() {
        return this.isCompressed;
    }

    //--- DATABASE MAPPING : description ( VARCHAR ) 
    public void setDescription( String description ) {
        this.description = description;
    }
    public String getDescription() {
        return this.description;
    }

    //--- DATABASE MAPPING : is_active ( BIT ) 
    public void setIsActive( Boolean isActive ) {
        this.isActive = isActive;
    }
    public Boolean getIsActive() {
        return this.isActive;
    }

    //--- DATABASE MAPPING : version ( INT ) 
    public void setVersion( Integer version ) {
        this.version = version;
    }
    public Integer getVersion() {
        return this.version;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(name);
        sb.append("|");
        sb.append(isLocal);
        sb.append("|");
        sb.append(targetType);
        sb.append("|");
        sb.append(viewType);
        sb.append("|");
        sb.append(path);
        sb.append("|");
        sb.append(isCompressed);
        sb.append("|");
        sb.append(description);
        sb.append("|");
        sb.append(isActive);
        sb.append("|");
        sb.append(version);
        return sb.toString(); 
    } 

}
