/*
 * Created on 24 Þub 2016 ( Time 16:18:04 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.demo.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;


import javax.persistence.*;

/**
 * Persistent class for entity stored in table "admin_user_right"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="admin_user_right", catalog="seyhan" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="AdminUserRightEntity.countAll", query="SELECT COUNT(x) FROM AdminUserRightEntity x" )
} )
public class AdminUserRightEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="name", nullable=false, length=50)
    private String     name         ;

    @Column(name="right_level", nullable=false, length=7)
    private String     rightLevel   ;

    @Column(name="is_crud")
    private Boolean    isCrud       ;

	// "userRoleId" (column "user_role_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="user_role_id", referencedColumnName="id")
    private AdminUserRoleEntity adminUserRole;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public AdminUserRightEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : name ( VARCHAR ) 
    public void setName( String name ) {
        this.name = name;
    }
    public String getName() {
        return this.name;
    }

    //--- DATABASE MAPPING : right_level ( VARCHAR ) 
    public void setRightLevel( String rightLevel ) {
        this.rightLevel = rightLevel;
    }
    public String getRightLevel() {
        return this.rightLevel;
    }

    //--- DATABASE MAPPING : is_crud ( BIT ) 
    public void setIsCrud( Boolean isCrud ) {
        this.isCrud = isCrud;
    }
    public Boolean getIsCrud() {
        return this.isCrud;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setAdminUserRole( AdminUserRoleEntity adminUserRole ) {
        this.adminUserRole = adminUserRole;
    }
    public AdminUserRoleEntity getAdminUserRole() {
        return this.adminUserRole;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(name);
        sb.append("|");
        sb.append(rightLevel);
        sb.append("|");
        sb.append(isCrud);
        return sb.toString(); 
    } 

}
