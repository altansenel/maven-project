/*
 * Created on 24 Þub 2016 ( Time 16:18:04 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.demo.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;


import javax.persistence.*;

/**
 * Persistent class for entity stored in table "admin_document_field"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="admin_document_field", catalog="seyhan" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="AdminDocumentFieldEntity.countAll", query="SELECT COUNT(x) FROM AdminDocumentFieldEntity x" )
} )
public class AdminDocumentFieldEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="module", length=10)
    private String     module       ;

    @Column(name="band", length=12)
    private String     band         ;

    @Column(name="_type", length=20)
    private String     type         ;

    @Column(name="name", length=100)
    private String     name         ;

    @Column(name="nick_name", length=100)
    private String     nickName     ;

    @Column(name="hidden_field", length=100)
    private String     hiddenField  ;

    @Column(name="_label", length=70)
    private String     label        ;

    @Column(name="original_label", length=70)
    private String     originalLabel ;

    @Column(name="label_width")
    private Integer    labelWidth   ;

    @Column(name="label_align", length=5)
    private String     labelAlign   ;

    @Column(name="_width")
    private Integer    width        ;

    @Column(name="_row")
    private Integer    row          ;

    @Column(name="_column")
    private Integer    column       ;

    @Column(name="_format", length=30)
    private String     format       ;

    @Column(name="prefix", length=5)
    private String     prefix       ;

    @Column(name="suffix", length=5)
    private String     suffix       ;

    @Column(name="_value", length=70)
    private String     value        ;

    @Column(name="msg_prefix", length=30)
    private String     msgPrefix    ;

    @Column(name="defauld", length=50)
    private String     defauld      ;

    @Column(name="is_db_field")
    private Boolean    isDbField    ;

    @Column(name="table_type", length=10)
    private String     tableType    ;

	// "reportTitleDocId" (column "report_title_doc_id") is not defined by itself because used as FK in a link 
	// "pageTitleDocId" (column "page_title_doc_id") is not defined by itself because used as FK in a link 
	// "detailDocId" (column "detail_doc_id") is not defined by itself because used as FK in a link 
	// "pageFooterDocId" (column "page_footer_doc_id") is not defined by itself because used as FK in a link 
	// "reportFooterDocId" (column "report_footer_doc_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="page_footer_doc_id", referencedColumnName="id")
    private AdminDocumentEntity adminDocument4;

    @ManyToOne
    @JoinColumn(name="report_title_doc_id", referencedColumnName="id")
    private AdminDocumentEntity adminDocument;

    @ManyToOne
    @JoinColumn(name="detail_doc_id", referencedColumnName="id")
    private AdminDocumentEntity adminDocument3;

    @ManyToOne
    @JoinColumn(name="report_footer_doc_id", referencedColumnName="id")
    private AdminDocumentEntity adminDocument5;

    @ManyToOne
    @JoinColumn(name="page_title_doc_id", referencedColumnName="id")
    private AdminDocumentEntity adminDocument2;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public AdminDocumentFieldEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : module ( VARCHAR ) 
    public void setModule( String module ) {
        this.module = module;
    }
    public String getModule() {
        return this.module;
    }

    //--- DATABASE MAPPING : band ( VARCHAR ) 
    public void setBand( String band ) {
        this.band = band;
    }
    public String getBand() {
        return this.band;
    }

    //--- DATABASE MAPPING : _type ( VARCHAR ) 
    public void setType( String type ) {
        this.type = type;
    }
    public String getType() {
        return this.type;
    }

    //--- DATABASE MAPPING : name ( VARCHAR ) 
    public void setName( String name ) {
        this.name = name;
    }
    public String getName() {
        return this.name;
    }

    //--- DATABASE MAPPING : nick_name ( VARCHAR ) 
    public void setNickName( String nickName ) {
        this.nickName = nickName;
    }
    public String getNickName() {
        return this.nickName;
    }

    //--- DATABASE MAPPING : hidden_field ( VARCHAR ) 
    public void setHiddenField( String hiddenField ) {
        this.hiddenField = hiddenField;
    }
    public String getHiddenField() {
        return this.hiddenField;
    }

    //--- DATABASE MAPPING : _label ( VARCHAR ) 
    public void setLabel( String label ) {
        this.label = label;
    }
    public String getLabel() {
        return this.label;
    }

    //--- DATABASE MAPPING : original_label ( VARCHAR ) 
    public void setOriginalLabel( String originalLabel ) {
        this.originalLabel = originalLabel;
    }
    public String getOriginalLabel() {
        return this.originalLabel;
    }

    //--- DATABASE MAPPING : label_width ( INT ) 
    public void setLabelWidth( Integer labelWidth ) {
        this.labelWidth = labelWidth;
    }
    public Integer getLabelWidth() {
        return this.labelWidth;
    }

    //--- DATABASE MAPPING : label_align ( VARCHAR ) 
    public void setLabelAlign( String labelAlign ) {
        this.labelAlign = labelAlign;
    }
    public String getLabelAlign() {
        return this.labelAlign;
    }

    //--- DATABASE MAPPING : _width ( INT ) 
    public void setWidth( Integer width ) {
        this.width = width;
    }
    public Integer getWidth() {
        return this.width;
    }

    //--- DATABASE MAPPING : _row ( INT ) 
    public void setRow( Integer row ) {
        this.row = row;
    }
    public Integer getRow() {
        return this.row;
    }

    //--- DATABASE MAPPING : _column ( INT ) 
    public void setColumn( Integer column ) {
        this.column = column;
    }
    public Integer getColumn() {
        return this.column;
    }

    //--- DATABASE MAPPING : _format ( VARCHAR ) 
    public void setFormat( String format ) {
        this.format = format;
    }
    public String getFormat() {
        return this.format;
    }

    //--- DATABASE MAPPING : prefix ( VARCHAR ) 
    public void setPrefix( String prefix ) {
        this.prefix = prefix;
    }
    public String getPrefix() {
        return this.prefix;
    }

    //--- DATABASE MAPPING : suffix ( VARCHAR ) 
    public void setSuffix( String suffix ) {
        this.suffix = suffix;
    }
    public String getSuffix() {
        return this.suffix;
    }

    //--- DATABASE MAPPING : _value ( VARCHAR ) 
    public void setValue( String value ) {
        this.value = value;
    }
    public String getValue() {
        return this.value;
    }

    //--- DATABASE MAPPING : msg_prefix ( VARCHAR ) 
    public void setMsgPrefix( String msgPrefix ) {
        this.msgPrefix = msgPrefix;
    }
    public String getMsgPrefix() {
        return this.msgPrefix;
    }

    //--- DATABASE MAPPING : defauld ( VARCHAR ) 
    public void setDefauld( String defauld ) {
        this.defauld = defauld;
    }
    public String getDefauld() {
        return this.defauld;
    }

    //--- DATABASE MAPPING : is_db_field ( BIT ) 
    public void setIsDbField( Boolean isDbField ) {
        this.isDbField = isDbField;
    }
    public Boolean getIsDbField() {
        return this.isDbField;
    }

    //--- DATABASE MAPPING : table_type ( VARCHAR ) 
    public void setTableType( String tableType ) {
        this.tableType = tableType;
    }
    public String getTableType() {
        return this.tableType;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setAdminDocument4( AdminDocumentEntity adminDocument4 ) {
        this.adminDocument4 = adminDocument4;
    }
    public AdminDocumentEntity getAdminDocument4() {
        return this.adminDocument4;
    }

    public void setAdminDocument( AdminDocumentEntity adminDocument ) {
        this.adminDocument = adminDocument;
    }
    public AdminDocumentEntity getAdminDocument() {
        return this.adminDocument;
    }

    public void setAdminDocument3( AdminDocumentEntity adminDocument3 ) {
        this.adminDocument3 = adminDocument3;
    }
    public AdminDocumentEntity getAdminDocument3() {
        return this.adminDocument3;
    }

    public void setAdminDocument5( AdminDocumentEntity adminDocument5 ) {
        this.adminDocument5 = adminDocument5;
    }
    public AdminDocumentEntity getAdminDocument5() {
        return this.adminDocument5;
    }

    public void setAdminDocument2( AdminDocumentEntity adminDocument2 ) {
        this.adminDocument2 = adminDocument2;
    }
    public AdminDocumentEntity getAdminDocument2() {
        return this.adminDocument2;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(module);
        sb.append("|");
        sb.append(band);
        sb.append("|");
        sb.append(type);
        sb.append("|");
        sb.append(name);
        sb.append("|");
        sb.append(nickName);
        sb.append("|");
        sb.append(hiddenField);
        sb.append("|");
        sb.append(label);
        sb.append("|");
        sb.append(originalLabel);
        sb.append("|");
        sb.append(labelWidth);
        sb.append("|");
        sb.append(labelAlign);
        sb.append("|");
        sb.append(width);
        sb.append("|");
        sb.append(row);
        sb.append("|");
        sb.append(column);
        sb.append("|");
        sb.append(format);
        sb.append("|");
        sb.append(prefix);
        sb.append("|");
        sb.append(suffix);
        sb.append("|");
        sb.append(value);
        sb.append("|");
        sb.append(msgPrefix);
        sb.append("|");
        sb.append(defauld);
        sb.append("|");
        sb.append(isDbField);
        sb.append("|");
        sb.append(tableType);
        return sb.toString(); 
    } 

}
