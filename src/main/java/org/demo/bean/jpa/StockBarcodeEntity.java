/*
 * Created on 24 Þub 2016 ( Time 16:18:05 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.demo.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "stock_barcode"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="stock_barcode", catalog="seyhan" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="StockBarcodeEntity.countAll", query="SELECT COUNT(x) FROM StockBarcodeEntity x" )
} )
public class StockBarcodeEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="barcode", nullable=false, length=128)
    private String     barcode      ;

    @Column(name="prefix", length=30)
    private String     prefix       ;

    @Column(name="suffix", length=30)
    private String     suffix       ;

    @Column(name="unit_no")
    private Short      unitNo       ;

    @Column(name="is_primary")
    private Boolean    isPrimary    ;

    @Column(name="insert_by", length=20)
    private String     insertBy     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="insert_at")
    private Date       insertAt     ;

    @Column(name="update_by", length=20)
    private String     updateBy     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="update_at")
    private Date       updateAt     ;

    @Column(name="workspace", nullable=false)
    private Integer    workspace    ;

	// "stockId" (column "stock_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="stock_id", referencedColumnName="id")
    private StockEntity stock       ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public StockBarcodeEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : barcode ( VARCHAR ) 
    public void setBarcode( String barcode ) {
        this.barcode = barcode;
    }
    public String getBarcode() {
        return this.barcode;
    }

    //--- DATABASE MAPPING : prefix ( VARCHAR ) 
    public void setPrefix( String prefix ) {
        this.prefix = prefix;
    }
    public String getPrefix() {
        return this.prefix;
    }

    //--- DATABASE MAPPING : suffix ( VARCHAR ) 
    public void setSuffix( String suffix ) {
        this.suffix = suffix;
    }
    public String getSuffix() {
        return this.suffix;
    }

    //--- DATABASE MAPPING : unit_no ( SMALLINT ) 
    public void setUnitNo( Short unitNo ) {
        this.unitNo = unitNo;
    }
    public Short getUnitNo() {
        return this.unitNo;
    }

    //--- DATABASE MAPPING : is_primary ( BIT ) 
    public void setIsPrimary( Boolean isPrimary ) {
        this.isPrimary = isPrimary;
    }
    public Boolean getIsPrimary() {
        return this.isPrimary;
    }

    //--- DATABASE MAPPING : insert_by ( VARCHAR ) 
    public void setInsertBy( String insertBy ) {
        this.insertBy = insertBy;
    }
    public String getInsertBy() {
        return this.insertBy;
    }

    //--- DATABASE MAPPING : insert_at ( DATETIME ) 
    public void setInsertAt( Date insertAt ) {
        this.insertAt = insertAt;
    }
    public Date getInsertAt() {
        return this.insertAt;
    }

    //--- DATABASE MAPPING : update_by ( VARCHAR ) 
    public void setUpdateBy( String updateBy ) {
        this.updateBy = updateBy;
    }
    public String getUpdateBy() {
        return this.updateBy;
    }

    //--- DATABASE MAPPING : update_at ( DATETIME ) 
    public void setUpdateAt( Date updateAt ) {
        this.updateAt = updateAt;
    }
    public Date getUpdateAt() {
        return this.updateAt;
    }

    //--- DATABASE MAPPING : workspace ( INT ) 
    public void setWorkspace( Integer workspace ) {
        this.workspace = workspace;
    }
    public Integer getWorkspace() {
        return this.workspace;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setStock( StockEntity stock ) {
        this.stock = stock;
    }
    public StockEntity getStock() {
        return this.stock;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(barcode);
        sb.append("|");
        sb.append(prefix);
        sb.append("|");
        sb.append(suffix);
        sb.append("|");
        sb.append(unitNo);
        sb.append("|");
        sb.append(isPrimary);
        sb.append("|");
        sb.append(insertBy);
        sb.append("|");
        sb.append(insertAt);
        sb.append("|");
        sb.append(updateBy);
        sb.append("|");
        sb.append(updateAt);
        sb.append("|");
        sb.append(workspace);
        return sb.toString(); 
    } 

}
