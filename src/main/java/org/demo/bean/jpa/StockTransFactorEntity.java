/*
 * Created on 24 Þub 2016 ( Time 16:18:05 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.demo.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;


import javax.persistence.*;

/**
 * Persistent class for entity stored in table "stock_trans_factor"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="stock_trans_factor", catalog="seyhan" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="StockTransFactorEntity.countAll", query="SELECT COUNT(x) FROM StockTransFactorEntity x" )
} )
public class StockTransFactorEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="effect")
    private Double     effect       ;

    @Column(name="quantity")
    private Double     quantity     ;

    @Column(name="amount")
    private Double     amount       ;

	// "transId" (column "trans_id") is not defined by itself because used as FK in a link 
	// "factorId" (column "factor_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="factor_id", referencedColumnName="id")
    private StockCostFactorEntity stockCostFactor;

    @ManyToOne
    @JoinColumn(name="trans_id", referencedColumnName="id")
    private StockTransEntity stockTrans  ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public StockTransFactorEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : effect ( DOUBLE ) 
    public void setEffect( Double effect ) {
        this.effect = effect;
    }
    public Double getEffect() {
        return this.effect;
    }

    //--- DATABASE MAPPING : quantity ( DOUBLE ) 
    public void setQuantity( Double quantity ) {
        this.quantity = quantity;
    }
    public Double getQuantity() {
        return this.quantity;
    }

    //--- DATABASE MAPPING : amount ( DOUBLE ) 
    public void setAmount( Double amount ) {
        this.amount = amount;
    }
    public Double getAmount() {
        return this.amount;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setStockCostFactor( StockCostFactorEntity stockCostFactor ) {
        this.stockCostFactor = stockCostFactor;
    }
    public StockCostFactorEntity getStockCostFactor() {
        return this.stockCostFactor;
    }

    public void setStockTrans( StockTransEntity stockTrans ) {
        this.stockTrans = stockTrans;
    }
    public StockTransEntity getStockTrans() {
        return this.stockTrans;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(effect);
        sb.append("|");
        sb.append(quantity);
        sb.append("|");
        sb.append(amount);
        return sb.toString(); 
    } 

}
