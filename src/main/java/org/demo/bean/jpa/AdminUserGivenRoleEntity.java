/*
 * Created on 24 Þub 2016 ( Time 16:18:04 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.demo.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;


import javax.persistence.*;

/**
 * Persistent class for entity stored in table "admin_user_given_role"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="admin_user_given_role", catalog="seyhan" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="AdminUserGivenRoleEntity.countAll", query="SELECT COUNT(x) FROM AdminUserGivenRoleEntity x" )
} )
public class AdminUserGivenRoleEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
	// "userGroupId" (column "user_group_id") is not defined by itself because used as FK in a link 
	// "workspaceId" (column "workspace_id") is not defined by itself because used as FK in a link 
	// "userRoleId" (column "user_role_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="user_group_id", referencedColumnName="id")
    private AdminUserGroupEntity adminUserGroup;

    @ManyToOne
    @JoinColumn(name="user_role_id", referencedColumnName="id")
    private AdminUserRoleEntity adminUserRole;

    @ManyToOne
    @JoinColumn(name="workspace_id", referencedColumnName="id")
    private AdminWorkspaceEntity adminWorkspace;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public AdminUserGivenRoleEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setAdminUserGroup( AdminUserGroupEntity adminUserGroup ) {
        this.adminUserGroup = adminUserGroup;
    }
    public AdminUserGroupEntity getAdminUserGroup() {
        return this.adminUserGroup;
    }

    public void setAdminUserRole( AdminUserRoleEntity adminUserRole ) {
        this.adminUserRole = adminUserRole;
    }
    public AdminUserRoleEntity getAdminUserRole() {
        return this.adminUserRole;
    }

    public void setAdminWorkspace( AdminWorkspaceEntity adminWorkspace ) {
        this.adminWorkspace = adminWorkspace;
    }
    public AdminWorkspaceEntity getAdminWorkspace() {
        return this.adminWorkspace;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        return sb.toString(); 
    } 

}
