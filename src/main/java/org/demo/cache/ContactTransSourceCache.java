/*
 * Very basic JavaBean cache
 * Created on 24 Þub 2016 ( Date ISO 2016-02-24 - Time 15:13:26 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */

package org.demo.cache;

import java.util.Hashtable;
import java.util.Map;

import org.demo.bean.ContactTransSource ;

/**
 * Very basic cache for ContactTransSource instances (just for the Telosys Tools demo)
 * 
 * @author Telosys Tools Generator
 *
 */
public class ContactTransSourceCache
{
	private final static Map<String,ContactTransSource> cache = new Hashtable<String,ContactTransSource>() ;
	
	/**
	 * Build the cache key from the Primary Key field(s)
     * @param id 
	 * @return the key
	 */
	private final static String getKey( Integer id ) {
		return ""  + id  ;
	}

	/**
	 * Put the given ContactTransSource instance in the cache
	 * @param ContactTransSource instance to be stored
	 */
	public final static void putContactTransSource(ContactTransSource contactTransSource ) {
		String key = getKey( contactTransSource.getId() ) ;
		cache.put(key, contactTransSource );
	}
	
	/**
	 * Get the ContactTransSource instance for the given primary key
     * @param id 
	 * @return the ContactTransSource instance (or null if none)
	 */
	public final static ContactTransSource getContactTransSource( Integer id ) {
		String key = getKey( id ) ;
		return cache.get(key);
	}

	/**
	 * Removes the ContactTransSource associated with the given primary key
     * @param id 
	 */
	public final static void removeContactTransSource ( Integer id ) {
		String key = getKey( id ) ;
		cache.remove(key);
	}
	
	/**
	 * Removes the given ContactTransSource from the cache using its primary key
	 * @param ContactTransSource instance to be removed
	 */
	public final static void removeContactTransSource (ContactTransSource contactTransSource ) { 
		String key = getKey( contactTransSource.getId() ) ;
		cache.remove(key);
	}

}
