/*
 * Created on 24 Þub 2016 ( Time 15:56:49 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.demo.bean.InvoiceTransRelation;
import org.demo.business.service.InvoiceTransRelationService;
import org.demo.web.listitem.InvoiceTransRelationListItem;

/**
 * Spring MVC controller for 'InvoiceTransRelation' management.
 */
@Controller
public class InvoiceTransRelationRestController {

	@Resource
	private InvoiceTransRelationService invoiceTransRelationService;
	
	@RequestMapping( value="/items/invoiceTransRelation",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<InvoiceTransRelationListItem> findAllAsListItems() {
		List<InvoiceTransRelation> list = invoiceTransRelationService.findAll();
		List<InvoiceTransRelationListItem> items = new LinkedList<InvoiceTransRelationListItem>();
		for ( InvoiceTransRelation invoiceTransRelation : list ) {
			items.add(new InvoiceTransRelationListItem( invoiceTransRelation ) );
		}
		return items;
	}
	
	@RequestMapping( value="/invoiceTransRelation",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<InvoiceTransRelation> findAll() {
		return invoiceTransRelationService.findAll();
	}

	@RequestMapping( value="/invoiceTransRelation/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public InvoiceTransRelation findOne(@PathVariable("id") Integer id) {
		return invoiceTransRelationService.findById(id);
	}
	
	@RequestMapping( value="/invoiceTransRelation",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public InvoiceTransRelation create(@RequestBody InvoiceTransRelation invoiceTransRelation) {
		return invoiceTransRelationService.create(invoiceTransRelation);
	}

	@RequestMapping( value="/invoiceTransRelation/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public InvoiceTransRelation update(@PathVariable("id") Integer id, @RequestBody InvoiceTransRelation invoiceTransRelation) {
		return invoiceTransRelationService.update(invoiceTransRelation);
	}

	@RequestMapping( value="/invoiceTransRelation/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		invoiceTransRelationService.delete(id);
	}
	
}
