/*
 * Created on 24 Þub 2016 ( Time 15:56:46 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.demo.bean.AdminDocumentTarget;
import org.demo.business.service.AdminDocumentTargetService;
import org.demo.web.listitem.AdminDocumentTargetListItem;

/**
 * Spring MVC controller for 'AdminDocumentTarget' management.
 */
@Controller
public class AdminDocumentTargetRestController {

	@Resource
	private AdminDocumentTargetService adminDocumentTargetService;
	
	@RequestMapping( value="/items/adminDocumentTarget",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<AdminDocumentTargetListItem> findAllAsListItems() {
		List<AdminDocumentTarget> list = adminDocumentTargetService.findAll();
		List<AdminDocumentTargetListItem> items = new LinkedList<AdminDocumentTargetListItem>();
		for ( AdminDocumentTarget adminDocumentTarget : list ) {
			items.add(new AdminDocumentTargetListItem( adminDocumentTarget ) );
		}
		return items;
	}
	
	@RequestMapping( value="/adminDocumentTarget",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<AdminDocumentTarget> findAll() {
		return adminDocumentTargetService.findAll();
	}

	@RequestMapping( value="/adminDocumentTarget/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public AdminDocumentTarget findOne(@PathVariable("id") Integer id) {
		return adminDocumentTargetService.findById(id);
	}
	
	@RequestMapping( value="/adminDocumentTarget",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public AdminDocumentTarget create(@RequestBody AdminDocumentTarget adminDocumentTarget) {
		return adminDocumentTargetService.create(adminDocumentTarget);
	}

	@RequestMapping( value="/adminDocumentTarget/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public AdminDocumentTarget update(@PathVariable("id") Integer id, @RequestBody AdminDocumentTarget adminDocumentTarget) {
		return adminDocumentTargetService.update(adminDocumentTarget);
	}

	@RequestMapping( value="/adminDocumentTarget/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		adminDocumentTargetService.delete(id);
	}
	
}
