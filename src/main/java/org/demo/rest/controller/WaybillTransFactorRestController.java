/*
 * Created on 24 Þub 2016 ( Time 15:56:52 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.demo.bean.WaybillTransFactor;
import org.demo.business.service.WaybillTransFactorService;
import org.demo.web.listitem.WaybillTransFactorListItem;

/**
 * Spring MVC controller for 'WaybillTransFactor' management.
 */
@Controller
public class WaybillTransFactorRestController {

	@Resource
	private WaybillTransFactorService waybillTransFactorService;
	
	@RequestMapping( value="/items/waybillTransFactor",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<WaybillTransFactorListItem> findAllAsListItems() {
		List<WaybillTransFactor> list = waybillTransFactorService.findAll();
		List<WaybillTransFactorListItem> items = new LinkedList<WaybillTransFactorListItem>();
		for ( WaybillTransFactor waybillTransFactor : list ) {
			items.add(new WaybillTransFactorListItem( waybillTransFactor ) );
		}
		return items;
	}
	
	@RequestMapping( value="/waybillTransFactor",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<WaybillTransFactor> findAll() {
		return waybillTransFactorService.findAll();
	}

	@RequestMapping( value="/waybillTransFactor/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public WaybillTransFactor findOne(@PathVariable("id") Integer id) {
		return waybillTransFactorService.findById(id);
	}
	
	@RequestMapping( value="/waybillTransFactor",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public WaybillTransFactor create(@RequestBody WaybillTransFactor waybillTransFactor) {
		return waybillTransFactorService.create(waybillTransFactor);
	}

	@RequestMapping( value="/waybillTransFactor/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public WaybillTransFactor update(@PathVariable("id") Integer id, @RequestBody WaybillTransFactor waybillTransFactor) {
		return waybillTransFactorService.update(waybillTransFactor);
	}

	@RequestMapping( value="/waybillTransFactor/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		waybillTransFactorService.delete(id);
	}
	
}
