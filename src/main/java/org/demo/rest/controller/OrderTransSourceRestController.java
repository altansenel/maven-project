/*
 * Created on 24 Þub 2016 ( Time 15:56:50 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.demo.bean.OrderTransSource;
import org.demo.business.service.OrderTransSourceService;
import org.demo.web.listitem.OrderTransSourceListItem;

/**
 * Spring MVC controller for 'OrderTransSource' management.
 */
@Controller
public class OrderTransSourceRestController {

	@Resource
	private OrderTransSourceService orderTransSourceService;
	
	@RequestMapping( value="/items/orderTransSource",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<OrderTransSourceListItem> findAllAsListItems() {
		List<OrderTransSource> list = orderTransSourceService.findAll();
		List<OrderTransSourceListItem> items = new LinkedList<OrderTransSourceListItem>();
		for ( OrderTransSource orderTransSource : list ) {
			items.add(new OrderTransSourceListItem( orderTransSource ) );
		}
		return items;
	}
	
	@RequestMapping( value="/orderTransSource",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<OrderTransSource> findAll() {
		return orderTransSourceService.findAll();
	}

	@RequestMapping( value="/orderTransSource/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public OrderTransSource findOne(@PathVariable("id") Integer id) {
		return orderTransSourceService.findById(id);
	}
	
	@RequestMapping( value="/orderTransSource",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public OrderTransSource create(@RequestBody OrderTransSource orderTransSource) {
		return orderTransSourceService.create(orderTransSource);
	}

	@RequestMapping( value="/orderTransSource/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public OrderTransSource update(@PathVariable("id") Integer id, @RequestBody OrderTransSource orderTransSource) {
		return orderTransSourceService.update(orderTransSource);
	}

	@RequestMapping( value="/orderTransSource/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		orderTransSourceService.delete(id);
	}
	
}
