/*
 * Created on 24 Þub 2016 ( Time 15:56:50 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.demo.bean.StockCategory;
import org.demo.business.service.StockCategoryService;
import org.demo.web.listitem.StockCategoryListItem;

/**
 * Spring MVC controller for 'StockCategory' management.
 */
@Controller
public class StockCategoryRestController {

	@Resource
	private StockCategoryService stockCategoryService;
	
	@RequestMapping( value="/items/stockCategory",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<StockCategoryListItem> findAllAsListItems() {
		List<StockCategory> list = stockCategoryService.findAll();
		List<StockCategoryListItem> items = new LinkedList<StockCategoryListItem>();
		for ( StockCategory stockCategory : list ) {
			items.add(new StockCategoryListItem( stockCategory ) );
		}
		return items;
	}
	
	@RequestMapping( value="/stockCategory",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<StockCategory> findAll() {
		return stockCategoryService.findAll();
	}

	@RequestMapping( value="/stockCategory/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public StockCategory findOne(@PathVariable("id") Integer id) {
		return stockCategoryService.findById(id);
	}
	
	@RequestMapping( value="/stockCategory",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public StockCategory create(@RequestBody StockCategory stockCategory) {
		return stockCategoryService.create(stockCategory);
	}

	@RequestMapping( value="/stockCategory/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public StockCategory update(@PathVariable("id") Integer id, @RequestBody StockCategory stockCategory) {
		return stockCategoryService.update(stockCategory);
	}

	@RequestMapping( value="/stockCategory/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		stockCategoryService.delete(id);
	}
	
}
