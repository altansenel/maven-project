/*
 * Created on 24 Þub 2016 ( Time 15:56:51 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.demo.bean.StockTransCurrency;
import org.demo.business.service.StockTransCurrencyService;
import org.demo.web.listitem.StockTransCurrencyListItem;

/**
 * Spring MVC controller for 'StockTransCurrency' management.
 */
@Controller
public class StockTransCurrencyRestController {

	@Resource
	private StockTransCurrencyService stockTransCurrencyService;
	
	@RequestMapping( value="/items/stockTransCurrency",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<StockTransCurrencyListItem> findAllAsListItems() {
		List<StockTransCurrency> list = stockTransCurrencyService.findAll();
		List<StockTransCurrencyListItem> items = new LinkedList<StockTransCurrencyListItem>();
		for ( StockTransCurrency stockTransCurrency : list ) {
			items.add(new StockTransCurrencyListItem( stockTransCurrency ) );
		}
		return items;
	}
	
	@RequestMapping( value="/stockTransCurrency",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<StockTransCurrency> findAll() {
		return stockTransCurrencyService.findAll();
	}

	@RequestMapping( value="/stockTransCurrency/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public StockTransCurrency findOne(@PathVariable("id") Integer id) {
		return stockTransCurrencyService.findById(id);
	}
	
	@RequestMapping( value="/stockTransCurrency",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public StockTransCurrency create(@RequestBody StockTransCurrency stockTransCurrency) {
		return stockTransCurrencyService.create(stockTransCurrency);
	}

	@RequestMapping( value="/stockTransCurrency/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public StockTransCurrency update(@PathVariable("id") Integer id, @RequestBody StockTransCurrency stockTransCurrency) {
		return stockTransCurrencyService.update(stockTransCurrency);
	}

	@RequestMapping( value="/stockTransCurrency/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		stockTransCurrencyService.delete(id);
	}
	
}
