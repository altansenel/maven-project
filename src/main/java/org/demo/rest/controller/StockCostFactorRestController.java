/*
 * Created on 24 Þub 2016 ( Time 15:56:50 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.demo.bean.StockCostFactor;
import org.demo.business.service.StockCostFactorService;
import org.demo.web.listitem.StockCostFactorListItem;

/**
 * Spring MVC controller for 'StockCostFactor' management.
 */
@Controller
public class StockCostFactorRestController {

	@Resource
	private StockCostFactorService stockCostFactorService;
	
	@RequestMapping( value="/items/stockCostFactor",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<StockCostFactorListItem> findAllAsListItems() {
		List<StockCostFactor> list = stockCostFactorService.findAll();
		List<StockCostFactorListItem> items = new LinkedList<StockCostFactorListItem>();
		for ( StockCostFactor stockCostFactor : list ) {
			items.add(new StockCostFactorListItem( stockCostFactor ) );
		}
		return items;
	}
	
	@RequestMapping( value="/stockCostFactor",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<StockCostFactor> findAll() {
		return stockCostFactorService.findAll();
	}

	@RequestMapping( value="/stockCostFactor/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public StockCostFactor findOne(@PathVariable("id") Integer id) {
		return stockCostFactorService.findById(id);
	}
	
	@RequestMapping( value="/stockCostFactor",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public StockCostFactor create(@RequestBody StockCostFactor stockCostFactor) {
		return stockCostFactorService.create(stockCostFactor);
	}

	@RequestMapping( value="/stockCostFactor/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public StockCostFactor update(@PathVariable("id") Integer id, @RequestBody StockCostFactor stockCostFactor) {
		return stockCostFactorService.update(stockCostFactor);
	}

	@RequestMapping( value="/stockCostFactor/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		stockCostFactorService.delete(id);
	}
	
}
