/*
 * Created on 24 Þub 2016 ( Time 15:56:47 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.demo.bean.AdminUserGivenRole;
import org.demo.business.service.AdminUserGivenRoleService;
import org.demo.web.listitem.AdminUserGivenRoleListItem;

/**
 * Spring MVC controller for 'AdminUserGivenRole' management.
 */
@Controller
public class AdminUserGivenRoleRestController {

	@Resource
	private AdminUserGivenRoleService adminUserGivenRoleService;
	
	@RequestMapping( value="/items/adminUserGivenRole",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<AdminUserGivenRoleListItem> findAllAsListItems() {
		List<AdminUserGivenRole> list = adminUserGivenRoleService.findAll();
		List<AdminUserGivenRoleListItem> items = new LinkedList<AdminUserGivenRoleListItem>();
		for ( AdminUserGivenRole adminUserGivenRole : list ) {
			items.add(new AdminUserGivenRoleListItem( adminUserGivenRole ) );
		}
		return items;
	}
	
	@RequestMapping( value="/adminUserGivenRole",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<AdminUserGivenRole> findAll() {
		return adminUserGivenRoleService.findAll();
	}

	@RequestMapping( value="/adminUserGivenRole/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public AdminUserGivenRole findOne(@PathVariable("id") Integer id) {
		return adminUserGivenRoleService.findById(id);
	}
	
	@RequestMapping( value="/adminUserGivenRole",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public AdminUserGivenRole create(@RequestBody AdminUserGivenRole adminUserGivenRole) {
		return adminUserGivenRoleService.create(adminUserGivenRole);
	}

	@RequestMapping( value="/adminUserGivenRole/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public AdminUserGivenRole update(@PathVariable("id") Integer id, @RequestBody AdminUserGivenRole adminUserGivenRole) {
		return adminUserGivenRoleService.update(adminUserGivenRole);
	}

	@RequestMapping( value="/adminUserGivenRole/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		adminUserGivenRoleService.delete(id);
	}
	
}
