/*
 * Created on 24 Þub 2016 ( Time 15:56:48 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.demo.bean.ContactTransSource;
import org.demo.business.service.ContactTransSourceService;
import org.demo.web.listitem.ContactTransSourceListItem;

/**
 * Spring MVC controller for 'ContactTransSource' management.
 */
@Controller
public class ContactTransSourceRestController {

	@Resource
	private ContactTransSourceService contactTransSourceService;
	
	@RequestMapping( value="/items/contactTransSource",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<ContactTransSourceListItem> findAllAsListItems() {
		List<ContactTransSource> list = contactTransSourceService.findAll();
		List<ContactTransSourceListItem> items = new LinkedList<ContactTransSourceListItem>();
		for ( ContactTransSource contactTransSource : list ) {
			items.add(new ContactTransSourceListItem( contactTransSource ) );
		}
		return items;
	}
	
	@RequestMapping( value="/contactTransSource",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<ContactTransSource> findAll() {
		return contactTransSourceService.findAll();
	}

	@RequestMapping( value="/contactTransSource/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public ContactTransSource findOne(@PathVariable("id") Integer id) {
		return contactTransSourceService.findById(id);
	}
	
	@RequestMapping( value="/contactTransSource",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public ContactTransSource create(@RequestBody ContactTransSource contactTransSource) {
		return contactTransSourceService.create(contactTransSource);
	}

	@RequestMapping( value="/contactTransSource/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public ContactTransSource update(@PathVariable("id") Integer id, @RequestBody ContactTransSource contactTransSource) {
		return contactTransSourceService.update(contactTransSource);
	}

	@RequestMapping( value="/contactTransSource/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		contactTransSourceService.delete(id);
	}
	
}
