/*
 * Created on 24 Þub 2016 ( Time 16:27:49 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.demo.business.service.impl;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

import java.util.ArrayList;
import java.util.List;

import org.demo.bean.AdminDocumentTarget;
import org.demo.bean.jpa.AdminDocumentTargetEntity;
import org.demo.business.service.mapping.AdminDocumentTargetServiceMapper;
import org.demo.data.repository.jpa.AdminDocumentTargetJpaRepository;
import org.demo.test.AdminDocumentTargetFactoryForTest;
import org.demo.test.AdminDocumentTargetEntityFactoryForTest;
import org.demo.test.MockValues;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.runners.MockitoJUnitRunner;

/**
 * Test : Implementation of AdminDocumentTargetService
 */
@RunWith(MockitoJUnitRunner.class)
public class AdminDocumentTargetServiceImplTest {

	@InjectMocks
	private AdminDocumentTargetServiceImpl adminDocumentTargetService;
	@Mock
	private AdminDocumentTargetJpaRepository adminDocumentTargetJpaRepository;
	@Mock
	private AdminDocumentTargetServiceMapper adminDocumentTargetServiceMapper;
	
	private AdminDocumentTargetFactoryForTest adminDocumentTargetFactoryForTest = new AdminDocumentTargetFactoryForTest();

	private AdminDocumentTargetEntityFactoryForTest adminDocumentTargetEntityFactoryForTest = new AdminDocumentTargetEntityFactoryForTest();

	private MockValues mockValues = new MockValues();
	
	@Test
	public void findById() {
		// Given
		Integer id = mockValues.nextInteger();
		
		AdminDocumentTargetEntity adminDocumentTargetEntity = adminDocumentTargetJpaRepository.findOne(id);
		
		AdminDocumentTarget adminDocumentTarget = adminDocumentTargetFactoryForTest.newAdminDocumentTarget();
		when(adminDocumentTargetServiceMapper.mapAdminDocumentTargetEntityToAdminDocumentTarget(adminDocumentTargetEntity)).thenReturn(adminDocumentTarget);

		// When
		AdminDocumentTarget adminDocumentTargetFound = adminDocumentTargetService.findById(id);

		// Then
		assertEquals(adminDocumentTarget.getId(),adminDocumentTargetFound.getId());
	}

	@Test
	public void findAll() {
		// Given
		List<AdminDocumentTargetEntity> adminDocumentTargetEntitys = new ArrayList<AdminDocumentTargetEntity>();
		AdminDocumentTargetEntity adminDocumentTargetEntity1 = adminDocumentTargetEntityFactoryForTest.newAdminDocumentTargetEntity();
		adminDocumentTargetEntitys.add(adminDocumentTargetEntity1);
		AdminDocumentTargetEntity adminDocumentTargetEntity2 = adminDocumentTargetEntityFactoryForTest.newAdminDocumentTargetEntity();
		adminDocumentTargetEntitys.add(adminDocumentTargetEntity2);
		when(adminDocumentTargetJpaRepository.findAll()).thenReturn(adminDocumentTargetEntitys);
		
		AdminDocumentTarget adminDocumentTarget1 = adminDocumentTargetFactoryForTest.newAdminDocumentTarget();
		when(adminDocumentTargetServiceMapper.mapAdminDocumentTargetEntityToAdminDocumentTarget(adminDocumentTargetEntity1)).thenReturn(adminDocumentTarget1);
		AdminDocumentTarget adminDocumentTarget2 = adminDocumentTargetFactoryForTest.newAdminDocumentTarget();
		when(adminDocumentTargetServiceMapper.mapAdminDocumentTargetEntityToAdminDocumentTarget(adminDocumentTargetEntity2)).thenReturn(adminDocumentTarget2);

		// When
		List<AdminDocumentTarget> adminDocumentTargetsFounds = adminDocumentTargetService.findAll();

		// Then
		assertTrue(adminDocumentTarget1 == adminDocumentTargetsFounds.get(0));
		assertTrue(adminDocumentTarget2 == adminDocumentTargetsFounds.get(1));
	}

	@Test
	public void create() {
		// Given
		AdminDocumentTarget adminDocumentTarget = adminDocumentTargetFactoryForTest.newAdminDocumentTarget();

		AdminDocumentTargetEntity adminDocumentTargetEntity = adminDocumentTargetEntityFactoryForTest.newAdminDocumentTargetEntity();
		when(adminDocumentTargetJpaRepository.findOne(adminDocumentTarget.getId())).thenReturn(null);
		
		adminDocumentTargetEntity = new AdminDocumentTargetEntity();
		adminDocumentTargetServiceMapper.mapAdminDocumentTargetToAdminDocumentTargetEntity(adminDocumentTarget, adminDocumentTargetEntity);
		AdminDocumentTargetEntity adminDocumentTargetEntitySaved = adminDocumentTargetJpaRepository.save(adminDocumentTargetEntity);
		
		AdminDocumentTarget adminDocumentTargetSaved = adminDocumentTargetFactoryForTest.newAdminDocumentTarget();
		when(adminDocumentTargetServiceMapper.mapAdminDocumentTargetEntityToAdminDocumentTarget(adminDocumentTargetEntitySaved)).thenReturn(adminDocumentTargetSaved);

		// When
		AdminDocumentTarget adminDocumentTargetResult = adminDocumentTargetService.create(adminDocumentTarget);

		// Then
		assertTrue(adminDocumentTargetResult == adminDocumentTargetSaved);
	}

	@Test
	public void createKOExists() {
		// Given
		AdminDocumentTarget adminDocumentTarget = adminDocumentTargetFactoryForTest.newAdminDocumentTarget();

		AdminDocumentTargetEntity adminDocumentTargetEntity = adminDocumentTargetEntityFactoryForTest.newAdminDocumentTargetEntity();
		when(adminDocumentTargetJpaRepository.findOne(adminDocumentTarget.getId())).thenReturn(adminDocumentTargetEntity);

		// When
		Exception exception = null;
		try {
			adminDocumentTargetService.create(adminDocumentTarget);
		} catch(Exception e) {
			exception = e;
		}

		// Then
		assertTrue(exception instanceof IllegalStateException);
		assertEquals("already.exists", exception.getMessage());
	}

	@Test
	public void update() {
		// Given
		AdminDocumentTarget adminDocumentTarget = adminDocumentTargetFactoryForTest.newAdminDocumentTarget();

		AdminDocumentTargetEntity adminDocumentTargetEntity = adminDocumentTargetEntityFactoryForTest.newAdminDocumentTargetEntity();
		when(adminDocumentTargetJpaRepository.findOne(adminDocumentTarget.getId())).thenReturn(adminDocumentTargetEntity);
		
		AdminDocumentTargetEntity adminDocumentTargetEntitySaved = adminDocumentTargetEntityFactoryForTest.newAdminDocumentTargetEntity();
		when(adminDocumentTargetJpaRepository.save(adminDocumentTargetEntity)).thenReturn(adminDocumentTargetEntitySaved);
		
		AdminDocumentTarget adminDocumentTargetSaved = adminDocumentTargetFactoryForTest.newAdminDocumentTarget();
		when(adminDocumentTargetServiceMapper.mapAdminDocumentTargetEntityToAdminDocumentTarget(adminDocumentTargetEntitySaved)).thenReturn(adminDocumentTargetSaved);

		// When
		AdminDocumentTarget adminDocumentTargetResult = adminDocumentTargetService.update(adminDocumentTarget);

		// Then
		verify(adminDocumentTargetServiceMapper).mapAdminDocumentTargetToAdminDocumentTargetEntity(adminDocumentTarget, adminDocumentTargetEntity);
		assertTrue(adminDocumentTargetResult == adminDocumentTargetSaved);
	}

	@Test
	public void delete() {
		// Given
		Integer id = mockValues.nextInteger();

		// When
		adminDocumentTargetService.delete(id);

		// Then
		verify(adminDocumentTargetJpaRepository).delete(id);
		
	}

}
