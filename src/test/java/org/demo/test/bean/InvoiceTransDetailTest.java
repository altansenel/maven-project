/*
 * JUnit test case for bean InvoiceTransDetail
 * Created on 24 Þub 2016 ( Date ISO 2016-02-24 - Time 15:13:26 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */

package org.demo.test.bean;


import java.math.BigDecimal;

import org.demo.bean.InvoiceTransDetail ;

import org.junit.Assert;
import org.junit.Test;

/**
 * JUnit test case for bean InvoiceTransDetail
 * 
 * @author Telosys Tools Generator
 *
 */
public class InvoiceTransDetailTest 
{
	protected static final byte    byteValue    = 1 ;
	protected static final short   shortValue   = 1 ;
	protected static final int     intValue     = 1 ;
	protected static final int     integerValue = 1 ;
	protected static final long    longValue    = 1 ;
	
	protected static final float   floatValue    = 1.234f ;
	protected static final double  doubleValue   = 1.234 ;
	
	protected static final BigDecimal bigdecimalValue = new BigDecimal("12.3456");
	
	protected static final String  stringValue  = "A" ;
	
	protected static final java.util.Date     dateValue         = new java.util.Date();
	protected static final java.sql.Date      sqldateValue      = new java.sql.Date(dateValue.getTime());
	protected static final java.sql.Time      sqltimeValue      = new java.sql.Time(dateValue.getTime());
	protected static final java.sql.Timestamp sqltimestampValue = new java.sql.Timestamp(dateValue.getTime());

	protected static final byte[]  bytesArray  = "ABCD".getBytes() ;

	@Test
	public void testSettersAndGetters() {
		
		System.out.println("Checking class InvoiceTransDetail getters and setters ..." );
		
		InvoiceTransDetail invoiceTransDetail = new InvoiceTransDetail();
		
		//--- Test setter/getter for field "id"  ( type : Integer )
		// System.out.println(" checking field id ..." );
		invoiceTransDetail.setId( integerValue ) ;
		Assert.assertTrue( integerValue == invoiceTransDetail.getId() ) ;

		//--- Test setter/getter for field "receiptNo"  ( type : Integer )
		// System.out.println(" checking field receiptNo ..." );
		invoiceTransDetail.setReceiptNo( integerValue ) ;
		Assert.assertTrue( integerValue == invoiceTransDetail.getReceiptNo() ) ;

		//--- Test setter/getter for field "right"  ( type : String )
		// System.out.println(" checking field right ..." );
		invoiceTransDetail.setRight( stringValue ) ;
		Assert.assertTrue( stringValue.equals( invoiceTransDetail.getRight() ) ) ;

		//--- Test setter/getter for field "transDate"  ( type : Date )
		// System.out.println(" checking field transDate ..." );
		invoiceTransDetail.setTransDate( dateValue ) ;
		Assert.assertTrue( dateValue.equals( invoiceTransDetail.getTransDate() ) );

		//--- Test setter/getter for field "deliveryDate"  ( type : Date )
		// System.out.println(" checking field deliveryDate ..." );
		invoiceTransDetail.setDeliveryDate( dateValue ) ;
		Assert.assertTrue( dateValue.equals( invoiceTransDetail.getDeliveryDate() ) );

		//--- Test setter/getter for field "transType"  ( type : String )
		// System.out.println(" checking field transType ..." );
		invoiceTransDetail.setTransType( stringValue ) ;
		Assert.assertTrue( stringValue.equals( invoiceTransDetail.getTransType() ) ) ;

		//--- Test setter/getter for field "rowNo"  ( type : Integer )
		// System.out.println(" checking field rowNo ..." );
		invoiceTransDetail.setRowNo( integerValue ) ;
		Assert.assertTrue( integerValue == invoiceTransDetail.getRowNo() ) ;

		//--- Test setter/getter for field "stockId"  ( type : Integer )
		// System.out.println(" checking field stockId ..." );
		invoiceTransDetail.setStockId( integerValue ) ;
		Assert.assertTrue( integerValue == invoiceTransDetail.getStockId() ) ;

		//--- Test setter/getter for field "name"  ( type : String )
		// System.out.println(" checking field name ..." );
		invoiceTransDetail.setName( stringValue ) ;
		Assert.assertTrue( stringValue.equals( invoiceTransDetail.getName() ) ) ;

		//--- Test setter/getter for field "quantity"  ( type : Double )
		// System.out.println(" checking field quantity ..." );
		invoiceTransDetail.setQuantity( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getQuantity() ) ;

		//--- Test setter/getter for field "unit"  ( type : String )
		// System.out.println(" checking field unit ..." );
		invoiceTransDetail.setUnit( stringValue ) ;
		Assert.assertTrue( stringValue.equals( invoiceTransDetail.getUnit() ) ) ;

		//--- Test setter/getter for field "unitRatio"  ( type : Double )
		// System.out.println(" checking field unitRatio ..." );
		invoiceTransDetail.setUnitRatio( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getUnitRatio() ) ;

		//--- Test setter/getter for field "basePrice"  ( type : Double )
		// System.out.println(" checking field basePrice ..." );
		invoiceTransDetail.setBasePrice( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getBasePrice() ) ;

		//--- Test setter/getter for field "price"  ( type : Double )
		// System.out.println(" checking field price ..." );
		invoiceTransDetail.setPrice( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getPrice() ) ;

		//--- Test setter/getter for field "taxRate"  ( type : Double )
		// System.out.println(" checking field taxRate ..." );
		invoiceTransDetail.setTaxRate( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getTaxRate() ) ;

		//--- Test setter/getter for field "taxRate2"  ( type : Double )
		// System.out.println(" checking field taxRate2 ..." );
		invoiceTransDetail.setTaxRate2( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getTaxRate2() ) ;

		//--- Test setter/getter for field "taxRate3"  ( type : Double )
		// System.out.println(" checking field taxRate3 ..." );
		invoiceTransDetail.setTaxRate3( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getTaxRate3() ) ;

		//--- Test setter/getter for field "discountRate1"  ( type : Double )
		// System.out.println(" checking field discountRate1 ..." );
		invoiceTransDetail.setDiscountRate1( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getDiscountRate1() ) ;

		//--- Test setter/getter for field "discountRate2"  ( type : Double )
		// System.out.println(" checking field discountRate2 ..." );
		invoiceTransDetail.setDiscountRate2( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getDiscountRate2() ) ;

		//--- Test setter/getter for field "discountRate3"  ( type : Double )
		// System.out.println(" checking field discountRate3 ..." );
		invoiceTransDetail.setDiscountRate3( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getDiscountRate3() ) ;

		//--- Test setter/getter for field "amount"  ( type : Double )
		// System.out.println(" checking field amount ..." );
		invoiceTransDetail.setAmount( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getAmount() ) ;

		//--- Test setter/getter for field "taxAmount"  ( type : Double )
		// System.out.println(" checking field taxAmount ..." );
		invoiceTransDetail.setTaxAmount( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getTaxAmount() ) ;

		//--- Test setter/getter for field "discountAmount"  ( type : Double )
		// System.out.println(" checking field discountAmount ..." );
		invoiceTransDetail.setDiscountAmount( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getDiscountAmount() ) ;

		//--- Test setter/getter for field "total"  ( type : Double )
		// System.out.println(" checking field total ..." );
		invoiceTransDetail.setTotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getTotal() ) ;

		//--- Test setter/getter for field "description"  ( type : String )
		// System.out.println(" checking field description ..." );
		invoiceTransDetail.setDescription( stringValue ) ;
		Assert.assertTrue( stringValue.equals( invoiceTransDetail.getDescription() ) ) ;

		//--- Test setter/getter for field "transYear"  ( type : Integer )
		// System.out.println(" checking field transYear ..." );
		invoiceTransDetail.setTransYear( integerValue ) ;
		Assert.assertTrue( integerValue == invoiceTransDetail.getTransYear() ) ;

		//--- Test setter/getter for field "transMonth"  ( type : String )
		// System.out.println(" checking field transMonth ..." );
		invoiceTransDetail.setTransMonth( stringValue ) ;
		Assert.assertTrue( stringValue.equals( invoiceTransDetail.getTransMonth() ) ) ;

		//--- Test setter/getter for field "unit1"  ( type : String )
		// System.out.println(" checking field unit1 ..." );
		invoiceTransDetail.setUnit1( stringValue ) ;
		Assert.assertTrue( stringValue.equals( invoiceTransDetail.getUnit1() ) ) ;

		//--- Test setter/getter for field "unit2"  ( type : String )
		// System.out.println(" checking field unit2 ..." );
		invoiceTransDetail.setUnit2( stringValue ) ;
		Assert.assertTrue( stringValue.equals( invoiceTransDetail.getUnit2() ) ) ;

		//--- Test setter/getter for field "unit3"  ( type : String )
		// System.out.println(" checking field unit3 ..." );
		invoiceTransDetail.setUnit3( stringValue ) ;
		Assert.assertTrue( stringValue.equals( invoiceTransDetail.getUnit3() ) ) ;

		//--- Test setter/getter for field "unit2ratio"  ( type : Double )
		// System.out.println(" checking field unit2ratio ..." );
		invoiceTransDetail.setUnit2ratio( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getUnit2ratio() ) ;

		//--- Test setter/getter for field "unit3ratio"  ( type : Double )
		// System.out.println(" checking field unit3ratio ..." );
		invoiceTransDetail.setUnit3ratio( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getUnit3ratio() ) ;

		//--- Test setter/getter for field "excCode"  ( type : String )
		// System.out.println(" checking field excCode ..." );
		invoiceTransDetail.setExcCode( stringValue ) ;
		Assert.assertTrue( stringValue.equals( invoiceTransDetail.getExcCode() ) ) ;

		//--- Test setter/getter for field "excRate"  ( type : Double )
		// System.out.println(" checking field excRate ..." );
		invoiceTransDetail.setExcRate( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getExcRate() ) ;

		//--- Test setter/getter for field "excEquivalent"  ( type : Double )
		// System.out.println(" checking field excEquivalent ..." );
		invoiceTransDetail.setExcEquivalent( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getExcEquivalent() ) ;

		//--- Test setter/getter for field "plusFactorAmount"  ( type : Double )
		// System.out.println(" checking field plusFactorAmount ..." );
		invoiceTransDetail.setPlusFactorAmount( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getPlusFactorAmount() ) ;

		//--- Test setter/getter for field "minusFactorAmount"  ( type : Double )
		// System.out.println(" checking field minusFactorAmount ..." );
		invoiceTransDetail.setMinusFactorAmount( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getMinusFactorAmount() ) ;

		//--- Test setter/getter for field "serialNo"  ( type : String )
		// System.out.println(" checking field serialNo ..." );
		invoiceTransDetail.setSerialNo( stringValue ) ;
		Assert.assertTrue( stringValue.equals( invoiceTransDetail.getSerialNo() ) ) ;

		//--- Test setter/getter for field "input"  ( type : Double )
		// System.out.println(" checking field input ..." );
		invoiceTransDetail.setInput( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getInput() ) ;

		//--- Test setter/getter for field "output"  ( type : Double )
		// System.out.println(" checking field output ..." );
		invoiceTransDetail.setOutput( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getOutput() ) ;

		//--- Test setter/getter for field "inTotal"  ( type : Double )
		// System.out.println(" checking field inTotal ..." );
		invoiceTransDetail.setInTotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getInTotal() ) ;

		//--- Test setter/getter for field "outTotal"  ( type : Double )
		// System.out.println(" checking field outTotal ..." );
		invoiceTransDetail.setOutTotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getOutTotal() ) ;

		//--- Test setter/getter for field "isReturn"  ( type : Boolean )
		// System.out.println(" checking field isReturn ..." );
		invoiceTransDetail.setIsReturn( true ) ;
		Assert.assertTrue( invoiceTransDetail.getIsReturn() ) ;
		invoiceTransDetail.setIsReturn( false ) ;
		Assert.assertFalse( invoiceTransDetail.getIsReturn() ) ;

		//--- Test setter/getter for field "retInput"  ( type : Double )
		// System.out.println(" checking field retInput ..." );
		invoiceTransDetail.setRetInput( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getRetInput() ) ;

		//--- Test setter/getter for field "retOutput"  ( type : Double )
		// System.out.println(" checking field retOutput ..." );
		invoiceTransDetail.setRetOutput( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getRetOutput() ) ;

		//--- Test setter/getter for field "retInTotal"  ( type : Double )
		// System.out.println(" checking field retInTotal ..." );
		invoiceTransDetail.setRetInTotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getRetInTotal() ) ;

		//--- Test setter/getter for field "retOutTotal"  ( type : Double )
		// System.out.println(" checking field retOutTotal ..." );
		invoiceTransDetail.setRetOutTotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getRetOutTotal() ) ;

		//--- Test setter/getter for field "netInput"  ( type : Double )
		// System.out.println(" checking field netInput ..." );
		invoiceTransDetail.setNetInput( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getNetInput() ) ;

		//--- Test setter/getter for field "netOutput"  ( type : Double )
		// System.out.println(" checking field netOutput ..." );
		invoiceTransDetail.setNetOutput( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getNetOutput() ) ;

		//--- Test setter/getter for field "netInTotal"  ( type : Double )
		// System.out.println(" checking field netInTotal ..." );
		invoiceTransDetail.setNetInTotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getNetInTotal() ) ;

		//--- Test setter/getter for field "netOutTotal"  ( type : Double )
		// System.out.println(" checking field netOutTotal ..." );
		invoiceTransDetail.setNetOutTotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == invoiceTransDetail.getNetOutTotal() ) ;

		//--- Test setter/getter for field "hasCostEffect"  ( type : Boolean )
		// System.out.println(" checking field hasCostEffect ..." );
		invoiceTransDetail.setHasCostEffect( true ) ;
		Assert.assertTrue( invoiceTransDetail.getHasCostEffect() ) ;
		invoiceTransDetail.setHasCostEffect( false ) ;
		Assert.assertFalse( invoiceTransDetail.getHasCostEffect() ) ;

		//--- Test setter/getter for field "transId"  ( type : Integer )
		// System.out.println(" checking field transId ..." );
		invoiceTransDetail.setTransId( integerValue ) ;
		Assert.assertTrue( integerValue == invoiceTransDetail.getTransId() ) ;

		//--- Test setter/getter for field "depotId"  ( type : Integer )
		// System.out.println(" checking field depotId ..." );
		invoiceTransDetail.setDepotId( integerValue ) ;
		Assert.assertTrue( integerValue == invoiceTransDetail.getDepotId() ) ;

		//--- Test setter/getter for field "contactId"  ( type : Integer )
		// System.out.println(" checking field contactId ..." );
		invoiceTransDetail.setContactId( integerValue ) ;
		Assert.assertTrue( integerValue == invoiceTransDetail.getContactId() ) ;

		//--- Test setter/getter for field "sellerId"  ( type : Integer )
		// System.out.println(" checking field sellerId ..." );
		invoiceTransDetail.setSellerId( integerValue ) ;
		Assert.assertTrue( integerValue == invoiceTransDetail.getSellerId() ) ;

		//--- Test setter/getter for field "transSourceId"  ( type : Integer )
		// System.out.println(" checking field transSourceId ..." );
		invoiceTransDetail.setTransSourceId( integerValue ) ;
		Assert.assertTrue( integerValue == invoiceTransDetail.getTransSourceId() ) ;

		//--- Test setter/getter for field "transPointId"  ( type : Integer )
		// System.out.println(" checking field transPointId ..." );
		invoiceTransDetail.setTransPointId( integerValue ) ;
		Assert.assertTrue( integerValue == invoiceTransDetail.getTransPointId() ) ;

		//--- Test setter/getter for field "privateCodeId"  ( type : Integer )
		// System.out.println(" checking field privateCodeId ..." );
		invoiceTransDetail.setPrivateCodeId( integerValue ) ;
		Assert.assertTrue( integerValue == invoiceTransDetail.getPrivateCodeId() ) ;

		//--- Test setter/getter for field "parentId"  ( type : Integer )
		// System.out.println(" checking field parentId ..." );
		invoiceTransDetail.setParentId( integerValue ) ;
		Assert.assertTrue( integerValue == invoiceTransDetail.getParentId() ) ;

		//--- Test setter/getter for field "parentRight"  ( type : String )
		// System.out.println(" checking field parentRight ..." );
		invoiceTransDetail.setParentRight( stringValue ) ;
		Assert.assertTrue( stringValue.equals( invoiceTransDetail.getParentRight() ) ) ;

		//--- Test setter/getter for field "statusId"  ( type : Integer )
		// System.out.println(" checking field statusId ..." );
		invoiceTransDetail.setStatusId( integerValue ) ;
		Assert.assertTrue( integerValue == invoiceTransDetail.getStatusId() ) ;

		//--- Test setter/getter for field "workspace"  ( type : Integer )
		// System.out.println(" checking field workspace ..." );
		invoiceTransDetail.setWorkspace( integerValue ) ;
		Assert.assertTrue( integerValue == invoiceTransDetail.getWorkspace() ) ;

		
	}



}
