/*
 * JUnit test case for bean ChqbllPayrollDetail
 * Created on 24 Þub 2016 ( Date ISO 2016-02-24 - Time 15:13:25 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */

package org.demo.test.bean;


import java.math.BigDecimal;

import org.demo.bean.ChqbllPayrollDetail ;

import org.junit.Assert;
import org.junit.Test;

/**
 * JUnit test case for bean ChqbllPayrollDetail
 * 
 * @author Telosys Tools Generator
 *
 */
public class ChqbllPayrollDetailTest 
{
	protected static final byte    byteValue    = 1 ;
	protected static final short   shortValue   = 1 ;
	protected static final int     intValue     = 1 ;
	protected static final int     integerValue = 1 ;
	protected static final long    longValue    = 1 ;
	
	protected static final float   floatValue    = 1.234f ;
	protected static final double  doubleValue   = 1.234 ;
	
	protected static final BigDecimal bigdecimalValue = new BigDecimal("12.3456");
	
	protected static final String  stringValue  = "A" ;
	
	protected static final java.util.Date     dateValue         = new java.util.Date();
	protected static final java.sql.Date      sqldateValue      = new java.sql.Date(dateValue.getTime());
	protected static final java.sql.Time      sqltimeValue      = new java.sql.Time(dateValue.getTime());
	protected static final java.sql.Timestamp sqltimestampValue = new java.sql.Timestamp(dateValue.getTime());

	protected static final byte[]  bytesArray  = "ABCD".getBytes() ;

	@Test
	public void testSettersAndGetters() {
		
		System.out.println("Checking class ChqbllPayrollDetail getters and setters ..." );
		
		ChqbllPayrollDetail chqbllPayrollDetail = new ChqbllPayrollDetail();
		
		//--- Test setter/getter for field "id"  ( type : Integer )
		// System.out.println(" checking field id ..." );
		chqbllPayrollDetail.setId( integerValue ) ;
		Assert.assertTrue( integerValue == chqbllPayrollDetail.getId() ) ;

		//--- Test setter/getter for field "sort"  ( type : String )
		// System.out.println(" checking field sort ..." );
		chqbllPayrollDetail.setSort( stringValue ) ;
		Assert.assertTrue( stringValue.equals( chqbllPayrollDetail.getSort() ) ) ;

		//--- Test setter/getter for field "isCustomer"  ( type : Boolean )
		// System.out.println(" checking field isCustomer ..." );
		chqbllPayrollDetail.setIsCustomer( true ) ;
		Assert.assertTrue( chqbllPayrollDetail.getIsCustomer() ) ;
		chqbllPayrollDetail.setIsCustomer( false ) ;
		Assert.assertFalse( chqbllPayrollDetail.getIsCustomer() ) ;

		//--- Test setter/getter for field "portfolioNo"  ( type : Integer )
		// System.out.println(" checking field portfolioNo ..." );
		chqbllPayrollDetail.setPortfolioNo( integerValue ) ;
		Assert.assertTrue( integerValue == chqbllPayrollDetail.getPortfolioNo() ) ;

		//--- Test setter/getter for field "rowNo"  ( type : Integer )
		// System.out.println(" checking field rowNo ..." );
		chqbllPayrollDetail.setRowNo( integerValue ) ;
		Assert.assertTrue( integerValue == chqbllPayrollDetail.getRowNo() ) ;

		//--- Test setter/getter for field "serialNo"  ( type : String )
		// System.out.println(" checking field serialNo ..." );
		chqbllPayrollDetail.setSerialNo( stringValue ) ;
		Assert.assertTrue( stringValue.equals( chqbllPayrollDetail.getSerialNo() ) ) ;

		//--- Test setter/getter for field "dueDate"  ( type : Date )
		// System.out.println(" checking field dueDate ..." );
		chqbllPayrollDetail.setDueDate( dateValue ) ;
		Assert.assertTrue( dateValue.equals( chqbllPayrollDetail.getDueDate() ) );

		//--- Test setter/getter for field "amount"  ( type : Double )
		// System.out.println(" checking field amount ..." );
		chqbllPayrollDetail.setAmount( doubleValue ) ;
		Assert.assertTrue( doubleValue == chqbllPayrollDetail.getAmount() ) ;

		//--- Test setter/getter for field "description"  ( type : String )
		// System.out.println(" checking field description ..." );
		chqbllPayrollDetail.setDescription( stringValue ) ;
		Assert.assertTrue( stringValue.equals( chqbllPayrollDetail.getDescription() ) ) ;

		//--- Test setter/getter for field "dueYear"  ( type : Integer )
		// System.out.println(" checking field dueYear ..." );
		chqbllPayrollDetail.setDueYear( integerValue ) ;
		Assert.assertTrue( integerValue == chqbllPayrollDetail.getDueYear() ) ;

		//--- Test setter/getter for field "dueMonth"  ( type : String )
		// System.out.println(" checking field dueMonth ..." );
		chqbllPayrollDetail.setDueMonth( stringValue ) ;
		Assert.assertTrue( stringValue.equals( chqbllPayrollDetail.getDueMonth() ) ) ;

		//--- Test setter/getter for field "owner"  ( type : String )
		// System.out.println(" checking field owner ..." );
		chqbllPayrollDetail.setOwner( stringValue ) ;
		Assert.assertTrue( stringValue.equals( chqbllPayrollDetail.getOwner() ) ) ;

		//--- Test setter/getter for field "paymentPlace"  ( type : String )
		// System.out.println(" checking field paymentPlace ..." );
		chqbllPayrollDetail.setPaymentPlace( stringValue ) ;
		Assert.assertTrue( stringValue.equals( chqbllPayrollDetail.getPaymentPlace() ) ) ;

		//--- Test setter/getter for field "bankAccountNo"  ( type : String )
		// System.out.println(" checking field bankAccountNo ..." );
		chqbllPayrollDetail.setBankAccountNo( stringValue ) ;
		Assert.assertTrue( stringValue.equals( chqbllPayrollDetail.getBankAccountNo() ) ) ;

		//--- Test setter/getter for field "bankName"  ( type : String )
		// System.out.println(" checking field bankName ..." );
		chqbllPayrollDetail.setBankName( stringValue ) ;
		Assert.assertTrue( stringValue.equals( chqbllPayrollDetail.getBankName() ) ) ;

		//--- Test setter/getter for field "bankBranch"  ( type : String )
		// System.out.println(" checking field bankBranch ..." );
		chqbllPayrollDetail.setBankBranch( stringValue ) ;
		Assert.assertTrue( stringValue.equals( chqbllPayrollDetail.getBankBranch() ) ) ;

		//--- Test setter/getter for field "correspondentBranch"  ( type : String )
		// System.out.println(" checking field correspondentBranch ..." );
		chqbllPayrollDetail.setCorrespondentBranch( stringValue ) ;
		Assert.assertTrue( stringValue.equals( chqbllPayrollDetail.getCorrespondentBranch() ) ) ;

		//--- Test setter/getter for field "contactName"  ( type : String )
		// System.out.println(" checking field contactName ..." );
		chqbllPayrollDetail.setContactName( stringValue ) ;
		Assert.assertTrue( stringValue.equals( chqbllPayrollDetail.getContactName() ) ) ;

		//--- Test setter/getter for field "lastStep"  ( type : String )
		// System.out.println(" checking field lastStep ..." );
		chqbllPayrollDetail.setLastStep( stringValue ) ;
		Assert.assertTrue( stringValue.equals( chqbllPayrollDetail.getLastStep() ) ) ;

		//--- Test setter/getter for field "lastContactName"  ( type : String )
		// System.out.println(" checking field lastContactName ..." );
		chqbllPayrollDetail.setLastContactName( stringValue ) ;
		Assert.assertTrue( stringValue.equals( chqbllPayrollDetail.getLastContactName() ) ) ;

		//--- Test setter/getter for field "surety"  ( type : String )
		// System.out.println(" checking field surety ..." );
		chqbllPayrollDetail.setSurety( stringValue ) ;
		Assert.assertTrue( stringValue.equals( chqbllPayrollDetail.getSurety() ) ) ;

		//--- Test setter/getter for field "suretyAddress"  ( type : String )
		// System.out.println(" checking field suretyAddress ..." );
		chqbllPayrollDetail.setSuretyAddress( stringValue ) ;
		Assert.assertTrue( stringValue.equals( chqbllPayrollDetail.getSuretyAddress() ) ) ;

		//--- Test setter/getter for field "suretyPhone1"  ( type : String )
		// System.out.println(" checking field suretyPhone1 ..." );
		chqbllPayrollDetail.setSuretyPhone1( stringValue ) ;
		Assert.assertTrue( stringValue.equals( chqbllPayrollDetail.getSuretyPhone1() ) ) ;

		//--- Test setter/getter for field "suretyPhone2"  ( type : String )
		// System.out.println(" checking field suretyPhone2 ..." );
		chqbllPayrollDetail.setSuretyPhone2( stringValue ) ;
		Assert.assertTrue( stringValue.equals( chqbllPayrollDetail.getSuretyPhone2() ) ) ;

		//--- Test setter/getter for field "excCode"  ( type : String )
		// System.out.println(" checking field excCode ..." );
		chqbllPayrollDetail.setExcCode( stringValue ) ;
		Assert.assertTrue( stringValue.equals( chqbllPayrollDetail.getExcCode() ) ) ;

		//--- Test setter/getter for field "excRate"  ( type : Double )
		// System.out.println(" checking field excRate ..." );
		chqbllPayrollDetail.setExcRate( doubleValue ) ;
		Assert.assertTrue( doubleValue == chqbllPayrollDetail.getExcRate() ) ;

		//--- Test setter/getter for field "excEquivalent"  ( type : Double )
		// System.out.println(" checking field excEquivalent ..." );
		chqbllPayrollDetail.setExcEquivalent( doubleValue ) ;
		Assert.assertTrue( doubleValue == chqbllPayrollDetail.getExcEquivalent() ) ;

		//--- Test setter/getter for field "totalPaid"  ( type : Double )
		// System.out.println(" checking field totalPaid ..." );
		chqbllPayrollDetail.setTotalPaid( doubleValue ) ;
		Assert.assertTrue( doubleValue == chqbllPayrollDetail.getTotalPaid() ) ;

		//--- Test setter/getter for field "cbtypeId"  ( type : Integer )
		// System.out.println(" checking field cbtypeId ..." );
		chqbllPayrollDetail.setCbtypeId( integerValue ) ;
		Assert.assertTrue( integerValue == chqbllPayrollDetail.getCbtypeId() ) ;

		//--- Test setter/getter for field "transId"  ( type : Integer )
		// System.out.println(" checking field transId ..." );
		chqbllPayrollDetail.setTransId( integerValue ) ;
		Assert.assertTrue( integerValue == chqbllPayrollDetail.getTransId() ) ;

		//--- Test setter/getter for field "transSourceId"  ( type : Integer )
		// System.out.println(" checking field transSourceId ..." );
		chqbllPayrollDetail.setTransSourceId( integerValue ) ;
		Assert.assertTrue( integerValue == chqbllPayrollDetail.getTransSourceId() ) ;

		//--- Test setter/getter for field "transPointId"  ( type : Integer )
		// System.out.println(" checking field transPointId ..." );
		chqbllPayrollDetail.setTransPointId( integerValue ) ;
		Assert.assertTrue( integerValue == chqbllPayrollDetail.getTransPointId() ) ;

		//--- Test setter/getter for field "privateCodeId"  ( type : Integer )
		// System.out.println(" checking field privateCodeId ..." );
		chqbllPayrollDetail.setPrivateCodeId( integerValue ) ;
		Assert.assertTrue( integerValue == chqbllPayrollDetail.getPrivateCodeId() ) ;

		//--- Test setter/getter for field "contactId"  ( type : Integer )
		// System.out.println(" checking field contactId ..." );
		chqbllPayrollDetail.setContactId( integerValue ) ;
		Assert.assertTrue( integerValue == chqbllPayrollDetail.getContactId() ) ;

		//--- Test setter/getter for field "bankId"  ( type : Integer )
		// System.out.println(" checking field bankId ..." );
		chqbllPayrollDetail.setBankId( integerValue ) ;
		Assert.assertTrue( integerValue == chqbllPayrollDetail.getBankId() ) ;

		//--- Test setter/getter for field "workspace"  ( type : Integer )
		// System.out.println(" checking field workspace ..." );
		chqbllPayrollDetail.setWorkspace( integerValue ) ;
		Assert.assertTrue( integerValue == chqbllPayrollDetail.getWorkspace() ) ;

		
	}



}
