/*
 * JUnit test case for bean Contact
 * Created on 24 Þub 2016 ( Date ISO 2016-02-24 - Time 15:13:25 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */

package org.demo.test.bean;


import java.math.BigDecimal;

import org.demo.bean.Contact ;

import org.junit.Assert;
import org.junit.Test;

/**
 * JUnit test case for bean Contact
 * 
 * @author Telosys Tools Generator
 *
 */
public class ContactTest 
{
	protected static final byte    byteValue    = 1 ;
	protected static final short   shortValue   = 1 ;
	protected static final int     intValue     = 1 ;
	protected static final int     integerValue = 1 ;
	protected static final long    longValue    = 1 ;
	
	protected static final float   floatValue    = 1.234f ;
	protected static final double  doubleValue   = 1.234 ;
	
	protected static final BigDecimal bigdecimalValue = new BigDecimal("12.3456");
	
	protected static final String  stringValue  = "A" ;
	
	protected static final java.util.Date     dateValue         = new java.util.Date();
	protected static final java.sql.Date      sqldateValue      = new java.sql.Date(dateValue.getTime());
	protected static final java.sql.Time      sqltimeValue      = new java.sql.Time(dateValue.getTime());
	protected static final java.sql.Timestamp sqltimestampValue = new java.sql.Timestamp(dateValue.getTime());

	protected static final byte[]  bytesArray  = "ABCD".getBytes() ;

	@Test
	public void testSettersAndGetters() {
		
		System.out.println("Checking class Contact getters and setters ..." );
		
		Contact contact = new Contact();
		
		//--- Test setter/getter for field "id"  ( type : Integer )
		// System.out.println(" checking field id ..." );
		contact.setId( integerValue ) ;
		Assert.assertTrue( integerValue == contact.getId() ) ;

		//--- Test setter/getter for field "code"  ( type : String )
		// System.out.println(" checking field code ..." );
		contact.setCode( stringValue ) ;
		Assert.assertTrue( stringValue.equals( contact.getCode() ) ) ;

		//--- Test setter/getter for field "name"  ( type : String )
		// System.out.println(" checking field name ..." );
		contact.setName( stringValue ) ;
		Assert.assertTrue( stringValue.equals( contact.getName() ) ) ;

		//--- Test setter/getter for field "taxOffice"  ( type : String )
		// System.out.println(" checking field taxOffice ..." );
		contact.setTaxOffice( stringValue ) ;
		Assert.assertTrue( stringValue.equals( contact.getTaxOffice() ) ) ;

		//--- Test setter/getter for field "taxNumber"  ( type : String )
		// System.out.println(" checking field taxNumber ..." );
		contact.setTaxNumber( stringValue ) ;
		Assert.assertTrue( stringValue.equals( contact.getTaxNumber() ) ) ;

		//--- Test setter/getter for field "tcKimlik"  ( type : String )
		// System.out.println(" checking field tcKimlik ..." );
		contact.setTcKimlik( stringValue ) ;
		Assert.assertTrue( stringValue.equals( contact.getTcKimlik() ) ) ;

		//--- Test setter/getter for field "relevant"  ( type : String )
		// System.out.println(" checking field relevant ..." );
		contact.setRelevant( stringValue ) ;
		Assert.assertTrue( stringValue.equals( contact.getRelevant() ) ) ;

		//--- Test setter/getter for field "phone"  ( type : String )
		// System.out.println(" checking field phone ..." );
		contact.setPhone( stringValue ) ;
		Assert.assertTrue( stringValue.equals( contact.getPhone() ) ) ;

		//--- Test setter/getter for field "fax"  ( type : String )
		// System.out.println(" checking field fax ..." );
		contact.setFax( stringValue ) ;
		Assert.assertTrue( stringValue.equals( contact.getFax() ) ) ;

		//--- Test setter/getter for field "mobilePhone"  ( type : String )
		// System.out.println(" checking field mobilePhone ..." );
		contact.setMobilePhone( stringValue ) ;
		Assert.assertTrue( stringValue.equals( contact.getMobilePhone() ) ) ;

		//--- Test setter/getter for field "address1"  ( type : String )
		// System.out.println(" checking field address1 ..." );
		contact.setAddress1( stringValue ) ;
		Assert.assertTrue( stringValue.equals( contact.getAddress1() ) ) ;

		//--- Test setter/getter for field "address2"  ( type : String )
		// System.out.println(" checking field address2 ..." );
		contact.setAddress2( stringValue ) ;
		Assert.assertTrue( stringValue.equals( contact.getAddress2() ) ) ;

		//--- Test setter/getter for field "city"  ( type : String )
		// System.out.println(" checking field city ..." );
		contact.setCity( stringValue ) ;
		Assert.assertTrue( stringValue.equals( contact.getCity() ) ) ;

		//--- Test setter/getter for field "country"  ( type : String )
		// System.out.println(" checking field country ..." );
		contact.setCountry( stringValue ) ;
		Assert.assertTrue( stringValue.equals( contact.getCountry() ) ) ;

		//--- Test setter/getter for field "email"  ( type : String )
		// System.out.println(" checking field email ..." );
		contact.setEmail( stringValue ) ;
		Assert.assertTrue( stringValue.equals( contact.getEmail() ) ) ;

		//--- Test setter/getter for field "website"  ( type : String )
		// System.out.println(" checking field website ..." );
		contact.setWebsite( stringValue ) ;
		Assert.assertTrue( stringValue.equals( contact.getWebsite() ) ) ;

		//--- Test setter/getter for field "status"  ( type : String )
		// System.out.println(" checking field status ..." );
		contact.setStatus( stringValue ) ;
		Assert.assertTrue( stringValue.equals( contact.getStatus() ) ) ;

		//--- Test setter/getter for field "excCode"  ( type : String )
		// System.out.println(" checking field excCode ..." );
		contact.setExcCode( stringValue ) ;
		Assert.assertTrue( stringValue.equals( contact.getExcCode() ) ) ;

		//--- Test setter/getter for field "note"  ( type : String )
		// System.out.println(" checking field note ..." );
		contact.setNote( stringValue ) ;
		Assert.assertTrue( stringValue.equals( contact.getNote() ) ) ;

		//--- Test setter/getter for field "isActive"  ( type : Boolean )
		// System.out.println(" checking field isActive ..." );
		contact.setIsActive( true ) ;
		Assert.assertTrue( contact.getIsActive() ) ;
		contact.setIsActive( false ) ;
		Assert.assertFalse( contact.getIsActive() ) ;

		//--- Test setter/getter for field "insertBy"  ( type : String )
		// System.out.println(" checking field insertBy ..." );
		contact.setInsertBy( stringValue ) ;
		Assert.assertTrue( stringValue.equals( contact.getInsertBy() ) ) ;

		//--- Test setter/getter for field "insertAt"  ( type : Date )
		// System.out.println(" checking field insertAt ..." );
		contact.setInsertAt( dateValue ) ;
		Assert.assertTrue( dateValue.equals( contact.getInsertAt() ) );

		//--- Test setter/getter for field "updateBy"  ( type : String )
		// System.out.println(" checking field updateBy ..." );
		contact.setUpdateBy( stringValue ) ;
		Assert.assertTrue( stringValue.equals( contact.getUpdateBy() ) ) ;

		//--- Test setter/getter for field "updateAt"  ( type : Date )
		// System.out.println(" checking field updateAt ..." );
		contact.setUpdateAt( dateValue ) ;
		Assert.assertTrue( dateValue.equals( contact.getUpdateAt() ) );

		//--- Test setter/getter for field "sellerId"  ( type : Integer )
		// System.out.println(" checking field sellerId ..." );
		contact.setSellerId( integerValue ) ;
		Assert.assertTrue( integerValue == contact.getSellerId() ) ;

		//--- Test setter/getter for field "categoryId"  ( type : Integer )
		// System.out.println(" checking field categoryId ..." );
		contact.setCategoryId( integerValue ) ;
		Assert.assertTrue( integerValue == contact.getCategoryId() ) ;

		//--- Test setter/getter for field "priceListId"  ( type : Integer )
		// System.out.println(" checking field priceListId ..." );
		contact.setPriceListId( integerValue ) ;
		Assert.assertTrue( integerValue == contact.getPriceListId() ) ;

		//--- Test setter/getter for field "extraField0Id"  ( type : Integer )
		// System.out.println(" checking field extraField0Id ..." );
		contact.setExtraField0Id( integerValue ) ;
		Assert.assertTrue( integerValue == contact.getExtraField0Id() ) ;

		//--- Test setter/getter for field "extraField1Id"  ( type : Integer )
		// System.out.println(" checking field extraField1Id ..." );
		contact.setExtraField1Id( integerValue ) ;
		Assert.assertTrue( integerValue == contact.getExtraField1Id() ) ;

		//--- Test setter/getter for field "extraField2Id"  ( type : Integer )
		// System.out.println(" checking field extraField2Id ..." );
		contact.setExtraField2Id( integerValue ) ;
		Assert.assertTrue( integerValue == contact.getExtraField2Id() ) ;

		//--- Test setter/getter for field "extraField3Id"  ( type : Integer )
		// System.out.println(" checking field extraField3Id ..." );
		contact.setExtraField3Id( integerValue ) ;
		Assert.assertTrue( integerValue == contact.getExtraField3Id() ) ;

		//--- Test setter/getter for field "extraField4Id"  ( type : Integer )
		// System.out.println(" checking field extraField4Id ..." );
		contact.setExtraField4Id( integerValue ) ;
		Assert.assertTrue( integerValue == contact.getExtraField4Id() ) ;

		//--- Test setter/getter for field "extraField5Id"  ( type : Integer )
		// System.out.println(" checking field extraField5Id ..." );
		contact.setExtraField5Id( integerValue ) ;
		Assert.assertTrue( integerValue == contact.getExtraField5Id() ) ;

		//--- Test setter/getter for field "extraField6Id"  ( type : Integer )
		// System.out.println(" checking field extraField6Id ..." );
		contact.setExtraField6Id( integerValue ) ;
		Assert.assertTrue( integerValue == contact.getExtraField6Id() ) ;

		//--- Test setter/getter for field "extraField7Id"  ( type : Integer )
		// System.out.println(" checking field extraField7Id ..." );
		contact.setExtraField7Id( integerValue ) ;
		Assert.assertTrue( integerValue == contact.getExtraField7Id() ) ;

		//--- Test setter/getter for field "extraField8Id"  ( type : Integer )
		// System.out.println(" checking field extraField8Id ..." );
		contact.setExtraField8Id( integerValue ) ;
		Assert.assertTrue( integerValue == contact.getExtraField8Id() ) ;

		//--- Test setter/getter for field "extraField9Id"  ( type : Integer )
		// System.out.println(" checking field extraField9Id ..." );
		contact.setExtraField9Id( integerValue ) ;
		Assert.assertTrue( integerValue == contact.getExtraField9Id() ) ;

		//--- Test setter/getter for field "workspace"  ( type : Integer )
		// System.out.println(" checking field workspace ..." );
		contact.setWorkspace( integerValue ) ;
		Assert.assertTrue( integerValue == contact.getWorkspace() ) ;

		//--- Test setter/getter for field "version"  ( type : Integer )
		// System.out.println(" checking field version ..." );
		contact.setVersion( integerValue ) ;
		Assert.assertTrue( integerValue == contact.getVersion() ) ;

		
	}



}
