/*
 * JUnit test case for bean StockTrans
 * Created on 24 Þub 2016 ( Date ISO 2016-02-24 - Time 15:13:29 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */

package org.demo.test.bean;


import java.math.BigDecimal;

import org.demo.bean.StockTrans ;

import org.junit.Assert;
import org.junit.Test;

/**
 * JUnit test case for bean StockTrans
 * 
 * @author Telosys Tools Generator
 *
 */
public class StockTransTest 
{
	protected static final byte    byteValue    = 1 ;
	protected static final short   shortValue   = 1 ;
	protected static final int     intValue     = 1 ;
	protected static final int     integerValue = 1 ;
	protected static final long    longValue    = 1 ;
	
	protected static final float   floatValue    = 1.234f ;
	protected static final double  doubleValue   = 1.234 ;
	
	protected static final BigDecimal bigdecimalValue = new BigDecimal("12.3456");
	
	protected static final String  stringValue  = "A" ;
	
	protected static final java.util.Date     dateValue         = new java.util.Date();
	protected static final java.sql.Date      sqldateValue      = new java.sql.Date(dateValue.getTime());
	protected static final java.sql.Time      sqltimeValue      = new java.sql.Time(dateValue.getTime());
	protected static final java.sql.Timestamp sqltimestampValue = new java.sql.Timestamp(dateValue.getTime());

	protected static final byte[]  bytesArray  = "ABCD".getBytes() ;

	@Test
	public void testSettersAndGetters() {
		
		System.out.println("Checking class StockTrans getters and setters ..." );
		
		StockTrans stockTrans = new StockTrans();
		
		//--- Test setter/getter for field "id"  ( type : Integer )
		// System.out.println(" checking field id ..." );
		stockTrans.setId( integerValue ) ;
		Assert.assertTrue( integerValue == stockTrans.getId() ) ;

		//--- Test setter/getter for field "receiptNo"  ( type : Integer )
		// System.out.println(" checking field receiptNo ..." );
		stockTrans.setReceiptNo( integerValue ) ;
		Assert.assertTrue( integerValue == stockTrans.getReceiptNo() ) ;

		//--- Test setter/getter for field "right"  ( type : String )
		// System.out.println(" checking field right ..." );
		stockTrans.setRight( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockTrans.getRight() ) ) ;

		//--- Test setter/getter for field "isCompleted"  ( type : Boolean )
		// System.out.println(" checking field isCompleted ..." );
		stockTrans.setIsCompleted( true ) ;
		Assert.assertTrue( stockTrans.getIsCompleted() ) ;
		stockTrans.setIsCompleted( false ) ;
		Assert.assertFalse( stockTrans.getIsCompleted() ) ;

		//--- Test setter/getter for field "transDate"  ( type : Date )
		// System.out.println(" checking field transDate ..." );
		stockTrans.setTransDate( dateValue ) ;
		Assert.assertTrue( dateValue.equals( stockTrans.getTransDate() ) );

		//--- Test setter/getter for field "realDate"  ( type : Date )
		// System.out.println(" checking field realDate ..." );
		stockTrans.setRealDate( dateValue ) ;
		Assert.assertTrue( dateValue.equals( stockTrans.getRealDate() ) );

		//--- Test setter/getter for field "deliveryDate"  ( type : Date )
		// System.out.println(" checking field deliveryDate ..." );
		stockTrans.setDeliveryDate( dateValue ) ;
		Assert.assertTrue( dateValue.equals( stockTrans.getDeliveryDate() ) );

		//--- Test setter/getter for field "transNo"  ( type : String )
		// System.out.println(" checking field transNo ..." );
		stockTrans.setTransNo( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockTrans.getTransNo() ) ) ;

		//--- Test setter/getter for field "isTaxInclude"  ( type : Boolean )
		// System.out.println(" checking field isTaxInclude ..." );
		stockTrans.setIsTaxInclude( true ) ;
		Assert.assertTrue( stockTrans.getIsTaxInclude() ) ;
		stockTrans.setIsTaxInclude( false ) ;
		Assert.assertFalse( stockTrans.getIsTaxInclude() ) ;

		//--- Test setter/getter for field "roundingDigits"  ( type : Boolean )
		// System.out.println(" checking field roundingDigits ..." );
		stockTrans.setRoundingDigits( true ) ;
		Assert.assertTrue( stockTrans.getRoundingDigits() ) ;
		stockTrans.setRoundingDigits( false ) ;
		Assert.assertFalse( stockTrans.getRoundingDigits() ) ;

		//--- Test setter/getter for field "total"  ( type : Double )
		// System.out.println(" checking field total ..." );
		stockTrans.setTotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTrans.getTotal() ) ;

		//--- Test setter/getter for field "discountTotal"  ( type : Double )
		// System.out.println(" checking field discountTotal ..." );
		stockTrans.setDiscountTotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTrans.getDiscountTotal() ) ;

		//--- Test setter/getter for field "subtotal"  ( type : Double )
		// System.out.println(" checking field subtotal ..." );
		stockTrans.setSubtotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTrans.getSubtotal() ) ;

		//--- Test setter/getter for field "roundingDiscount"  ( type : Double )
		// System.out.println(" checking field roundingDiscount ..." );
		stockTrans.setRoundingDiscount( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTrans.getRoundingDiscount() ) ;

		//--- Test setter/getter for field "totalDiscountRate"  ( type : Double )
		// System.out.println(" checking field totalDiscountRate ..." );
		stockTrans.setTotalDiscountRate( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTrans.getTotalDiscountRate() ) ;

		//--- Test setter/getter for field "taxTotal"  ( type : Double )
		// System.out.println(" checking field taxTotal ..." );
		stockTrans.setTaxTotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTrans.getTaxTotal() ) ;

		//--- Test setter/getter for field "netTotal"  ( type : Double )
		// System.out.println(" checking field netTotal ..." );
		stockTrans.setNetTotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTrans.getNetTotal() ) ;

		//--- Test setter/getter for field "plusFactorTotal"  ( type : Double )
		// System.out.println(" checking field plusFactorTotal ..." );
		stockTrans.setPlusFactorTotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTrans.getPlusFactorTotal() ) ;

		//--- Test setter/getter for field "minusFactorTotal"  ( type : Double )
		// System.out.println(" checking field minusFactorTotal ..." );
		stockTrans.setMinusFactorTotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTrans.getMinusFactorTotal() ) ;

		//--- Test setter/getter for field "amount"  ( type : Double )
		// System.out.println(" checking field amount ..." );
		stockTrans.setAmount( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTrans.getAmount() ) ;

		//--- Test setter/getter for field "description"  ( type : String )
		// System.out.println(" checking field description ..." );
		stockTrans.setDescription( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockTrans.getDescription() ) ) ;

		//--- Test setter/getter for field "transYear"  ( type : Integer )
		// System.out.println(" checking field transYear ..." );
		stockTrans.setTransYear( integerValue ) ;
		Assert.assertTrue( integerValue == stockTrans.getTransYear() ) ;

		//--- Test setter/getter for field "transMonth"  ( type : String )
		// System.out.println(" checking field transMonth ..." );
		stockTrans.setTransMonth( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockTrans.getTransMonth() ) ) ;

		//--- Test setter/getter for field "contactId"  ( type : Integer )
		// System.out.println(" checking field contactId ..." );
		stockTrans.setContactId( integerValue ) ;
		Assert.assertTrue( integerValue == stockTrans.getContactId() ) ;

		//--- Test setter/getter for field "contactName"  ( type : String )
		// System.out.println(" checking field contactName ..." );
		stockTrans.setContactName( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockTrans.getContactName() ) ) ;

		//--- Test setter/getter for field "contactTaxOffice"  ( type : String )
		// System.out.println(" checking field contactTaxOffice ..." );
		stockTrans.setContactTaxOffice( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockTrans.getContactTaxOffice() ) ) ;

		//--- Test setter/getter for field "contactTaxNumber"  ( type : String )
		// System.out.println(" checking field contactTaxNumber ..." );
		stockTrans.setContactTaxNumber( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockTrans.getContactTaxNumber() ) ) ;

		//--- Test setter/getter for field "contactAddress1"  ( type : String )
		// System.out.println(" checking field contactAddress1 ..." );
		stockTrans.setContactAddress1( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockTrans.getContactAddress1() ) ) ;

		//--- Test setter/getter for field "contactAddress2"  ( type : String )
		// System.out.println(" checking field contactAddress2 ..." );
		stockTrans.setContactAddress2( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockTrans.getContactAddress2() ) ) ;

		//--- Test setter/getter for field "consigner"  ( type : String )
		// System.out.println(" checking field consigner ..." );
		stockTrans.setConsigner( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockTrans.getConsigner() ) ) ;

		//--- Test setter/getter for field "recepient"  ( type : String )
		// System.out.println(" checking field recepient ..." );
		stockTrans.setRecepient( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockTrans.getRecepient() ) ) ;

		//--- Test setter/getter for field "transType"  ( type : String )
		// System.out.println(" checking field transType ..." );
		stockTrans.setTransType( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockTrans.getTransType() ) ) ;

		//--- Test setter/getter for field "excCode"  ( type : String )
		// System.out.println(" checking field excCode ..." );
		stockTrans.setExcCode( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockTrans.getExcCode() ) ) ;

		//--- Test setter/getter for field "excRate"  ( type : Double )
		// System.out.println(" checking field excRate ..." );
		stockTrans.setExcRate( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTrans.getExcRate() ) ;

		//--- Test setter/getter for field "excEquivalent"  ( type : Double )
		// System.out.println(" checking field excEquivalent ..." );
		stockTrans.setExcEquivalent( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTrans.getExcEquivalent() ) ;

		//--- Test setter/getter for field "insertBy"  ( type : String )
		// System.out.println(" checking field insertBy ..." );
		stockTrans.setInsertBy( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockTrans.getInsertBy() ) ) ;

		//--- Test setter/getter for field "insertAt"  ( type : Date )
		// System.out.println(" checking field insertAt ..." );
		stockTrans.setInsertAt( dateValue ) ;
		Assert.assertTrue( dateValue.equals( stockTrans.getInsertAt() ) );

		//--- Test setter/getter for field "updateBy"  ( type : String )
		// System.out.println(" checking field updateBy ..." );
		stockTrans.setUpdateBy( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockTrans.getUpdateBy() ) ) ;

		//--- Test setter/getter for field "updateAt"  ( type : Date )
		// System.out.println(" checking field updateAt ..." );
		stockTrans.setUpdateAt( dateValue ) ;
		Assert.assertTrue( dateValue.equals( stockTrans.getUpdateAt() ) );

		//--- Test setter/getter for field "contactTransId"  ( type : Integer )
		// System.out.println(" checking field contactTransId ..." );
		stockTrans.setContactTransId( integerValue ) ;
		Assert.assertTrue( integerValue == stockTrans.getContactTransId() ) ;

		//--- Test setter/getter for field "sellerId"  ( type : Integer )
		// System.out.println(" checking field sellerId ..." );
		stockTrans.setSellerId( integerValue ) ;
		Assert.assertTrue( integerValue == stockTrans.getSellerId() ) ;

		//--- Test setter/getter for field "transSourceId"  ( type : Integer )
		// System.out.println(" checking field transSourceId ..." );
		stockTrans.setTransSourceId( integerValue ) ;
		Assert.assertTrue( integerValue == stockTrans.getTransSourceId() ) ;

		//--- Test setter/getter for field "transPointId"  ( type : Integer )
		// System.out.println(" checking field transPointId ..." );
		stockTrans.setTransPointId( integerValue ) ;
		Assert.assertTrue( integerValue == stockTrans.getTransPointId() ) ;

		//--- Test setter/getter for field "privateCodeId"  ( type : Integer )
		// System.out.println(" checking field privateCodeId ..." );
		stockTrans.setPrivateCodeId( integerValue ) ;
		Assert.assertTrue( integerValue == stockTrans.getPrivateCodeId() ) ;

		//--- Test setter/getter for field "depotId"  ( type : Integer )
		// System.out.println(" checking field depotId ..." );
		stockTrans.setDepotId( integerValue ) ;
		Assert.assertTrue( integerValue == stockTrans.getDepotId() ) ;

		//--- Test setter/getter for field "refDepotId"  ( type : Integer )
		// System.out.println(" checking field refDepotId ..." );
		stockTrans.setRefDepotId( integerValue ) ;
		Assert.assertTrue( integerValue == stockTrans.getRefDepotId() ) ;

		//--- Test setter/getter for field "refModule"  ( type : String )
		// System.out.println(" checking field refModule ..." );
		stockTrans.setRefModule( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockTrans.getRefModule() ) ) ;

		//--- Test setter/getter for field "refId"  ( type : Integer )
		// System.out.println(" checking field refId ..." );
		stockTrans.setRefId( integerValue ) ;
		Assert.assertTrue( integerValue == stockTrans.getRefId() ) ;

		//--- Test setter/getter for field "workspace"  ( type : Integer )
		// System.out.println(" checking field workspace ..." );
		stockTrans.setWorkspace( integerValue ) ;
		Assert.assertTrue( integerValue == stockTrans.getWorkspace() ) ;

		//--- Test setter/getter for field "version"  ( type : Integer )
		// System.out.println(" checking field version ..." );
		stockTrans.setVersion( integerValue ) ;
		Assert.assertTrue( integerValue == stockTrans.getVersion() ) ;

		
	}



}
