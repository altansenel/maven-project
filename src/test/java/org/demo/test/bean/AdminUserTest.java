/*
 * JUnit test case for bean AdminUser
 * Created on 24 Þub 2016 ( Date ISO 2016-02-24 - Time 15:13:24 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */

package org.demo.test.bean;


import java.math.BigDecimal;

import org.demo.bean.AdminUser ;

import org.junit.Assert;
import org.junit.Test;

/**
 * JUnit test case for bean AdminUser
 * 
 * @author Telosys Tools Generator
 *
 */
public class AdminUserTest 
{
	protected static final byte    byteValue    = 1 ;
	protected static final short   shortValue   = 1 ;
	protected static final int     intValue     = 1 ;
	protected static final int     integerValue = 1 ;
	protected static final long    longValue    = 1 ;
	
	protected static final float   floatValue    = 1.234f ;
	protected static final double  doubleValue   = 1.234 ;
	
	protected static final BigDecimal bigdecimalValue = new BigDecimal("12.3456");
	
	protected static final String  stringValue  = "A" ;
	
	protected static final java.util.Date     dateValue         = new java.util.Date();
	protected static final java.sql.Date      sqldateValue      = new java.sql.Date(dateValue.getTime());
	protected static final java.sql.Time      sqltimeValue      = new java.sql.Time(dateValue.getTime());
	protected static final java.sql.Timestamp sqltimestampValue = new java.sql.Timestamp(dateValue.getTime());

	protected static final byte[]  bytesArray  = "ABCD".getBytes() ;

	@Test
	public void testSettersAndGetters() {
		
		System.out.println("Checking class AdminUser getters and setters ..." );
		
		AdminUser adminUser = new AdminUser();
		
		//--- Test setter/getter for field "id"  ( type : Integer )
		// System.out.println(" checking field id ..." );
		adminUser.setId( integerValue ) ;
		Assert.assertTrue( integerValue == adminUser.getId() ) ;

		//--- Test setter/getter for field "username"  ( type : String )
		// System.out.println(" checking field username ..." );
		adminUser.setUsername( stringValue ) ;
		Assert.assertTrue( stringValue.equals( adminUser.getUsername() ) ) ;

		//--- Test setter/getter for field "title"  ( type : String )
		// System.out.println(" checking field title ..." );
		adminUser.setTitle( stringValue ) ;
		Assert.assertTrue( stringValue.equals( adminUser.getTitle() ) ) ;

		//--- Test setter/getter for field "email"  ( type : String )
		// System.out.println(" checking field email ..." );
		adminUser.setEmail( stringValue ) ;
		Assert.assertTrue( stringValue.equals( adminUser.getEmail() ) ) ;

		//--- Test setter/getter for field "authToken"  ( type : String )
		// System.out.println(" checking field authToken ..." );
		adminUser.setAuthToken( stringValue ) ;
		Assert.assertTrue( stringValue.equals( adminUser.getAuthToken() ) ) ;

		//--- Test setter/getter for field "passwordHash"  ( type : String )
		// System.out.println(" checking field passwordHash ..." );
		adminUser.setPasswordHash( stringValue ) ;
		Assert.assertTrue( stringValue.equals( adminUser.getPasswordHash() ) ) ;

		//--- Test setter/getter for field "isAdmin"  ( type : Boolean )
		// System.out.println(" checking field isAdmin ..." );
		adminUser.setIsAdmin( true ) ;
		Assert.assertTrue( adminUser.getIsAdmin() ) ;
		adminUser.setIsAdmin( false ) ;
		Assert.assertFalse( adminUser.getIsAdmin() ) ;

		//--- Test setter/getter for field "isActive"  ( type : Boolean )
		// System.out.println(" checking field isActive ..." );
		adminUser.setIsActive( true ) ;
		Assert.assertTrue( adminUser.getIsActive() ) ;
		adminUser.setIsActive( false ) ;
		Assert.assertFalse( adminUser.getIsActive() ) ;

		//--- Test setter/getter for field "profile"  ( type : String )
		// System.out.println(" checking field profile ..." );
		adminUser.setProfile( stringValue ) ;
		Assert.assertTrue( stringValue.equals( adminUser.getProfile() ) ) ;

		//--- Test setter/getter for field "workspace"  ( type : Integer )
		// System.out.println(" checking field workspace ..." );
		adminUser.setWorkspace( integerValue ) ;
		Assert.assertTrue( integerValue == adminUser.getWorkspace() ) ;

		//--- Test setter/getter for field "userGroupId"  ( type : Integer )
		// System.out.println(" checking field userGroupId ..." );
		adminUser.setUserGroupId( integerValue ) ;
		Assert.assertTrue( integerValue == adminUser.getUserGroupId() ) ;

		//--- Test setter/getter for field "version"  ( type : Integer )
		// System.out.println(" checking field version ..." );
		adminUser.setVersion( integerValue ) ;
		Assert.assertTrue( integerValue == adminUser.getVersion() ) ;

		
	}



}
