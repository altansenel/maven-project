/*
 * JUnit test case for bean StockTransDetail
 * Created on 24 Þub 2016 ( Date ISO 2016-02-24 - Time 15:13:29 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */

package org.demo.test.bean;


import java.math.BigDecimal;

import org.demo.bean.StockTransDetail ;

import org.junit.Assert;
import org.junit.Test;

/**
 * JUnit test case for bean StockTransDetail
 * 
 * @author Telosys Tools Generator
 *
 */
public class StockTransDetailTest 
{
	protected static final byte    byteValue    = 1 ;
	protected static final short   shortValue   = 1 ;
	protected static final int     intValue     = 1 ;
	protected static final int     integerValue = 1 ;
	protected static final long    longValue    = 1 ;
	
	protected static final float   floatValue    = 1.234f ;
	protected static final double  doubleValue   = 1.234 ;
	
	protected static final BigDecimal bigdecimalValue = new BigDecimal("12.3456");
	
	protected static final String  stringValue  = "A" ;
	
	protected static final java.util.Date     dateValue         = new java.util.Date();
	protected static final java.sql.Date      sqldateValue      = new java.sql.Date(dateValue.getTime());
	protected static final java.sql.Time      sqltimeValue      = new java.sql.Time(dateValue.getTime());
	protected static final java.sql.Timestamp sqltimestampValue = new java.sql.Timestamp(dateValue.getTime());

	protected static final byte[]  bytesArray  = "ABCD".getBytes() ;

	@Test
	public void testSettersAndGetters() {
		
		System.out.println("Checking class StockTransDetail getters and setters ..." );
		
		StockTransDetail stockTransDetail = new StockTransDetail();
		
		//--- Test setter/getter for field "id"  ( type : Integer )
		// System.out.println(" checking field id ..." );
		stockTransDetail.setId( integerValue ) ;
		Assert.assertTrue( integerValue == stockTransDetail.getId() ) ;

		//--- Test setter/getter for field "receiptNo"  ( type : Integer )
		// System.out.println(" checking field receiptNo ..." );
		stockTransDetail.setReceiptNo( integerValue ) ;
		Assert.assertTrue( integerValue == stockTransDetail.getReceiptNo() ) ;

		//--- Test setter/getter for field "right"  ( type : String )
		// System.out.println(" checking field right ..." );
		stockTransDetail.setRight( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockTransDetail.getRight() ) ) ;

		//--- Test setter/getter for field "transDate"  ( type : Date )
		// System.out.println(" checking field transDate ..." );
		stockTransDetail.setTransDate( dateValue ) ;
		Assert.assertTrue( dateValue.equals( stockTransDetail.getTransDate() ) );

		//--- Test setter/getter for field "deliveryDate"  ( type : Date )
		// System.out.println(" checking field deliveryDate ..." );
		stockTransDetail.setDeliveryDate( dateValue ) ;
		Assert.assertTrue( dateValue.equals( stockTransDetail.getDeliveryDate() ) );

		//--- Test setter/getter for field "transType"  ( type : String )
		// System.out.println(" checking field transType ..." );
		stockTransDetail.setTransType( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockTransDetail.getTransType() ) ) ;

		//--- Test setter/getter for field "rowNo"  ( type : Integer )
		// System.out.println(" checking field rowNo ..." );
		stockTransDetail.setRowNo( integerValue ) ;
		Assert.assertTrue( integerValue == stockTransDetail.getRowNo() ) ;

		//--- Test setter/getter for field "stockId"  ( type : Integer )
		// System.out.println(" checking field stockId ..." );
		stockTransDetail.setStockId( integerValue ) ;
		Assert.assertTrue( integerValue == stockTransDetail.getStockId() ) ;

		//--- Test setter/getter for field "name"  ( type : String )
		// System.out.println(" checking field name ..." );
		stockTransDetail.setName( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockTransDetail.getName() ) ) ;

		//--- Test setter/getter for field "quantity"  ( type : Double )
		// System.out.println(" checking field quantity ..." );
		stockTransDetail.setQuantity( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getQuantity() ) ;

		//--- Test setter/getter for field "unit"  ( type : String )
		// System.out.println(" checking field unit ..." );
		stockTransDetail.setUnit( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockTransDetail.getUnit() ) ) ;

		//--- Test setter/getter for field "unitRatio"  ( type : Double )
		// System.out.println(" checking field unitRatio ..." );
		stockTransDetail.setUnitRatio( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getUnitRatio() ) ;

		//--- Test setter/getter for field "basePrice"  ( type : Double )
		// System.out.println(" checking field basePrice ..." );
		stockTransDetail.setBasePrice( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getBasePrice() ) ;

		//--- Test setter/getter for field "price"  ( type : Double )
		// System.out.println(" checking field price ..." );
		stockTransDetail.setPrice( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getPrice() ) ;

		//--- Test setter/getter for field "taxRate"  ( type : Double )
		// System.out.println(" checking field taxRate ..." );
		stockTransDetail.setTaxRate( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getTaxRate() ) ;

		//--- Test setter/getter for field "taxRate2"  ( type : Double )
		// System.out.println(" checking field taxRate2 ..." );
		stockTransDetail.setTaxRate2( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getTaxRate2() ) ;

		//--- Test setter/getter for field "taxRate3"  ( type : Double )
		// System.out.println(" checking field taxRate3 ..." );
		stockTransDetail.setTaxRate3( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getTaxRate3() ) ;

		//--- Test setter/getter for field "discountRate1"  ( type : Double )
		// System.out.println(" checking field discountRate1 ..." );
		stockTransDetail.setDiscountRate1( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getDiscountRate1() ) ;

		//--- Test setter/getter for field "discountRate2"  ( type : Double )
		// System.out.println(" checking field discountRate2 ..." );
		stockTransDetail.setDiscountRate2( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getDiscountRate2() ) ;

		//--- Test setter/getter for field "discountRate3"  ( type : Double )
		// System.out.println(" checking field discountRate3 ..." );
		stockTransDetail.setDiscountRate3( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getDiscountRate3() ) ;

		//--- Test setter/getter for field "amount"  ( type : Double )
		// System.out.println(" checking field amount ..." );
		stockTransDetail.setAmount( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getAmount() ) ;

		//--- Test setter/getter for field "taxAmount"  ( type : Double )
		// System.out.println(" checking field taxAmount ..." );
		stockTransDetail.setTaxAmount( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getTaxAmount() ) ;

		//--- Test setter/getter for field "discountAmount"  ( type : Double )
		// System.out.println(" checking field discountAmount ..." );
		stockTransDetail.setDiscountAmount( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getDiscountAmount() ) ;

		//--- Test setter/getter for field "total"  ( type : Double )
		// System.out.println(" checking field total ..." );
		stockTransDetail.setTotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getTotal() ) ;

		//--- Test setter/getter for field "description"  ( type : String )
		// System.out.println(" checking field description ..." );
		stockTransDetail.setDescription( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockTransDetail.getDescription() ) ) ;

		//--- Test setter/getter for field "transYear"  ( type : Integer )
		// System.out.println(" checking field transYear ..." );
		stockTransDetail.setTransYear( integerValue ) ;
		Assert.assertTrue( integerValue == stockTransDetail.getTransYear() ) ;

		//--- Test setter/getter for field "transMonth"  ( type : String )
		// System.out.println(" checking field transMonth ..." );
		stockTransDetail.setTransMonth( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockTransDetail.getTransMonth() ) ) ;

		//--- Test setter/getter for field "unit1"  ( type : String )
		// System.out.println(" checking field unit1 ..." );
		stockTransDetail.setUnit1( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockTransDetail.getUnit1() ) ) ;

		//--- Test setter/getter for field "unit2"  ( type : String )
		// System.out.println(" checking field unit2 ..." );
		stockTransDetail.setUnit2( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockTransDetail.getUnit2() ) ) ;

		//--- Test setter/getter for field "unit3"  ( type : String )
		// System.out.println(" checking field unit3 ..." );
		stockTransDetail.setUnit3( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockTransDetail.getUnit3() ) ) ;

		//--- Test setter/getter for field "unit2ratio"  ( type : Double )
		// System.out.println(" checking field unit2ratio ..." );
		stockTransDetail.setUnit2ratio( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getUnit2ratio() ) ;

		//--- Test setter/getter for field "unit3ratio"  ( type : Double )
		// System.out.println(" checking field unit3ratio ..." );
		stockTransDetail.setUnit3ratio( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getUnit3ratio() ) ;

		//--- Test setter/getter for field "excCode"  ( type : String )
		// System.out.println(" checking field excCode ..." );
		stockTransDetail.setExcCode( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockTransDetail.getExcCode() ) ) ;

		//--- Test setter/getter for field "excRate"  ( type : Double )
		// System.out.println(" checking field excRate ..." );
		stockTransDetail.setExcRate( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getExcRate() ) ;

		//--- Test setter/getter for field "excEquivalent"  ( type : Double )
		// System.out.println(" checking field excEquivalent ..." );
		stockTransDetail.setExcEquivalent( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getExcEquivalent() ) ;

		//--- Test setter/getter for field "plusFactorAmount"  ( type : Double )
		// System.out.println(" checking field plusFactorAmount ..." );
		stockTransDetail.setPlusFactorAmount( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getPlusFactorAmount() ) ;

		//--- Test setter/getter for field "minusFactorAmount"  ( type : Double )
		// System.out.println(" checking field minusFactorAmount ..." );
		stockTransDetail.setMinusFactorAmount( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getMinusFactorAmount() ) ;

		//--- Test setter/getter for field "serialNo"  ( type : String )
		// System.out.println(" checking field serialNo ..." );
		stockTransDetail.setSerialNo( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockTransDetail.getSerialNo() ) ) ;

		//--- Test setter/getter for field "input"  ( type : Double )
		// System.out.println(" checking field input ..." );
		stockTransDetail.setInput( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getInput() ) ;

		//--- Test setter/getter for field "output"  ( type : Double )
		// System.out.println(" checking field output ..." );
		stockTransDetail.setOutput( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getOutput() ) ;

		//--- Test setter/getter for field "inTotal"  ( type : Double )
		// System.out.println(" checking field inTotal ..." );
		stockTransDetail.setInTotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getInTotal() ) ;

		//--- Test setter/getter for field "outTotal"  ( type : Double )
		// System.out.println(" checking field outTotal ..." );
		stockTransDetail.setOutTotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getOutTotal() ) ;

		//--- Test setter/getter for field "isReturn"  ( type : Boolean )
		// System.out.println(" checking field isReturn ..." );
		stockTransDetail.setIsReturn( true ) ;
		Assert.assertTrue( stockTransDetail.getIsReturn() ) ;
		stockTransDetail.setIsReturn( false ) ;
		Assert.assertFalse( stockTransDetail.getIsReturn() ) ;

		//--- Test setter/getter for field "retInput"  ( type : Double )
		// System.out.println(" checking field retInput ..." );
		stockTransDetail.setRetInput( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getRetInput() ) ;

		//--- Test setter/getter for field "retOutput"  ( type : Double )
		// System.out.println(" checking field retOutput ..." );
		stockTransDetail.setRetOutput( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getRetOutput() ) ;

		//--- Test setter/getter for field "retInTotal"  ( type : Double )
		// System.out.println(" checking field retInTotal ..." );
		stockTransDetail.setRetInTotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getRetInTotal() ) ;

		//--- Test setter/getter for field "retOutTotal"  ( type : Double )
		// System.out.println(" checking field retOutTotal ..." );
		stockTransDetail.setRetOutTotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getRetOutTotal() ) ;

		//--- Test setter/getter for field "netInput"  ( type : Double )
		// System.out.println(" checking field netInput ..." );
		stockTransDetail.setNetInput( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getNetInput() ) ;

		//--- Test setter/getter for field "netOutput"  ( type : Double )
		// System.out.println(" checking field netOutput ..." );
		stockTransDetail.setNetOutput( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getNetOutput() ) ;

		//--- Test setter/getter for field "netInTotal"  ( type : Double )
		// System.out.println(" checking field netInTotal ..." );
		stockTransDetail.setNetInTotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getNetInTotal() ) ;

		//--- Test setter/getter for field "netOutTotal"  ( type : Double )
		// System.out.println(" checking field netOutTotal ..." );
		stockTransDetail.setNetOutTotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockTransDetail.getNetOutTotal() ) ;

		//--- Test setter/getter for field "hasCostEffect"  ( type : Boolean )
		// System.out.println(" checking field hasCostEffect ..." );
		stockTransDetail.setHasCostEffect( true ) ;
		Assert.assertTrue( stockTransDetail.getHasCostEffect() ) ;
		stockTransDetail.setHasCostEffect( false ) ;
		Assert.assertFalse( stockTransDetail.getHasCostEffect() ) ;

		//--- Test setter/getter for field "transId"  ( type : Integer )
		// System.out.println(" checking field transId ..." );
		stockTransDetail.setTransId( integerValue ) ;
		Assert.assertTrue( integerValue == stockTransDetail.getTransId() ) ;

		//--- Test setter/getter for field "depotId"  ( type : Integer )
		// System.out.println(" checking field depotId ..." );
		stockTransDetail.setDepotId( integerValue ) ;
		Assert.assertTrue( integerValue == stockTransDetail.getDepotId() ) ;

		//--- Test setter/getter for field "contactId"  ( type : Integer )
		// System.out.println(" checking field contactId ..." );
		stockTransDetail.setContactId( integerValue ) ;
		Assert.assertTrue( integerValue == stockTransDetail.getContactId() ) ;

		//--- Test setter/getter for field "sellerId"  ( type : Integer )
		// System.out.println(" checking field sellerId ..." );
		stockTransDetail.setSellerId( integerValue ) ;
		Assert.assertTrue( integerValue == stockTransDetail.getSellerId() ) ;

		//--- Test setter/getter for field "transSourceId"  ( type : Integer )
		// System.out.println(" checking field transSourceId ..." );
		stockTransDetail.setTransSourceId( integerValue ) ;
		Assert.assertTrue( integerValue == stockTransDetail.getTransSourceId() ) ;

		//--- Test setter/getter for field "transPointId"  ( type : Integer )
		// System.out.println(" checking field transPointId ..." );
		stockTransDetail.setTransPointId( integerValue ) ;
		Assert.assertTrue( integerValue == stockTransDetail.getTransPointId() ) ;

		//--- Test setter/getter for field "privateCodeId"  ( type : Integer )
		// System.out.println(" checking field privateCodeId ..." );
		stockTransDetail.setPrivateCodeId( integerValue ) ;
		Assert.assertTrue( integerValue == stockTransDetail.getPrivateCodeId() ) ;

		//--- Test setter/getter for field "workspace"  ( type : Integer )
		// System.out.println(" checking field workspace ..." );
		stockTransDetail.setWorkspace( integerValue ) ;
		Assert.assertTrue( integerValue == stockTransDetail.getWorkspace() ) ;

		
	}



}
