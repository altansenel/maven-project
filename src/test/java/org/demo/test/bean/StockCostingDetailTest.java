/*
 * JUnit test case for bean StockCostingDetail
 * Created on 24 Þub 2016 ( Date ISO 2016-02-24 - Time 15:13:29 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */

package org.demo.test.bean;


import java.math.BigDecimal;

import org.demo.bean.StockCostingDetail ;

import org.junit.Assert;
import org.junit.Test;

/**
 * JUnit test case for bean StockCostingDetail
 * 
 * @author Telosys Tools Generator
 *
 */
public class StockCostingDetailTest 
{
	protected static final byte    byteValue    = 1 ;
	protected static final short   shortValue   = 1 ;
	protected static final int     intValue     = 1 ;
	protected static final int     integerValue = 1 ;
	protected static final long    longValue    = 1 ;
	
	protected static final float   floatValue    = 1.234f ;
	protected static final double  doubleValue   = 1.234 ;
	
	protected static final BigDecimal bigdecimalValue = new BigDecimal("12.3456");
	
	protected static final String  stringValue  = "A" ;
	
	protected static final java.util.Date     dateValue         = new java.util.Date();
	protected static final java.sql.Date      sqldateValue      = new java.sql.Date(dateValue.getTime());
	protected static final java.sql.Time      sqltimeValue      = new java.sql.Time(dateValue.getTime());
	protected static final java.sql.Timestamp sqltimestampValue = new java.sql.Timestamp(dateValue.getTime());

	protected static final byte[]  bytesArray  = "ABCD".getBytes() ;

	@Test
	public void testSettersAndGetters() {
		
		System.out.println("Checking class StockCostingDetail getters and setters ..." );
		
		StockCostingDetail stockCostingDetail = new StockCostingDetail();
		
		//--- Test setter/getter for field "id"  ( type : Integer )
		// System.out.println(" checking field id ..." );
		stockCostingDetail.setId( integerValue ) ;
		Assert.assertTrue( integerValue == stockCostingDetail.getId() ) ;

		//--- Test setter/getter for field "sellDate"  ( type : Date )
		// System.out.println(" checking field sellDate ..." );
		stockCostingDetail.setSellDate( dateValue ) ;
		Assert.assertTrue( dateValue.equals( stockCostingDetail.getSellDate() ) );

		//--- Test setter/getter for field "sellQuantity"  ( type : Double )
		// System.out.println(" checking field sellQuantity ..." );
		stockCostingDetail.setSellQuantity( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockCostingDetail.getSellQuantity() ) ;

		//--- Test setter/getter for field "sellCostPrice"  ( type : Double )
		// System.out.println(" checking field sellCostPrice ..." );
		stockCostingDetail.setSellCostPrice( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockCostingDetail.getSellCostPrice() ) ;

		//--- Test setter/getter for field "sellCostAmount"  ( type : Double )
		// System.out.println(" checking field sellCostAmount ..." );
		stockCostingDetail.setSellCostAmount( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockCostingDetail.getSellCostAmount() ) ;

		//--- Test setter/getter for field "buyCostPrice"  ( type : Double )
		// System.out.println(" checking field buyCostPrice ..." );
		stockCostingDetail.setBuyCostPrice( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockCostingDetail.getBuyCostPrice() ) ;

		//--- Test setter/getter for field "buyCostAmount"  ( type : Double )
		// System.out.println(" checking field buyCostAmount ..." );
		stockCostingDetail.setBuyCostAmount( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockCostingDetail.getBuyCostAmount() ) ;

		//--- Test setter/getter for field "profitLossAmount"  ( type : Double )
		// System.out.println(" checking field profitLossAmount ..." );
		stockCostingDetail.setProfitLossAmount( doubleValue ) ;
		Assert.assertTrue( doubleValue == stockCostingDetail.getProfitLossAmount() ) ;

		//--- Test setter/getter for field "transYear"  ( type : Integer )
		// System.out.println(" checking field transYear ..." );
		stockCostingDetail.setTransYear( integerValue ) ;
		Assert.assertTrue( integerValue == stockCostingDetail.getTransYear() ) ;

		//--- Test setter/getter for field "transMonth"  ( type : String )
		// System.out.println(" checking field transMonth ..." );
		stockCostingDetail.setTransMonth( stringValue ) ;
		Assert.assertTrue( stringValue.equals( stockCostingDetail.getTransMonth() ) ) ;

		//--- Test setter/getter for field "costingId"  ( type : Integer )
		// System.out.println(" checking field costingId ..." );
		stockCostingDetail.setCostingId( integerValue ) ;
		Assert.assertTrue( integerValue == stockCostingDetail.getCostingId() ) ;

		//--- Test setter/getter for field "stockId"  ( type : Integer )
		// System.out.println(" checking field stockId ..." );
		stockCostingDetail.setStockId( integerValue ) ;
		Assert.assertTrue( integerValue == stockCostingDetail.getStockId() ) ;

		
	}



}
