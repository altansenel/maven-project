/*
 * JUnit test case for bean OrderTrans
 * Created on 24 Þub 2016 ( Date ISO 2016-02-24 - Time 15:13:27 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */

package org.demo.test.bean;


import java.math.BigDecimal;

import org.demo.bean.OrderTrans ;

import org.junit.Assert;
import org.junit.Test;

/**
 * JUnit test case for bean OrderTrans
 * 
 * @author Telosys Tools Generator
 *
 */
public class OrderTransTest 
{
	protected static final byte    byteValue    = 1 ;
	protected static final short   shortValue   = 1 ;
	protected static final int     intValue     = 1 ;
	protected static final int     integerValue = 1 ;
	protected static final long    longValue    = 1 ;
	
	protected static final float   floatValue    = 1.234f ;
	protected static final double  doubleValue   = 1.234 ;
	
	protected static final BigDecimal bigdecimalValue = new BigDecimal("12.3456");
	
	protected static final String  stringValue  = "A" ;
	
	protected static final java.util.Date     dateValue         = new java.util.Date();
	protected static final java.sql.Date      sqldateValue      = new java.sql.Date(dateValue.getTime());
	protected static final java.sql.Time      sqltimeValue      = new java.sql.Time(dateValue.getTime());
	protected static final java.sql.Timestamp sqltimestampValue = new java.sql.Timestamp(dateValue.getTime());

	protected static final byte[]  bytesArray  = "ABCD".getBytes() ;

	@Test
	public void testSettersAndGetters() {
		
		System.out.println("Checking class OrderTrans getters and setters ..." );
		
		OrderTrans orderTrans = new OrderTrans();
		
		//--- Test setter/getter for field "id"  ( type : Integer )
		// System.out.println(" checking field id ..." );
		orderTrans.setId( integerValue ) ;
		Assert.assertTrue( integerValue == orderTrans.getId() ) ;

		//--- Test setter/getter for field "receiptNo"  ( type : Integer )
		// System.out.println(" checking field receiptNo ..." );
		orderTrans.setReceiptNo( integerValue ) ;
		Assert.assertTrue( integerValue == orderTrans.getReceiptNo() ) ;

		//--- Test setter/getter for field "right"  ( type : String )
		// System.out.println(" checking field right ..." );
		orderTrans.setRight( stringValue ) ;
		Assert.assertTrue( stringValue.equals( orderTrans.getRight() ) ) ;

		//--- Test setter/getter for field "isCompleted"  ( type : Boolean )
		// System.out.println(" checking field isCompleted ..." );
		orderTrans.setIsCompleted( true ) ;
		Assert.assertTrue( orderTrans.getIsCompleted() ) ;
		orderTrans.setIsCompleted( false ) ;
		Assert.assertFalse( orderTrans.getIsCompleted() ) ;

		//--- Test setter/getter for field "transDate"  ( type : Date )
		// System.out.println(" checking field transDate ..." );
		orderTrans.setTransDate( dateValue ) ;
		Assert.assertTrue( dateValue.equals( orderTrans.getTransDate() ) );

		//--- Test setter/getter for field "realDate"  ( type : Date )
		// System.out.println(" checking field realDate ..." );
		orderTrans.setRealDate( dateValue ) ;
		Assert.assertTrue( dateValue.equals( orderTrans.getRealDate() ) );

		//--- Test setter/getter for field "deliveryDate"  ( type : Date )
		// System.out.println(" checking field deliveryDate ..." );
		orderTrans.setDeliveryDate( dateValue ) ;
		Assert.assertTrue( dateValue.equals( orderTrans.getDeliveryDate() ) );

		//--- Test setter/getter for field "transNo"  ( type : String )
		// System.out.println(" checking field transNo ..." );
		orderTrans.setTransNo( stringValue ) ;
		Assert.assertTrue( stringValue.equals( orderTrans.getTransNo() ) ) ;

		//--- Test setter/getter for field "isTaxInclude"  ( type : Boolean )
		// System.out.println(" checking field isTaxInclude ..." );
		orderTrans.setIsTaxInclude( true ) ;
		Assert.assertTrue( orderTrans.getIsTaxInclude() ) ;
		orderTrans.setIsTaxInclude( false ) ;
		Assert.assertFalse( orderTrans.getIsTaxInclude() ) ;

		//--- Test setter/getter for field "roundingDigits"  ( type : Boolean )
		// System.out.println(" checking field roundingDigits ..." );
		orderTrans.setRoundingDigits( true ) ;
		Assert.assertTrue( orderTrans.getRoundingDigits() ) ;
		orderTrans.setRoundingDigits( false ) ;
		Assert.assertFalse( orderTrans.getRoundingDigits() ) ;

		//--- Test setter/getter for field "total"  ( type : Double )
		// System.out.println(" checking field total ..." );
		orderTrans.setTotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == orderTrans.getTotal() ) ;

		//--- Test setter/getter for field "discountTotal"  ( type : Double )
		// System.out.println(" checking field discountTotal ..." );
		orderTrans.setDiscountTotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == orderTrans.getDiscountTotal() ) ;

		//--- Test setter/getter for field "subtotal"  ( type : Double )
		// System.out.println(" checking field subtotal ..." );
		orderTrans.setSubtotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == orderTrans.getSubtotal() ) ;

		//--- Test setter/getter for field "roundingDiscount"  ( type : Double )
		// System.out.println(" checking field roundingDiscount ..." );
		orderTrans.setRoundingDiscount( doubleValue ) ;
		Assert.assertTrue( doubleValue == orderTrans.getRoundingDiscount() ) ;

		//--- Test setter/getter for field "totalDiscountRate"  ( type : Double )
		// System.out.println(" checking field totalDiscountRate ..." );
		orderTrans.setTotalDiscountRate( doubleValue ) ;
		Assert.assertTrue( doubleValue == orderTrans.getTotalDiscountRate() ) ;

		//--- Test setter/getter for field "taxTotal"  ( type : Double )
		// System.out.println(" checking field taxTotal ..." );
		orderTrans.setTaxTotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == orderTrans.getTaxTotal() ) ;

		//--- Test setter/getter for field "netTotal"  ( type : Double )
		// System.out.println(" checking field netTotal ..." );
		orderTrans.setNetTotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == orderTrans.getNetTotal() ) ;

		//--- Test setter/getter for field "plusFactorTotal"  ( type : Double )
		// System.out.println(" checking field plusFactorTotal ..." );
		orderTrans.setPlusFactorTotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == orderTrans.getPlusFactorTotal() ) ;

		//--- Test setter/getter for field "minusFactorTotal"  ( type : Double )
		// System.out.println(" checking field minusFactorTotal ..." );
		orderTrans.setMinusFactorTotal( doubleValue ) ;
		Assert.assertTrue( doubleValue == orderTrans.getMinusFactorTotal() ) ;

		//--- Test setter/getter for field "description"  ( type : String )
		// System.out.println(" checking field description ..." );
		orderTrans.setDescription( stringValue ) ;
		Assert.assertTrue( stringValue.equals( orderTrans.getDescription() ) ) ;

		//--- Test setter/getter for field "transYear"  ( type : Integer )
		// System.out.println(" checking field transYear ..." );
		orderTrans.setTransYear( integerValue ) ;
		Assert.assertTrue( integerValue == orderTrans.getTransYear() ) ;

		//--- Test setter/getter for field "transMonth"  ( type : String )
		// System.out.println(" checking field transMonth ..." );
		orderTrans.setTransMonth( stringValue ) ;
		Assert.assertTrue( stringValue.equals( orderTrans.getTransMonth() ) ) ;

		//--- Test setter/getter for field "contactId"  ( type : Integer )
		// System.out.println(" checking field contactId ..." );
		orderTrans.setContactId( integerValue ) ;
		Assert.assertTrue( integerValue == orderTrans.getContactId() ) ;

		//--- Test setter/getter for field "contactName"  ( type : String )
		// System.out.println(" checking field contactName ..." );
		orderTrans.setContactName( stringValue ) ;
		Assert.assertTrue( stringValue.equals( orderTrans.getContactName() ) ) ;

		//--- Test setter/getter for field "contactTaxOffice"  ( type : String )
		// System.out.println(" checking field contactTaxOffice ..." );
		orderTrans.setContactTaxOffice( stringValue ) ;
		Assert.assertTrue( stringValue.equals( orderTrans.getContactTaxOffice() ) ) ;

		//--- Test setter/getter for field "contactTaxNumber"  ( type : String )
		// System.out.println(" checking field contactTaxNumber ..." );
		orderTrans.setContactTaxNumber( stringValue ) ;
		Assert.assertTrue( stringValue.equals( orderTrans.getContactTaxNumber() ) ) ;

		//--- Test setter/getter for field "contactAddress1"  ( type : String )
		// System.out.println(" checking field contactAddress1 ..." );
		orderTrans.setContactAddress1( stringValue ) ;
		Assert.assertTrue( stringValue.equals( orderTrans.getContactAddress1() ) ) ;

		//--- Test setter/getter for field "contactAddress2"  ( type : String )
		// System.out.println(" checking field contactAddress2 ..." );
		orderTrans.setContactAddress2( stringValue ) ;
		Assert.assertTrue( stringValue.equals( orderTrans.getContactAddress2() ) ) ;

		//--- Test setter/getter for field "consigner"  ( type : String )
		// System.out.println(" checking field consigner ..." );
		orderTrans.setConsigner( stringValue ) ;
		Assert.assertTrue( stringValue.equals( orderTrans.getConsigner() ) ) ;

		//--- Test setter/getter for field "recepient"  ( type : String )
		// System.out.println(" checking field recepient ..." );
		orderTrans.setRecepient( stringValue ) ;
		Assert.assertTrue( stringValue.equals( orderTrans.getRecepient() ) ) ;

		//--- Test setter/getter for field "transType"  ( type : String )
		// System.out.println(" checking field transType ..." );
		orderTrans.setTransType( stringValue ) ;
		Assert.assertTrue( stringValue.equals( orderTrans.getTransType() ) ) ;

		//--- Test setter/getter for field "excCode"  ( type : String )
		// System.out.println(" checking field excCode ..." );
		orderTrans.setExcCode( stringValue ) ;
		Assert.assertTrue( stringValue.equals( orderTrans.getExcCode() ) ) ;

		//--- Test setter/getter for field "excRate"  ( type : Double )
		// System.out.println(" checking field excRate ..." );
		orderTrans.setExcRate( doubleValue ) ;
		Assert.assertTrue( doubleValue == orderTrans.getExcRate() ) ;

		//--- Test setter/getter for field "excEquivalent"  ( type : Double )
		// System.out.println(" checking field excEquivalent ..." );
		orderTrans.setExcEquivalent( doubleValue ) ;
		Assert.assertTrue( doubleValue == orderTrans.getExcEquivalent() ) ;

		//--- Test setter/getter for field "isTransfer"  ( type : Boolean )
		// System.out.println(" checking field isTransfer ..." );
		orderTrans.setIsTransfer( true ) ;
		Assert.assertTrue( orderTrans.getIsTransfer() ) ;
		orderTrans.setIsTransfer( false ) ;
		Assert.assertFalse( orderTrans.getIsTransfer() ) ;

		//--- Test setter/getter for field "insertBy"  ( type : String )
		// System.out.println(" checking field insertBy ..." );
		orderTrans.setInsertBy( stringValue ) ;
		Assert.assertTrue( stringValue.equals( orderTrans.getInsertBy() ) ) ;

		//--- Test setter/getter for field "insertAt"  ( type : Date )
		// System.out.println(" checking field insertAt ..." );
		orderTrans.setInsertAt( dateValue ) ;
		Assert.assertTrue( dateValue.equals( orderTrans.getInsertAt() ) );

		//--- Test setter/getter for field "updateBy"  ( type : String )
		// System.out.println(" checking field updateBy ..." );
		orderTrans.setUpdateBy( stringValue ) ;
		Assert.assertTrue( stringValue.equals( orderTrans.getUpdateBy() ) ) ;

		//--- Test setter/getter for field "updateAt"  ( type : Date )
		// System.out.println(" checking field updateAt ..." );
		orderTrans.setUpdateAt( dateValue ) ;
		Assert.assertTrue( dateValue.equals( orderTrans.getUpdateAt() ) );

		//--- Test setter/getter for field "contactTransId"  ( type : Integer )
		// System.out.println(" checking field contactTransId ..." );
		orderTrans.setContactTransId( integerValue ) ;
		Assert.assertTrue( integerValue == orderTrans.getContactTransId() ) ;

		//--- Test setter/getter for field "sellerId"  ( type : Integer )
		// System.out.println(" checking field sellerId ..." );
		orderTrans.setSellerId( integerValue ) ;
		Assert.assertTrue( integerValue == orderTrans.getSellerId() ) ;

		//--- Test setter/getter for field "transSourceId"  ( type : Integer )
		// System.out.println(" checking field transSourceId ..." );
		orderTrans.setTransSourceId( integerValue ) ;
		Assert.assertTrue( integerValue == orderTrans.getTransSourceId() ) ;

		//--- Test setter/getter for field "transPointId"  ( type : Integer )
		// System.out.println(" checking field transPointId ..." );
		orderTrans.setTransPointId( integerValue ) ;
		Assert.assertTrue( integerValue == orderTrans.getTransPointId() ) ;

		//--- Test setter/getter for field "privateCodeId"  ( type : Integer )
		// System.out.println(" checking field privateCodeId ..." );
		orderTrans.setPrivateCodeId( integerValue ) ;
		Assert.assertTrue( integerValue == orderTrans.getPrivateCodeId() ) ;

		//--- Test setter/getter for field "depotId"  ( type : Integer )
		// System.out.println(" checking field depotId ..." );
		orderTrans.setDepotId( integerValue ) ;
		Assert.assertTrue( integerValue == orderTrans.getDepotId() ) ;

		//--- Test setter/getter for field "waybillId"  ( type : Integer )
		// System.out.println(" checking field waybillId ..." );
		orderTrans.setWaybillId( integerValue ) ;
		Assert.assertTrue( integerValue == orderTrans.getWaybillId() ) ;

		//--- Test setter/getter for field "invoiceId"  ( type : Integer )
		// System.out.println(" checking field invoiceId ..." );
		orderTrans.setInvoiceId( integerValue ) ;
		Assert.assertTrue( integerValue == orderTrans.getInvoiceId() ) ;

		//--- Test setter/getter for field "refModule"  ( type : String )
		// System.out.println(" checking field refModule ..." );
		orderTrans.setRefModule( stringValue ) ;
		Assert.assertTrue( stringValue.equals( orderTrans.getRefModule() ) ) ;

		//--- Test setter/getter for field "refId"  ( type : Integer )
		// System.out.println(" checking field refId ..." );
		orderTrans.setRefId( integerValue ) ;
		Assert.assertTrue( integerValue == orderTrans.getRefId() ) ;

		//--- Test setter/getter for field "statusId"  ( type : Integer )
		// System.out.println(" checking field statusId ..." );
		orderTrans.setStatusId( integerValue ) ;
		Assert.assertTrue( integerValue == orderTrans.getStatusId() ) ;

		//--- Test setter/getter for field "workspace"  ( type : Integer )
		// System.out.println(" checking field workspace ..." );
		orderTrans.setWorkspace( integerValue ) ;
		Assert.assertTrue( integerValue == orderTrans.getWorkspace() ) ;

		//--- Test setter/getter for field "version"  ( type : Integer )
		// System.out.println(" checking field version ..." );
		orderTrans.setVersion( integerValue ) ;
		Assert.assertTrue( integerValue == orderTrans.getVersion() ) ;

		
	}



}
