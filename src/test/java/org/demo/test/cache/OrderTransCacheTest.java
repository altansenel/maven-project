/*
 * JUnit test case for OrderTrans caching service
 * Created on 24 Þub 2016 ( Date ISO 2016-02-24 - Time 15:13:27 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */

package org.demo.test.cache;


import org.demo.bean.OrderTrans ;
import org.demo.cache.OrderTransCache ;

import org.junit.Assert;
import org.junit.Test;

/**
 * JUnit test case for OrderTrans caching service
 * 
 * @author Telosys Tools Generator
 *
 */
public class OrderTransCacheTest 
{
	protected static final java.util.Date now = new java.util.Date();

	private final static void populate(OrderTrans orderTrans) {
		orderTrans.setId( 1 ) ;
		orderTrans.setReceiptNo( 1 ) ;
		orderTrans.setRight( "A" ) ;
		orderTrans.setIsCompleted( false ) ;
		orderTrans.setTransDate( now ) ;
		orderTrans.setRealDate( now ) ;
		orderTrans.setDeliveryDate( now ) ;
		orderTrans.setTransNo( "A" ) ;
		orderTrans.setIsTaxInclude( false ) ;
		orderTrans.setRoundingDigits( false ) ;
		orderTrans.setTotal( 12.345 ) ;
		orderTrans.setDiscountTotal( 12.345 ) ;
		orderTrans.setSubtotal( 12.345 ) ;
		orderTrans.setRoundingDiscount( 12.345 ) ;
		orderTrans.setTotalDiscountRate( 12.345 ) ;
		orderTrans.setTaxTotal( 12.345 ) ;
		orderTrans.setNetTotal( 12.345 ) ;
		orderTrans.setPlusFactorTotal( 12.345 ) ;
		orderTrans.setMinusFactorTotal( 12.345 ) ;
		orderTrans.setDescription( "A" ) ;
		orderTrans.setTransYear( 1 ) ;
		orderTrans.setTransMonth( "A" ) ;
		orderTrans.setContactId( 1 ) ;
		orderTrans.setContactName( "A" ) ;
		orderTrans.setContactTaxOffice( "A" ) ;
		orderTrans.setContactTaxNumber( "A" ) ;
		orderTrans.setContactAddress1( "A" ) ;
		orderTrans.setContactAddress2( "A" ) ;
		orderTrans.setConsigner( "A" ) ;
		orderTrans.setRecepient( "A" ) ;
		orderTrans.setTransType( "A" ) ;
		orderTrans.setExcCode( "A" ) ;
		orderTrans.setExcRate( 12.345 ) ;
		orderTrans.setExcEquivalent( 12.345 ) ;
		orderTrans.setIsTransfer( false ) ;
		orderTrans.setInsertBy( "A" ) ;
		orderTrans.setInsertAt( now ) ;
		orderTrans.setUpdateBy( "A" ) ;
		orderTrans.setUpdateAt( now ) ;
		orderTrans.setContactTransId( 1 ) ;
		orderTrans.setSellerId( 1 ) ;
		orderTrans.setTransSourceId( 1 ) ;
		orderTrans.setTransPointId( 1 ) ;
		orderTrans.setPrivateCodeId( 1 ) ;
		orderTrans.setDepotId( 1 ) ;
		orderTrans.setWaybillId( 1 ) ;
		orderTrans.setInvoiceId( 1 ) ;
		orderTrans.setRefModule( "A" ) ;
		orderTrans.setRefId( 1 ) ;
		orderTrans.setStatusId( 1 ) ;
		orderTrans.setWorkspace( 1 ) ;
		orderTrans.setVersion( 1 ) ;
	}

	@Test
	public void testPutGetRemove() {
		
		System.out.println("Testing class OrderTransCache ..." );
		
		OrderTrans orderTrans = new OrderTrans();
		populate(orderTrans);
		System.out.println("Entity populated : " + orderTrans );
		
		OrderTransCache.putOrderTrans(orderTrans) ;	// Store in cache	
		
		OrderTrans orderTrans2 = OrderTransCache.getOrderTrans( orderTrans.getId() );
		Assert.assertTrue( orderTrans == orderTrans2 ) ; // Same instance
		
		OrderTransCache.removeOrderTrans(  orderTrans.getId() ) ; // Remove from cache	
		
		OrderTrans orderTrans3 = OrderTransCache.getOrderTrans( orderTrans.getId() );
		Assert.assertTrue( null == orderTrans3 ) ; // Not in cache
		
	}
}
