/*
 * JUnit test case for StockPriceList caching service
 * Created on 24 Þub 2016 ( Date ISO 2016-02-24 - Time 15:13:29 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */

package org.demo.test.cache;


import org.demo.bean.StockPriceList ;
import org.demo.cache.StockPriceListCache ;

import org.junit.Assert;
import org.junit.Test;

/**
 * JUnit test case for StockPriceList caching service
 * 
 * @author Telosys Tools Generator
 *
 */
public class StockPriceListCacheTest 
{
	protected static final java.util.Date now = new java.util.Date();

	private final static void populate(StockPriceList stockPriceList) {
		stockPriceList.setId( 1 ) ;
		stockPriceList.setName( "A" ) ;
		stockPriceList.setStartDate( now ) ;
		stockPriceList.setEndDate( now ) ;
		stockPriceList.setIsSellPrice( false ) ;
		stockPriceList.setEffectType( "A" ) ;
		stockPriceList.setEffectDirection( "A" ) ;
		stockPriceList.setEffect( 12.345 ) ;
		stockPriceList.setDescription( "A" ) ;
		stockPriceList.setProviderCode( "A" ) ;
		stockPriceList.setInsertBy( "A" ) ;
		stockPriceList.setInsertAt( now ) ;
		stockPriceList.setUpdateBy( "A" ) ;
		stockPriceList.setUpdateAt( now ) ;
		stockPriceList.setCategoryId( 1 ) ;
		stockPriceList.setExtraField0Id( 1 ) ;
		stockPriceList.setExtraField1Id( 1 ) ;
		stockPriceList.setExtraField2Id( 1 ) ;
		stockPriceList.setExtraField3Id( 1 ) ;
		stockPriceList.setExtraField4Id( 1 ) ;
		stockPriceList.setExtraField5Id( 1 ) ;
		stockPriceList.setExtraField6Id( 1 ) ;
		stockPriceList.setExtraField7Id( 1 ) ;
		stockPriceList.setExtraField8Id( 1 ) ;
		stockPriceList.setExtraField9Id( 1 ) ;
		stockPriceList.setIsActive( false ) ;
		stockPriceList.setWorkspace( 1 ) ;
		stockPriceList.setVersion( 1 ) ;
	}

	@Test
	public void testPutGetRemove() {
		
		System.out.println("Testing class StockPriceListCache ..." );
		
		StockPriceList stockPriceList = new StockPriceList();
		populate(stockPriceList);
		System.out.println("Entity populated : " + stockPriceList );
		
		StockPriceListCache.putStockPriceList(stockPriceList) ;	// Store in cache	
		
		StockPriceList stockPriceList2 = StockPriceListCache.getStockPriceList( stockPriceList.getId() );
		Assert.assertTrue( stockPriceList == stockPriceList2 ) ; // Same instance
		
		StockPriceListCache.removeStockPriceList(  stockPriceList.getId() ) ; // Remove from cache	
		
		StockPriceList stockPriceList3 = StockPriceListCache.getStockPriceList( stockPriceList.getId() );
		Assert.assertTrue( null == stockPriceList3 ) ; // Not in cache
		
	}
}
