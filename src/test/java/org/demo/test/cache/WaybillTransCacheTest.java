/*
 * JUnit test case for WaybillTrans caching service
 * Created on 24 Þub 2016 ( Date ISO 2016-02-24 - Time 15:13:30 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */

package org.demo.test.cache;


import org.demo.bean.WaybillTrans ;
import org.demo.cache.WaybillTransCache ;

import org.junit.Assert;
import org.junit.Test;

/**
 * JUnit test case for WaybillTrans caching service
 * 
 * @author Telosys Tools Generator
 *
 */
public class WaybillTransCacheTest 
{
	protected static final java.util.Date now = new java.util.Date();

	private final static void populate(WaybillTrans waybillTrans) {
		waybillTrans.setId( 1 ) ;
		waybillTrans.setReceiptNo( 1 ) ;
		waybillTrans.setRight( "A" ) ;
		waybillTrans.setIsCompleted( false ) ;
		waybillTrans.setTransDate( now ) ;
		waybillTrans.setRealDate( now ) ;
		waybillTrans.setDeliveryDate( now ) ;
		waybillTrans.setTransNo( "A" ) ;
		waybillTrans.setIsTaxInclude( false ) ;
		waybillTrans.setRoundingDigits( false ) ;
		waybillTrans.setTotal( 12.345 ) ;
		waybillTrans.setDiscountTotal( 12.345 ) ;
		waybillTrans.setSubtotal( 12.345 ) ;
		waybillTrans.setRoundingDiscount( 12.345 ) ;
		waybillTrans.setTotalDiscountRate( 12.345 ) ;
		waybillTrans.setTaxTotal( 12.345 ) ;
		waybillTrans.setNetTotal( 12.345 ) ;
		waybillTrans.setPlusFactorTotal( 12.345 ) ;
		waybillTrans.setMinusFactorTotal( 12.345 ) ;
		waybillTrans.setDescription( "A" ) ;
		waybillTrans.setTransYear( 1 ) ;
		waybillTrans.setTransMonth( "A" ) ;
		waybillTrans.setContactId( 1 ) ;
		waybillTrans.setContactName( "A" ) ;
		waybillTrans.setContactTaxOffice( "A" ) ;
		waybillTrans.setContactTaxNumber( "A" ) ;
		waybillTrans.setContactAddress1( "A" ) ;
		waybillTrans.setContactAddress2( "A" ) ;
		waybillTrans.setConsigner( "A" ) ;
		waybillTrans.setRecepient( "A" ) ;
		waybillTrans.setTransType( "A" ) ;
		waybillTrans.setExcCode( "A" ) ;
		waybillTrans.setExcRate( 12.345 ) ;
		waybillTrans.setExcEquivalent( 12.345 ) ;
		waybillTrans.setIsTransfer( false ) ;
		waybillTrans.setInsertBy( "A" ) ;
		waybillTrans.setInsertAt( now ) ;
		waybillTrans.setUpdateBy( "A" ) ;
		waybillTrans.setUpdateAt( now ) ;
		waybillTrans.setContactTransId( 1 ) ;
		waybillTrans.setSellerId( 1 ) ;
		waybillTrans.setTransSourceId( 1 ) ;
		waybillTrans.setTransPointId( 1 ) ;
		waybillTrans.setPrivateCodeId( 1 ) ;
		waybillTrans.setDepotId( 1 ) ;
		waybillTrans.setInvoiceId( 1 ) ;
		waybillTrans.setRefModule( "A" ) ;
		waybillTrans.setRefId( 1 ) ;
		waybillTrans.setStatusId( 1 ) ;
		waybillTrans.setWorkspace( 1 ) ;
		waybillTrans.setVersion( 1 ) ;
	}

	@Test
	public void testPutGetRemove() {
		
		System.out.println("Testing class WaybillTransCache ..." );
		
		WaybillTrans waybillTrans = new WaybillTrans();
		populate(waybillTrans);
		System.out.println("Entity populated : " + waybillTrans );
		
		WaybillTransCache.putWaybillTrans(waybillTrans) ;	// Store in cache	
		
		WaybillTrans waybillTrans2 = WaybillTransCache.getWaybillTrans( waybillTrans.getId() );
		Assert.assertTrue( waybillTrans == waybillTrans2 ) ; // Same instance
		
		WaybillTransCache.removeWaybillTrans(  waybillTrans.getId() ) ; // Remove from cache	
		
		WaybillTrans waybillTrans3 = WaybillTransCache.getWaybillTrans( waybillTrans.getId() );
		Assert.assertTrue( null == waybillTrans3 ) ; // Not in cache
		
	}
}
