/*
 * JUnit test case for Contact caching service
 * Created on 24 Þub 2016 ( Date ISO 2016-02-24 - Time 15:13:25 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */

package org.demo.test.cache;


import org.demo.bean.Contact ;
import org.demo.cache.ContactCache ;

import org.junit.Assert;
import org.junit.Test;

/**
 * JUnit test case for Contact caching service
 * 
 * @author Telosys Tools Generator
 *
 */
public class ContactCacheTest 
{
	protected static final java.util.Date now = new java.util.Date();

	private final static void populate(Contact contact) {
		contact.setId( 1 ) ;
		contact.setCode( "A" ) ;
		contact.setName( "A" ) ;
		contact.setTaxOffice( "A" ) ;
		contact.setTaxNumber( "A" ) ;
		contact.setTcKimlik( "A" ) ;
		contact.setRelevant( "A" ) ;
		contact.setPhone( "A" ) ;
		contact.setFax( "A" ) ;
		contact.setMobilePhone( "A" ) ;
		contact.setAddress1( "A" ) ;
		contact.setAddress2( "A" ) ;
		contact.setCity( "A" ) ;
		contact.setCountry( "A" ) ;
		contact.setEmail( "A" ) ;
		contact.setWebsite( "A" ) ;
		contact.setStatus( "A" ) ;
		contact.setExcCode( "A" ) ;
		contact.setNote( "A" ) ;
		contact.setIsActive( false ) ;
		contact.setInsertBy( "A" ) ;
		contact.setInsertAt( now ) ;
		contact.setUpdateBy( "A" ) ;
		contact.setUpdateAt( now ) ;
		contact.setSellerId( 1 ) ;
		contact.setCategoryId( 1 ) ;
		contact.setPriceListId( 1 ) ;
		contact.setExtraField0Id( 1 ) ;
		contact.setExtraField1Id( 1 ) ;
		contact.setExtraField2Id( 1 ) ;
		contact.setExtraField3Id( 1 ) ;
		contact.setExtraField4Id( 1 ) ;
		contact.setExtraField5Id( 1 ) ;
		contact.setExtraField6Id( 1 ) ;
		contact.setExtraField7Id( 1 ) ;
		contact.setExtraField8Id( 1 ) ;
		contact.setExtraField9Id( 1 ) ;
		contact.setWorkspace( 1 ) ;
		contact.setVersion( 1 ) ;
	}

	@Test
	public void testPutGetRemove() {
		
		System.out.println("Testing class ContactCache ..." );
		
		Contact contact = new Contact();
		populate(contact);
		System.out.println("Entity populated : " + contact );
		
		ContactCache.putContact(contact) ;	// Store in cache	
		
		Contact contact2 = ContactCache.getContact( contact.getId() );
		Assert.assertTrue( contact == contact2 ) ; // Same instance
		
		ContactCache.removeContact(  contact.getId() ) ; // Remove from cache	
		
		Contact contact3 = ContactCache.getContact( contact.getId() );
		Assert.assertTrue( null == contact3 ) ; // Not in cache
		
	}
}
