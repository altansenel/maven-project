/*
 * JUnit test case for InvoiceTransSource caching service
 * Created on 24 Þub 2016 ( Date ISO 2016-02-24 - Time 15:13:27 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */

package org.demo.test.cache;


import org.demo.bean.InvoiceTransSource ;
import org.demo.cache.InvoiceTransSourceCache ;

import org.junit.Assert;
import org.junit.Test;

/**
 * JUnit test case for InvoiceTransSource caching service
 * 
 * @author Telosys Tools Generator
 *
 */
public class InvoiceTransSourceCacheTest 
{
	protected static final java.util.Date now = new java.util.Date();

	private final static void populate(InvoiceTransSource invoiceTransSource) {
		invoiceTransSource.setId( 1 ) ;
		invoiceTransSource.setName( "A" ) ;
		invoiceTransSource.setSuitableRight( "A" ) ;
		invoiceTransSource.setHasCostEffect( false ) ;
		invoiceTransSource.setHasStockEffect( false ) ;
		invoiceTransSource.setInsertBy( "A" ) ;
		invoiceTransSource.setInsertAt( now ) ;
		invoiceTransSource.setUpdateBy( "A" ) ;
		invoiceTransSource.setUpdateAt( now ) ;
		invoiceTransSource.setIsActive( false ) ;
		invoiceTransSource.setWorkspace( 1 ) ;
		invoiceTransSource.setVersion( 1 ) ;
	}

	@Test
	public void testPutGetRemove() {
		
		System.out.println("Testing class InvoiceTransSourceCache ..." );
		
		InvoiceTransSource invoiceTransSource = new InvoiceTransSource();
		populate(invoiceTransSource);
		System.out.println("Entity populated : " + invoiceTransSource );
		
		InvoiceTransSourceCache.putInvoiceTransSource(invoiceTransSource) ;	// Store in cache	
		
		InvoiceTransSource invoiceTransSource2 = InvoiceTransSourceCache.getInvoiceTransSource( invoiceTransSource.getId() );
		Assert.assertTrue( invoiceTransSource == invoiceTransSource2 ) ; // Same instance
		
		InvoiceTransSourceCache.removeInvoiceTransSource(  invoiceTransSource.getId() ) ; // Remove from cache	
		
		InvoiceTransSource invoiceTransSource3 = InvoiceTransSourceCache.getInvoiceTransSource( invoiceTransSource.getId() );
		Assert.assertTrue( null == invoiceTransSource3 ) ; // Not in cache
		
	}
}
